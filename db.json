{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CHAME","path":"CHAME","modified":1,"renderable":0},{"_id":"source/images/2023-11-02 (1).png","path":"images/2023-11-02 (1).png","modified":1,"renderable":0},{"_id":"source/images/2023-11-02 (15).png","path":"images/2023-11-02 (15).png","modified":1,"renderable":0},{"_id":"source/images/2023-11-02 (6).png","path":"images/2023-11-02 (6).png","modified":1,"renderable":0},{"_id":"source/images/2023-11-02 (5).png","path":"images/2023-11-02 (5).png","modified":1,"renderable":0},{"_id":"source/images/bg1.png","path":"images/bg1.png","modified":1,"renderable":0},{"_id":"source/images/bg2.png","path":"images/bg2.png","modified":1,"renderable":0},{"_id":"source/images/head.png","path":"images/head.png","modified":1,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/2023-11-02 (1).png","path":"img/2023-11-02 (1).png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/2023-11-02 (15).png","path":"img/2023-11-02 (15).png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/2023-11-02 (5).png","path":"img/2023-11-02 (5).png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/bg1.png","path":"img/bg1.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/bg2.png","path":"img/bg2.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/head.png","path":"img/head.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/2023-11-02 (6).png","path":"img/2023-11-02 (6).png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CHAME","hash":"2d9404503ec23fdb8a3eb6645b11efbf3ca2190d","modified":1707047287275},{"_id":"source/_data/link.yml","hash":"a6916d38cd25f9e4887fc5bfea1f6ed2ea72e97e","modified":1706799644352},{"_id":"source/categories/index.md","hash":"c5e61badd6923f79a4bf02f9fd4f4a3787fe9ff3","modified":1706799644606},{"_id":"source/_posts/2some.md","hash":"c8735b2120c57296e1f26e8742c1d0306b1b2d51","modified":1720148429238},{"_id":"source/_posts/3wyyapp.md","hash":"0995f89b9edf17ef3eade0c2032cde9baf8a9ef9","modified":1720148429355},{"_id":"source/_posts/4Zing.md","hash":"0ef250e0233d76d55dc76e6fda51ca73bf468843","modified":1720148429360},{"_id":"source/_posts/5js_debounce.md","hash":"c7932f20057923292ab39eae6b4ce62ce2866b14","modified":1719972226907},{"_id":"source/_posts/6ospp.md","hash":"ee254fc99f64a3f59b0276942d076856a9cca5ba","modified":1718408148506},{"_id":"source/_posts/8Auth.md","hash":"9667a55df1ce9504866a426ba21078b7ba1d8c2d","modified":1720150016829},{"_id":"source/_posts/1android_local_notification.md","hash":"56b09cee6729c8e1d774e84bdd2541275a58a23c","modified":1706799644456},{"_id":"source/_posts/7long.md","hash":"847c8b7e14c97de3bc5d859ca6addffec318df52","modified":1720148428948},{"_id":"source/tags/index.md","hash":"f9278f3dca878755ddb7690b3aaec480a1f06512","modified":1706799644608},{"_id":"source/link/index.md","hash":"52186b5dfca8835541caacfbd5763995627b87ef","modified":1706799644607},{"_id":"source/_posts/6ospp/casibase.png","hash":"e9fd35df54ff28a903696750e790408f7cf7053c","modified":1718372542752},{"_id":"source/_posts/6ospp/prdetails.png","hash":"ac711702b6c434cad2615b1a2403bb39d149d591","modified":1718373816760},{"_id":"source/_posts/6ospp/prs.png","hash":"d8ed4f0ac916e3dbb732465fe57cc856306c356f","modified":1718373652591},{"_id":"source/_posts/7long/helloworld.jpg","hash":"2dbcbbd02718b910635537ae7fb985167ccd0dda","modified":1718407343985},{"_id":"source/_posts/7long/ban.jpg","hash":"8df2749f662ce0abcaaa407f6f1ce897227db537","modified":1718407328647},{"_id":"source/_posts/7long/total.jpg","hash":"7a55fb2dd3acccc5c2effe90869744f7b8d99b23","modified":1718407298167},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1700983469145},{"_id":"themes/butterfly/_config.yml","hash":"4ea043d6c24ba3e5be83d3e1d2c277abbf7c219b","modified":1700984701995},{"_id":"themes/butterfly/package.json","hash":"1e3099099a5459a30a14421c84f9ab834f54aa51","modified":1700983469194},{"_id":"themes/butterfly/plugins.yml","hash":"9b21d2395b435b0df05db1b3faf8b853d92cf027","modified":1700983469195},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1700983469150},{"_id":"themes/butterfly/README_CN.md","hash":"9d729ee2ffc5e5f703ccfbfbbb7b286d59071125","modified":1700983469146},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1700983469193},{"_id":"themes/butterfly/languages/default.yml","hash":"90e9e2f36dc51aa77eb7804ae048b4876035b12d","modified":1700983469148},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1700983469194},{"_id":"themes/butterfly/languages/en.yml","hash":"68127be0e6b44cfc5f31353d8b275c02939b3ff9","modified":1700983469148},{"_id":"themes/butterfly/README.md","hash":"20a91bea7f7ada8b8195d2abff106a7ce21bba20","modified":1700983469146},{"_id":"themes/butterfly/layout/archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1700983469149},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1700983469194},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"eed9190301095b35081aa2658204cc3f15b9f5e1","modified":1700983469143},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1700983469193},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"1392e7b8c678cdfb54f55523693e66abc7d80538","modified":1700983469149},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"2dcc70a011b37890215ae0fd6d8f8c78aa8af6b0","modified":1700983469148},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1700983469144},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1700983469150},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1700983469145},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1700983469144},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1700983469145},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1700983469161},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1700983469151},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ea8d4e8ac6af93cd268ba8f6ffcb80417bc2501e","modified":1700983469151},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1700983469196},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1700983469151},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1700983469196},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1700983469197},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1700983469197},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"ef9cd54eedf9d8de458f7d9e9203cd547f3f44d2","modified":1700983469197},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1700983469198},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"0a336dfe5ed08952fa0df1532421df38a74a20d6","modified":1700983469198},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5ed2d7ef240c927fe1b7a7fb5bf9e55e2bfd55a5","modified":1700983469199},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1700983469157},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"0df22d7dbfa766a65cb6032a1f003348f4307cfe","modified":1700983469199},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"f448bf73103b88de4443e52d600e871cf3de3e32","modified":1700983469163},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"164d5f1c2d1b4cb5a813a6fc574016743a53c019","modified":1700983469203},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1700983469204},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"7ec77b3093f5de67e7032f40a5b12f1389f6f6ff","modified":1700983469204},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"c863d2732ce4bdc084f2d0db92f50f80328c1007","modified":1700983469205},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"5d08c3552f7d3c80a724ca628bff66321abe2e5a","modified":1700983469204},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"b013dc0a3d57d2caa18b89263f23871da9ec456d","modified":1700983469205},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"289f85847c58f0b2b7d98a68e370a2896edb8949","modified":1700983469206},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1700983469206},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"35d54adc92e717cc32e13515122b025fd1a98ea2","modified":1700983469206},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"dc56e5182dd3813dc977c9bf8556dcc7615e467b","modified":1700983469207},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"7c448886f230adb4f4a0208c88fff809abcb5637","modified":1700983469207},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"e611074a5a7f489a8b04afac0a3f7f882ce26532","modified":1700983469207},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1700983469199},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"cdd992c8577d583c237b6aac9f5077d8200879b2","modified":1700983469201},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"b12895e0765d596494e5526d121de0dd5a7c23d3","modified":1700983469201},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"b55f71347d2ead097c7f98c0ec792b091433345c","modified":1700983469201},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"c74d6a9b8f71e69447f7847a5f5e81555d68b140","modified":1700983469201},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"17c0095bc8d612a268cdcab000b1742dc4c6f811","modified":1700983469202},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1700983469202},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9277fead4c29dbe93976f078adaa26e8f9253da3","modified":1700983469163},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1700983469229},{"_id":"themes/butterfly/source/css/var.styl","hash":"950250f66faeb611a67540e0fa6cedbcf5a7a321","modified":1700983469229},{"_id":"themes/butterfly/source/js/main.js","hash":"59cd756a94ecdf3ec7b18f50691a8a6305f7a65a","modified":1700983469231},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"d776c670e4076ad6049dbb64cdee7a734b51d37f","modified":1700983469234},{"_id":"themes/butterfly/source/js/utils.js","hash":"7b871fe0c4456660cff4c7b9cc4ed089adac2caf","modified":1700983469234},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1700983469153},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"39e1ca0a54eb5fd3688a78737417a1aaa50914c9","modified":1700983469153},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"a7c929b90ae52b78b39b1728e3ab0e3db1cb7b9a","modified":1700983469154},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1700983469153},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1700983469154},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1700983469155},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1700983469155},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1700983469155},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"1bef867c799ba158c5417272fb137539951aa120","modified":1700983469155},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1700983469158},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1700983469156},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"e7b25a322ae861dca06d458d3f914220e92758cf","modified":1700983469156},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1700983469158},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1700983469160},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1700983469159},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1700983469160},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"194a5f310dccecee3ae0b648e4e5318f6fbbddcd","modified":1700983469159},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1700983469161},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"912df10a053db3135968e92b6fd1a707ee94c968","modified":1700983469163},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e37681bc9c169d4220f26ecda2b3d5c02b6b9a0f","modified":1700983469161},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1700983469165},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"0abad416b1974a17e5be7817931d5fe799180170","modified":1700983469162},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1700983469177},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"9b734d99963f3e7f562597dcf60485ccbf6e961c","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"766baca6ddce49d1724a02312387b292ff2d0bdc","modified":1700983469157},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1700983469189},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1700983469188},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1700983469188},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1700983469189},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"ab037bf5794638bd30da4cf7cf106e5d03b5f696","modified":1700983469189},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"dfb5e16a7e7106bb20b2ac2d0df1251d0fc79609","modified":1700983469187},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1700983469156},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1700983469190},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"8e22f53886a57a68286970d8af8b4c950fd4a1d7","modified":1700983469190},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"2084b8065e63dd045bdca3dc5992014133601e28","modified":1700983469190},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1700983469192},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1700983469191},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1700983469192},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"8df529f71e25f1c0a00e533de7944ed3d1ba7bd8","modified":1700983469193},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1700983469193},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"41054740cfbd1357138785464f6859681ca58493","modified":1700983469210},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1700983469191},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"e920dae9ce00177922468db49240f5aca0af4f64","modified":1700983469209},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"0421da07907b3d98df64239e073b23fbb3f04149","modified":1700983469209},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1700983469152},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1700983469212},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"aae70ddd126b2e40158e45036abecbfa33cbfbba","modified":1700983469214},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1700983469214},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1700983469214},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"5e27f7842af82ff7498d4b59787ce9ca90fa9e6f","modified":1700983469215},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1700983469216},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"66a7a0e3c58ac23c81afe9fe18834b9db9c42698","modified":1700983469215},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"f2d1a0f9c890dd2313b2996a0ec7130999a24813","modified":1700983469216},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1700983469217},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"c0b11a1a5f52e3a6af4e312a8134c93eda18a7dd","modified":1700983469217},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"80ee9d0bfe5d38aac1f0cdcea5fc88b71d310041","modified":1700983469218},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"0322237e762db401d7b4aa33168d0b9334a9ec26","modified":1700983469218},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"15ea7564b2e3bf46bc91fb6e49c94d057b37caaf","modified":1700983469218},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"a22fd15048d21452f0015d0765d295d730203308","modified":1700983469220},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1700983469216},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1700983469220},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1700983469221},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1700983469221},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"df7a51fcabbadab5aa31770e3202a47c9599bbb7","modified":1700983469221},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"dbc855795a881f8c805bf5c9c5c4d5d542a648ec","modified":1700983469219},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"a977cd8161ef4d6ddd5293e81403519076657430","modified":1700983469222},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"0b23010154e19f37f0c4af0110f9f834d6d41a13","modified":1700983469224},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1700983469222},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1700983469223},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1700983469221},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1700983469225},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1700983469225},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"8a53d7ba5ca2f5eb4124b684e7845b648583f658","modified":1700983469224},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"3e9355b76f87e2ee90f652855282b37ab5ae0b3e","modified":1700983469225},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1700983469226},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1700983469227},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1700983469226},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1700983469227},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1700983469228},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"353b95f9a6c2c1e777d978118cb61f909ccbf89c","modified":1700983469227},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1700983469228},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"8f95aca305b56ccd7c8c7367b03d26db816ebd5f","modified":1700983469164},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"a7c2fe73cc05ad3525909b86ad0ede1a9f2d3b48","modified":1700983469233},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"58f37823f6cd9a194fb50f7ca7c2233e49939034","modified":1700983469164},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"ab3904451ae1d78903424b8b2ef815c8571e1749","modified":1700983469234},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"19b5cfa1f77781246e02967cefe149f19170e45f","modified":1700983469165},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1700983469166},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1700983469166},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1700983469167},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1700983469166},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"7e233f872aea6fd6beccdc9efd86b1bf9ec9f12d","modified":1700983469167},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1700983469168},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1700983469168},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"08a85e52fc800d3562df869e5e2613313e76fce6","modified":1700983469169},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1700983469170},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"09d2ab2570b67e6f09244a898ccab5567cb82ace","modified":1700983469169},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"799da8f3015e6fe440681b21644bcb3810a5518c","modified":1700983469170},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"0d960849d5b05d27ec87627b983ca35f2411b9e8","modified":1700983469170},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"6d40b521eec4136f6742c548a4445ed593470b1b","modified":1700983469171},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"eb8f2919ea9d52f6c829ffa8052ba2585d0b6b98","modified":1700983469172},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"f78c9c20c86d58c7cf099f6f8d6097103d7d43e5","modified":1700983469173},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"364d1fd655baca9132038ef1e312abde2c0bc7de","modified":1700983469173},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"11f5dca1432e59f22955aaf4ac3e9de6b286d887","modified":1700983469173},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"1eab7ca1cb16c6786f9c3ca0efef8cc15e444ab4","modified":1700983469174},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"db6713d2b90eb8183f86ac92c26761a8501c0ddb","modified":1700983469174},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"1c86c8fc1a28514a02a1f6a25ca9ec05eb3955b7","modified":1700983469174},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1700983469175},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"09c2ef4bc6d005f96dfa48b1d9af1ec095c5266d","modified":1700983469175},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"0b44f6de0f5632b55298d506833f45dae46a6346","modified":1700983469176},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"7f450664e6323a076ae59c393b0f22167cfa82e5","modified":1700983469175},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b65a42167df5fb07e2a63f312a58c321d3112a90","modified":1700983469176},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1700983469178},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"4ed7c74087e81c6fcaf4fca7dced58b4e19f4cb1","modified":1700983469177},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1700983469178},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"bb944185f4bb9f9a9b9d70ee215f66ccd6d4c6cf","modified":1700983469179},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"7e56b48ab49bd03606d781aaa06f1f1132639ff2","modified":1700983469177},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"c682e4d61017fb0dd2e837bfcc242371f1a13364","modified":1700983469179},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"6de0c412a4d9b65c576ec79e1949925823c90fa6","modified":1700983469180},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0b2ef6e853720f453c5048015f877bc91f85a6f7","modified":1700983469181},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"d8898e427acd91ceb97d6a7ee3acb011ca86b9fc","modified":1700983469180},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"a4e52188b6effeee1df2a01dcbf4105de76a61a8","modified":1700983469181},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1700983469181},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"17520a86de12ae585289463c066d3ac91b78a2ff","modified":1700983469182},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1700983469184},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ecfff55b2c7f6d87ce4d5028fdf9f8c0bf155c73","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"0544d91c0bc9e26e0fe1b5ff490f4a8540ed1ee1","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1700983469185},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1700983469186},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"420a86e73d0d748ac234fd00d06d9e433ca5e3f2","modified":1700983469185},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"52a06a2e039f44383085333cac69f3f4e7d0ad3a","modified":1700983469185},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"c16ee69b5ca8db016db0508d014ae0867c4ce929","modified":1700983469186},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1700983469187},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1700983469211},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1700983469210},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1700983469211},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1700983469211},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"7c9cc43e1d2577f7151039d58e603c30860fd281","modified":1700983469212},{"_id":"source/_posts/7long/login.jpg","hash":"1d404c6941dc2d468ff1a49b58f6dfc0435d5f59","modified":1718407352895},{"_id":"source/images/bg1.png","hash":"393852dfcd9a76a3d1afa5e7f821fe9964875baf","modified":1706799644426},{"_id":"source/_img/bg1.png","hash":"393852dfcd9a76a3d1afa5e7f821fe9964875baf","modified":1706799644426},{"_id":"source/_img/2023-11-02 (5).png","hash":"a53d23703c4129c44cb6b7a7b969573c72d51317","modified":1706799644401},{"_id":"source/images/2023-11-02 (5).png","hash":"a53d23703c4129c44cb6b7a7b969573c72d51317","modified":1706799644401},{"_id":"themes/butterfly/source/img/bg1.png","hash":"393852dfcd9a76a3d1afa5e7f821fe9964875baf","modified":1698930846863},{"_id":"source/_img/head.png","hash":"c2a9ce16d9fb539f7d130e847aa38b185f1dee96","modified":1706799644455},{"_id":"source/images/head.png","hash":"c2a9ce16d9fb539f7d130e847aa38b185f1dee96","modified":1706799644455},{"_id":"source/_img/2023-11-02 (15).png","hash":"a0f99af33c4b05426e5c760b18b10451b6c58cc7","modified":1706799644388},{"_id":"source/images/2023-11-02 (6).png","hash":"a8fd44de0742a1fc69fc48a1f507554d60d8f699","modified":1706799644415},{"_id":"source/images/2023-11-02 (15).png","hash":"a0f99af33c4b05426e5c760b18b10451b6c58cc7","modified":1706799644388},{"_id":"source/_img/2023-11-02 (6).png","hash":"a8fd44de0742a1fc69fc48a1f507554d60d8f699","modified":1706799644415},{"_id":"source/images/bg2.png","hash":"e278ca160091210b29606c9458c041d252aa5298","modified":1706799644441},{"_id":"source/_img/bg2.png","hash":"e278ca160091210b29606c9458c041d252aa5298","modified":1706799644441},{"_id":"themes/butterfly/source/img/2023-11-02 (5).png","hash":"a53d23703c4129c44cb6b7a7b969573c72d51317","modified":1698930937453},{"_id":"themes/butterfly/source/img/head.png","hash":"c2a9ce16d9fb539f7d130e847aa38b185f1dee96","modified":1698931257807},{"_id":"themes/butterfly/source/img/2023-11-02 (15).png","hash":"a0f99af33c4b05426e5c760b18b10451b6c58cc7","modified":1698931908920},{"_id":"themes/butterfly/source/img/2023-11-02 (6).png","hash":"a8fd44de0742a1fc69fc48a1f507554d60d8f699","modified":1698930952075},{"_id":"themes/butterfly/source/img/bg2.png","hash":"e278ca160091210b29606c9458c041d252aa5298","modified":1698930838983},{"_id":"source/_img/2023-11-02 (1).png","hash":"a623974a89c8f5b051a1f1ab72933cdcc8a77251","modified":1706799644372},{"_id":"source/images/2023-11-02 (1).png","hash":"a623974a89c8f5b051a1f1ab72933cdcc8a77251","modified":1706799644372},{"_id":"themes/butterfly/source/img/2023-11-02 (1).png","hash":"a623974a89c8f5b051a1f1ab72933cdcc8a77251","modified":1698930770120}],"Category":[],"Data":[{"_id":"link","data":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}],"Page":[{"title":"分类","date":"2024-02-01T15:00:44.606Z","updated":"2024-02-01T15:00:44.606Z","type":"categories","comments":1,"description":null,"keywords":null,"top_img":null,"mathjax":null,"katex":null,"aside":null,"aplayer":null,"highlight_shrink":null,"random":null,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: ':year-:month-:day :hour:00:00'\nupdated:\ntype: \"categories\"\ncomments:\ndescription:\nkeywords:\ntop_img:\nmathjax:\nkatex:\naside:\naplayer:\nhighlight_shrink:\nrandom:\n---\n","path":"categories/index.html","layout":"page","_id":"cly84y85d0000gg6kgcpkfpwy","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"友情链接","date":"2024-02-01T15:00:44.607Z","updated":"2024-02-01T15:00:44.607Z","type":"link","comments":1,"description":null,"keywords":null,"top_img":null,"mathjax":null,"katex":null,"aside":null,"aplayer":null,"highlight_shrink":null,"random":null,"_content":"","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: ':year-:month-:day :hour:00:00'\nupdated:\ntype: link\ncomments:\ndescription:\nkeywords:\ntop_img:\nmathjax:\nkatex:\naside:\naplayer:\nhighlight_shrink:\nrandom:\n---\n","path":"link/index.html","layout":"page","_id":"cly84y85q0002gg6kedc7fua8","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"标签","date":"2024-02-01T15:00:44.608Z","updated":"2024-02-01T15:00:44.608Z","type":"tags","comments":1,"description":null,"keywords":null,"top_img":null,"mathjax":null,"katex":null,"aside":null,"aplayer":null,"highlight_shrink":null,"random":true,"order":1,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: ':year-:month-:day :hour:00:00'\nupdated:\ntype: \"tags\"\ncomments:\ndescription:\nkeywords:\ntop_img:\nmathjax:\nkatex:\naside:\naplayer:\nhighlight_shrink:\nrandom: true\norder: 1\n---\n","path":"tags/index.html","layout":"page","_id":"cly84y85z0005gg6ka96rdbql","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""}],"Post":[{"layout":"posts","title":"一个奇怪的bug解决（误）经历","date":"2023-12-03T02:47:29.000Z","_content":"\n# 一个奇怪的实现经历\n\n## 背景\n\n事情是这样的:2023年十一月的一个晚上，本人正陷于就业和找实习的泥潭中，焦虑不已。\n于是，遂观于某位学长的前端就业讲座之中，讲到最后，学长提到了“开源项目”，大惊。\n原因是本人上学期一直想投入到某个开源项目里，奈何实力不允许，便搁置。\n搁置也罢，罢不了的是，由于太忙，竟然完全忘了“开源项目”这个概念。\n于是便突发奇想：\n~~自己开源一个项目。~~\n做一个日期闹钟app，不仅在对应的时间提醒，还可以在对应的一段时间一直浮现在桌面上\n\n那么这时候就有人要问了：为什么不在应用商店找一个呢？\n原因有二：1.外面的app太繁杂 2.我愿意\n\n## 实现:系统通知功能\n\n几经翻找，发现flutter官方并没有提供闹钟的插件，在第三方库中找到了一个名为：flutter location notice的插件。\n\n事实上，几乎推进的很顺利，直到我发现了一个奇怪的属性。\n\n```dart\n const AndroidNotificationDetails androidNotificationDetails =\n    AndroidNotificationDetails('your channel id', 'your channel name',\n        channelDescription: 'your channel description',\n        importance: Importance.max,\n        priority: Priority.high,\n        ticker: 'ticker');\nconst NotificationDetails notificationDetails =\n    NotificationDetails(android: androidNotificationDetails);\nawait flutterLocalNotificationsPlugin.show(\n    0, 'plain title', 'plain body', notificationDetails,\n    payload: 'item x');\n```\n\n什么是channel id!？什么是channel name!？\n\n### 第一步:联想\n\n我之前做过一个腾讯云储存、腾讯云聊天的项目，里面有一个id的概念，那么这个channel id的获取方式是不是类似呢？\n思考思考思考思考思考，发现应该不是，这个channel id是一个字符串\n我的云储存云聊天，是基于腾讯云服务器的，理应要一个id\n但是提醒功能，只是基于本地的，理应不需要一个id\n\n### 第二步:stackoverflow\n\n这一步上，很快，我找到了一篇类似的问题\n\n#### [flutter local notification: what's the channel id?](https://stackoverflow.com/questions/53803552/flutter-local-notification-whats-the-channel-id)\n\n喜悦之情溢于言表，然而细细看去\n这篇问题的答案对于我来说就是驴唇不对马嘴：\n\n我要问的是： channel id是什么？怎么获取？\n而不是：channel id 有什么用\n（悲伤）\n\n一秒回到解放前\n\n### 第三步: developer\n\n究其技术原因，不过是利用了android method channel，封装了一些方法\n实现功能还是要依靠原生android的api\n\n既然如此，那么我就去看看android developer的文档吧!\n\n#### [创建和管理通知渠道](https://developer.android.com/training/notify-user/channels?hl=zh-cn#CreateChannel)\n\n> 通知渠道是用户可在 Android 系统的通知设置中看到的通知类别。您可以为您的应用创建多个通知渠道。\n> 例如，您可以为您的应用的每个通知类型创建一个通知渠道。您可以在每个渠道上设置通知行为，例如您可以在某些渠道上启用或禁用通知提示、在其他渠道上显示通知标记、或在其他渠道上启用或禁用通知徽标。\n\n所以，通知渠道应该指的是：弹窗、声音、震动等等\n但是，文档里面并没有提到channel id的获取方式\n\n### 第四步:从头再捋一遍\n\n既然哪里都没有提到channel id的获取方式，那么我就从头再完成一遍插件的实现吧！\n\n第一步，初始化\n\n```Dart\nFlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =\n      FlutterLocalNotificationsPlugin();\nconst AndroidInitializationSettings initializationSettingsAndroid =\n      AndroidInitializationSettings('app_icon');\nfinal InitializationSettings initializationSettings = InitializationSettings(\n      android: initializationSettingsAndroid);\nawait flutterLocalNotificationsPlugin.initialize(initializationSettings,\n      onDidReceiveNotificationResponse: onDidReceiveNotificationResponse);\n```\n\n第二步，创建通知渠道\n\n```Dart\nconst AndroidNotificationDetails androidPlatformChannelSpecifics =\n      AndroidNotificationDetails('your channel id', 'your channel name',\n          'your channel description',\n          importance: Importance.max,\n          priority: Priority.high,\n          showWhen: false);\n```\n\n在这时,我凭借一种摆烂直觉，将channel id改为了一个随机字符串，然后运行，发现，没有任何问题，通知竟然也正常弹出了\n\n# 什么是channel id!？什么是channel name!？\n","source":"_posts/1android_local_notification.md","raw":"---\nlayout: posts\ntitle: 一个奇怪的bug解决（误）经历\ndate: 2023-12-03 10:47:29\ntags:\n  - android\n  - flutter\n---\n\n# 一个奇怪的实现经历\n\n## 背景\n\n事情是这样的:2023年十一月的一个晚上，本人正陷于就业和找实习的泥潭中，焦虑不已。\n于是，遂观于某位学长的前端就业讲座之中，讲到最后，学长提到了“开源项目”，大惊。\n原因是本人上学期一直想投入到某个开源项目里，奈何实力不允许，便搁置。\n搁置也罢，罢不了的是，由于太忙，竟然完全忘了“开源项目”这个概念。\n于是便突发奇想：\n~~自己开源一个项目。~~\n做一个日期闹钟app，不仅在对应的时间提醒，还可以在对应的一段时间一直浮现在桌面上\n\n那么这时候就有人要问了：为什么不在应用商店找一个呢？\n原因有二：1.外面的app太繁杂 2.我愿意\n\n## 实现:系统通知功能\n\n几经翻找，发现flutter官方并没有提供闹钟的插件，在第三方库中找到了一个名为：flutter location notice的插件。\n\n事实上，几乎推进的很顺利，直到我发现了一个奇怪的属性。\n\n```dart\n const AndroidNotificationDetails androidNotificationDetails =\n    AndroidNotificationDetails('your channel id', 'your channel name',\n        channelDescription: 'your channel description',\n        importance: Importance.max,\n        priority: Priority.high,\n        ticker: 'ticker');\nconst NotificationDetails notificationDetails =\n    NotificationDetails(android: androidNotificationDetails);\nawait flutterLocalNotificationsPlugin.show(\n    0, 'plain title', 'plain body', notificationDetails,\n    payload: 'item x');\n```\n\n什么是channel id!？什么是channel name!？\n\n### 第一步:联想\n\n我之前做过一个腾讯云储存、腾讯云聊天的项目，里面有一个id的概念，那么这个channel id的获取方式是不是类似呢？\n思考思考思考思考思考，发现应该不是，这个channel id是一个字符串\n我的云储存云聊天，是基于腾讯云服务器的，理应要一个id\n但是提醒功能，只是基于本地的，理应不需要一个id\n\n### 第二步:stackoverflow\n\n这一步上，很快，我找到了一篇类似的问题\n\n#### [flutter local notification: what's the channel id?](https://stackoverflow.com/questions/53803552/flutter-local-notification-whats-the-channel-id)\n\n喜悦之情溢于言表，然而细细看去\n这篇问题的答案对于我来说就是驴唇不对马嘴：\n\n我要问的是： channel id是什么？怎么获取？\n而不是：channel id 有什么用\n（悲伤）\n\n一秒回到解放前\n\n### 第三步: developer\n\n究其技术原因，不过是利用了android method channel，封装了一些方法\n实现功能还是要依靠原生android的api\n\n既然如此，那么我就去看看android developer的文档吧!\n\n#### [创建和管理通知渠道](https://developer.android.com/training/notify-user/channels?hl=zh-cn#CreateChannel)\n\n> 通知渠道是用户可在 Android 系统的通知设置中看到的通知类别。您可以为您的应用创建多个通知渠道。\n> 例如，您可以为您的应用的每个通知类型创建一个通知渠道。您可以在每个渠道上设置通知行为，例如您可以在某些渠道上启用或禁用通知提示、在其他渠道上显示通知标记、或在其他渠道上启用或禁用通知徽标。\n\n所以，通知渠道应该指的是：弹窗、声音、震动等等\n但是，文档里面并没有提到channel id的获取方式\n\n### 第四步:从头再捋一遍\n\n既然哪里都没有提到channel id的获取方式，那么我就从头再完成一遍插件的实现吧！\n\n第一步，初始化\n\n```Dart\nFlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =\n      FlutterLocalNotificationsPlugin();\nconst AndroidInitializationSettings initializationSettingsAndroid =\n      AndroidInitializationSettings('app_icon');\nfinal InitializationSettings initializationSettings = InitializationSettings(\n      android: initializationSettingsAndroid);\nawait flutterLocalNotificationsPlugin.initialize(initializationSettings,\n      onDidReceiveNotificationResponse: onDidReceiveNotificationResponse);\n```\n\n第二步，创建通知渠道\n\n```Dart\nconst AndroidNotificationDetails androidPlatformChannelSpecifics =\n      AndroidNotificationDetails('your channel id', 'your channel name',\n          'your channel description',\n          importance: Importance.max,\n          priority: Priority.high,\n          showWhen: false);\n```\n\n在这时,我凭借一种摆烂直觉，将channel id改为了一个随机字符串，然后运行，发现，没有任何问题，通知竟然也正常弹出了\n\n# 什么是channel id!？什么是channel name!？\n","slug":"1android_local_notification","published":1,"updated":"2024-02-01T15:00:44.456Z","comments":1,"photos":[],"link":"","_id":"cly84y85k0001gg6k3ihf6wqy","content":"<h1 id=\"一个奇怪的实现经历\"><a href=\"#一个奇怪的实现经历\" class=\"headerlink\" title=\"一个奇怪的实现经历\"></a>一个奇怪的实现经历</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>事情是这样的:2023年十一月的一个晚上，本人正陷于就业和找实习的泥潭中，焦虑不已。<br>于是，遂观于某位学长的前端就业讲座之中，讲到最后，学长提到了“开源项目”，大惊。<br>原因是本人上学期一直想投入到某个开源项目里，奈何实力不允许，便搁置。<br>搁置也罢，罢不了的是，由于太忙，竟然完全忘了“开源项目”这个概念。<br>于是便突发奇想：<br><del>自己开源一个项目。</del><br>做一个日期闹钟app，不仅在对应的时间提醒，还可以在对应的一段时间一直浮现在桌面上</p>\n<p>那么这时候就有人要问了：为什么不在应用商店找一个呢？<br>原因有二：1.外面的app太繁杂 2.我愿意</p>\n<h2 id=\"实现-系统通知功能\"><a href=\"#实现-系统通知功能\" class=\"headerlink\" title=\"实现:系统通知功能\"></a>实现:系统通知功能</h2><p>几经翻找，发现flutter官方并没有提供闹钟的插件，在第三方库中找到了一个名为：flutter location notice的插件。</p>\n<p>事实上，几乎推进的很顺利，直到我发现了一个奇怪的属性。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> AndroidNotificationDetails androidNotificationDetails =</span><br><span class=\"line\">    AndroidNotificationDetails(<span class=\"string\">&#x27;your channel id&#x27;</span>, <span class=\"string\">&#x27;your channel name&#x27;</span>,</span><br><span class=\"line\">        channelDescription: <span class=\"string\">&#x27;your channel description&#x27;</span>,</span><br><span class=\"line\">        importance: Importance.max,</span><br><span class=\"line\">        priority: Priority.high,</span><br><span class=\"line\">        ticker: <span class=\"string\">&#x27;ticker&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> NotificationDetails notificationDetails =</span><br><span class=\"line\">    NotificationDetails(android: androidNotificationDetails);</span><br><span class=\"line\"><span class=\"keyword\">await</span> flutterLocalNotificationsPlugin.<span class=\"keyword\">show</span>(</span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"string\">&#x27;plain title&#x27;</span>, <span class=\"string\">&#x27;plain body&#x27;</span>, notificationDetails,</span><br><span class=\"line\">    payload: <span class=\"string\">&#x27;item x&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>什么是channel id!？什么是channel name!？</p>\n<h3 id=\"第一步-联想\"><a href=\"#第一步-联想\" class=\"headerlink\" title=\"第一步:联想\"></a>第一步:联想</h3><p>我之前做过一个腾讯云储存、腾讯云聊天的项目，里面有一个id的概念，那么这个channel id的获取方式是不是类似呢？<br>思考思考思考思考思考，发现应该不是，这个channel id是一个字符串<br>我的云储存云聊天，是基于腾讯云服务器的，理应要一个id<br>但是提醒功能，只是基于本地的，理应不需要一个id</p>\n<h3 id=\"第二步-stackoverflow\"><a href=\"#第二步-stackoverflow\" class=\"headerlink\" title=\"第二步:stackoverflow\"></a>第二步:stackoverflow</h3><p>这一步上，很快，我找到了一篇类似的问题</p>\n<h4 id=\"flutter-local-notification-what’s-the-channel-id\"><a href=\"#flutter-local-notification-what’s-the-channel-id\" class=\"headerlink\" title=\"flutter local notification: what’s the channel id?\"></a><a href=\"https://stackoverflow.com/questions/53803552/flutter-local-notification-whats-the-channel-id\">flutter local notification: what’s the channel id?</a></h4><p>喜悦之情溢于言表，然而细细看去<br>这篇问题的答案对于我来说就是驴唇不对马嘴：</p>\n<p>我要问的是： channel id是什么？怎么获取？<br>而不是：channel id 有什么用<br>（悲伤）</p>\n<p>一秒回到解放前</p>\n<h3 id=\"第三步-developer\"><a href=\"#第三步-developer\" class=\"headerlink\" title=\"第三步: developer\"></a>第三步: developer</h3><p>究其技术原因，不过是利用了android method channel，封装了一些方法<br>实现功能还是要依靠原生android的api</p>\n<p>既然如此，那么我就去看看android developer的文档吧!</p>\n<h4 id=\"创建和管理通知渠道\"><a href=\"#创建和管理通知渠道\" class=\"headerlink\" title=\"创建和管理通知渠道\"></a><a href=\"https://developer.android.com/training/notify-user/channels?hl=zh-cn#CreateChannel\">创建和管理通知渠道</a></h4><blockquote>\n<p>通知渠道是用户可在 Android 系统的通知设置中看到的通知类别。您可以为您的应用创建多个通知渠道。<br>例如，您可以为您的应用的每个通知类型创建一个通知渠道。您可以在每个渠道上设置通知行为，例如您可以在某些渠道上启用或禁用通知提示、在其他渠道上显示通知标记、或在其他渠道上启用或禁用通知徽标。</p>\n</blockquote>\n<p>所以，通知渠道应该指的是：弹窗、声音、震动等等<br>但是，文档里面并没有提到channel id的获取方式</p>\n<h3 id=\"第四步-从头再捋一遍\"><a href=\"#第四步-从头再捋一遍\" class=\"headerlink\" title=\"第四步:从头再捋一遍\"></a>第四步:从头再捋一遍</h3><p>既然哪里都没有提到channel id的获取方式，那么我就从头再完成一遍插件的实现吧！</p>\n<p>第一步，初始化</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =</span><br><span class=\"line\">      FlutterLocalNotificationsPlugin();</span><br><span class=\"line\"><span class=\"keyword\">const</span> AndroidInitializationSettings initializationSettingsAndroid =</span><br><span class=\"line\">      AndroidInitializationSettings(<span class=\"string\">&#x27;app_icon&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">final</span> InitializationSettings initializationSettings = InitializationSettings(</span><br><span class=\"line\">      android: initializationSettingsAndroid);</span><br><span class=\"line\"><span class=\"keyword\">await</span> flutterLocalNotificationsPlugin.initialize(initializationSettings,</span><br><span class=\"line\">      onDidReceiveNotificationResponse: onDidReceiveNotificationResponse);</span><br></pre></td></tr></table></figure>\n\n<p>第二步，创建通知渠道</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> AndroidNotificationDetails androidPlatformChannelSpecifics =</span><br><span class=\"line\">      AndroidNotificationDetails(<span class=\"string\">&#x27;your channel id&#x27;</span>, <span class=\"string\">&#x27;your channel name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;your channel description&#x27;</span>,</span><br><span class=\"line\">          importance: Importance.max,</span><br><span class=\"line\">          priority: Priority.high,</span><br><span class=\"line\">          showWhen: <span class=\"keyword\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>在这时,我凭借一种摆烂直觉，将channel id改为了一个随机字符串，然后运行，发现，没有任何问题，通知竟然也正常弹出了</p>\n<h1 id=\"什么是channel-id-？什么是channel-name-？\"><a href=\"#什么是channel-id-？什么是channel-name-？\" class=\"headerlink\" title=\"什么是channel id!？什么是channel name!？\"></a>什么是channel id!？什么是channel name!？</h1>","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<h1 id=\"一个奇怪的实现经历\"><a href=\"#一个奇怪的实现经历\" class=\"headerlink\" title=\"一个奇怪的实现经历\"></a>一个奇怪的实现经历</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>事情是这样的:2023年十一月的一个晚上，本人正陷于就业和找实习的泥潭中，焦虑不已。<br>于是，遂观于某位学长的前端就业讲座之中，讲到最后，学长提到了“开源项目”，大惊。<br>原因是本人上学期一直想投入到某个开源项目里，奈何实力不允许，便搁置。<br>搁置也罢，罢不了的是，由于太忙，竟然完全忘了“开源项目”这个概念。<br>于是便突发奇想：<br><del>自己开源一个项目。</del><br>做一个日期闹钟app，不仅在对应的时间提醒，还可以在对应的一段时间一直浮现在桌面上</p>\n<p>那么这时候就有人要问了：为什么不在应用商店找一个呢？<br>原因有二：1.外面的app太繁杂 2.我愿意</p>\n<h2 id=\"实现-系统通知功能\"><a href=\"#实现-系统通知功能\" class=\"headerlink\" title=\"实现:系统通知功能\"></a>实现:系统通知功能</h2><p>几经翻找，发现flutter官方并没有提供闹钟的插件，在第三方库中找到了一个名为：flutter location notice的插件。</p>\n<p>事实上，几乎推进的很顺利，直到我发现了一个奇怪的属性。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> AndroidNotificationDetails androidNotificationDetails =</span><br><span class=\"line\">    AndroidNotificationDetails(<span class=\"string\">&#x27;your channel id&#x27;</span>, <span class=\"string\">&#x27;your channel name&#x27;</span>,</span><br><span class=\"line\">        channelDescription: <span class=\"string\">&#x27;your channel description&#x27;</span>,</span><br><span class=\"line\">        importance: Importance.max,</span><br><span class=\"line\">        priority: Priority.high,</span><br><span class=\"line\">        ticker: <span class=\"string\">&#x27;ticker&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> NotificationDetails notificationDetails =</span><br><span class=\"line\">    NotificationDetails(android: androidNotificationDetails);</span><br><span class=\"line\"><span class=\"keyword\">await</span> flutterLocalNotificationsPlugin.<span class=\"keyword\">show</span>(</span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"string\">&#x27;plain title&#x27;</span>, <span class=\"string\">&#x27;plain body&#x27;</span>, notificationDetails,</span><br><span class=\"line\">    payload: <span class=\"string\">&#x27;item x&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>什么是channel id!？什么是channel name!？</p>\n<h3 id=\"第一步-联想\"><a href=\"#第一步-联想\" class=\"headerlink\" title=\"第一步:联想\"></a>第一步:联想</h3><p>我之前做过一个腾讯云储存、腾讯云聊天的项目，里面有一个id的概念，那么这个channel id的获取方式是不是类似呢？<br>思考思考思考思考思考，发现应该不是，这个channel id是一个字符串<br>我的云储存云聊天，是基于腾讯云服务器的，理应要一个id<br>但是提醒功能，只是基于本地的，理应不需要一个id</p>\n<h3 id=\"第二步-stackoverflow\"><a href=\"#第二步-stackoverflow\" class=\"headerlink\" title=\"第二步:stackoverflow\"></a>第二步:stackoverflow</h3><p>这一步上，很快，我找到了一篇类似的问题</p>\n<h4 id=\"flutter-local-notification-what’s-the-channel-id\"><a href=\"#flutter-local-notification-what’s-the-channel-id\" class=\"headerlink\" title=\"flutter local notification: what’s the channel id?\"></a><a href=\"https://stackoverflow.com/questions/53803552/flutter-local-notification-whats-the-channel-id\">flutter local notification: what’s the channel id?</a></h4><p>喜悦之情溢于言表，然而细细看去<br>这篇问题的答案对于我来说就是驴唇不对马嘴：</p>\n<p>我要问的是： channel id是什么？怎么获取？<br>而不是：channel id 有什么用<br>（悲伤）</p>\n<p>一秒回到解放前</p>\n<h3 id=\"第三步-developer\"><a href=\"#第三步-developer\" class=\"headerlink\" title=\"第三步: developer\"></a>第三步: developer</h3><p>究其技术原因，不过是利用了android method channel，封装了一些方法<br>实现功能还是要依靠原生android的api</p>\n<p>既然如此，那么我就去看看android developer的文档吧!</p>\n<h4 id=\"创建和管理通知渠道\"><a href=\"#创建和管理通知渠道\" class=\"headerlink\" title=\"创建和管理通知渠道\"></a><a href=\"https://developer.android.com/training/notify-user/channels?hl=zh-cn#CreateChannel\">创建和管理通知渠道</a></h4><blockquote>\n<p>通知渠道是用户可在 Android 系统的通知设置中看到的通知类别。您可以为您的应用创建多个通知渠道。<br>例如，您可以为您的应用的每个通知类型创建一个通知渠道。您可以在每个渠道上设置通知行为，例如您可以在某些渠道上启用或禁用通知提示、在其他渠道上显示通知标记、或在其他渠道上启用或禁用通知徽标。</p>\n</blockquote>\n<p>所以，通知渠道应该指的是：弹窗、声音、震动等等<br>但是，文档里面并没有提到channel id的获取方式</p>\n<h3 id=\"第四步-从头再捋一遍\"><a href=\"#第四步-从头再捋一遍\" class=\"headerlink\" title=\"第四步:从头再捋一遍\"></a>第四步:从头再捋一遍</h3><p>既然哪里都没有提到channel id的获取方式，那么我就从头再完成一遍插件的实现吧！</p>\n<p>第一步，初始化</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =</span><br><span class=\"line\">      FlutterLocalNotificationsPlugin();</span><br><span class=\"line\"><span class=\"keyword\">const</span> AndroidInitializationSettings initializationSettingsAndroid =</span><br><span class=\"line\">      AndroidInitializationSettings(<span class=\"string\">&#x27;app_icon&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">final</span> InitializationSettings initializationSettings = InitializationSettings(</span><br><span class=\"line\">      android: initializationSettingsAndroid);</span><br><span class=\"line\"><span class=\"keyword\">await</span> flutterLocalNotificationsPlugin.initialize(initializationSettings,</span><br><span class=\"line\">      onDidReceiveNotificationResponse: onDidReceiveNotificationResponse);</span><br></pre></td></tr></table></figure>\n\n<p>第二步，创建通知渠道</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> AndroidNotificationDetails androidPlatformChannelSpecifics =</span><br><span class=\"line\">      AndroidNotificationDetails(<span class=\"string\">&#x27;your channel id&#x27;</span>, <span class=\"string\">&#x27;your channel name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;your channel description&#x27;</span>,</span><br><span class=\"line\">          importance: Importance.max,</span><br><span class=\"line\">          priority: Priority.high,</span><br><span class=\"line\">          showWhen: <span class=\"keyword\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>在这时,我凭借一种摆烂直觉，将channel id改为了一个随机字符串，然后运行，发现，没有任何问题，通知竟然也正常弹出了</p>\n<h1 id=\"什么是channel-id-？什么是channel-name-？\"><a href=\"#什么是channel-id-？什么是channel-name-？\" class=\"headerlink\" title=\"什么是channel id!？什么是channel name!？\"></a>什么是channel id!？什么是channel name!？</h1>"},{"layout":"posts","title":"鸟宿池边树","description":"一些关于flutter以及android的问题","date":"2024-01-13T02:47:29.000Z","_content":"总的来说，我不是一个爱写文章的人。记起来从写人生第一篇作文开始，我的写作之路就没有遇到过坦途。曾经试着反思原因，大抵是因为一些完美主义倾向。譬如写了上一句，要对下一句的方向内容乃至把字句被字句都要犹豫很久。不过这也是可贵的，古代诗人曾经有过诗句。鸟宿池边树，僧敲月下门。为人性僻耽佳句，语不惊人死不休。想来那些欧阳修、柳宗元之类的大家都曾如此。\n\n就譬如写上一段以及这一段，大抵改了二十次有余。\n\n\n\n最近还是在做我名为 ”电梯维保“ 的项目，不过近几日工作少了些枯燥。添加了些百度api定位之类的，由此引出来了种种。\n\n以下是这几日我遇到的一些问题，权当是总结，也是为了以后找起来方便。\n\n##  1. sourcetree 配置 github  SSH\n\n原因：在像往常一样用ssh拉取git仓库的时候报了 port：22   timeout错误，故此总结了两篇比较简洁的技术博客\n\n\n\n配置ssh ：https://juejin.cn/post/7224017330724175927\n\n修改config（如果没有config则新建）：https://blog.csdn.net/the__future/article/details/130038818\n\n\n\n## 2.百度api\n\n### \t1.百度api  location定位功能   封装代码\n\n以下是代码：\n\n```dart\nclass GetLocation {\n  static int count = 0;\n  static bool starLocate = false;\n  static double latitude = 0;\n  static double longitude = 0;\n\n  GetLocation();\n\n  static LocationFlutterPlugin myLocPlugin = LocationFlutterPlugin();\n  static BaiduLocation baiduLocation = BaiduLocation();\n\n  static Future<bool> locationInit() async {\n    log(\"定位初始化\");\n\n    /// 动态申请定位权限\n    if (await requestPermission()) {\n      myLocPlugin.setAgreePrivacy(true);\n      myLocPlugin.getApiKeyCallback(callback: (String result) {\n        String str = result;\n        log('鉴权结果：' + str);\n      });\n\n      myLocPlugin.seriesLocationCallback(\n          callback: (BaiduLocation result) async {\n        if (count >= 10) {\n          await myLocPlugin.stopLocation();\n        } else {\n          if (result.latitude != null && result.longitude != null) {\n            await myLocPlugin.stopLocation();\n            longitude = result.longitude!;\n            latitude = result.latitude!;\n          }else{\n            log(\"错误码:${result.errorCode}  ${result.errorInfo} ${result.getMap().toString()}\");\n          }\n        }\n      });\n      Map androidMap = initAndroidOptions().getMap();\n      Map iosMap = initIOSOptions().getMap();\n      var _suc = await myLocPlugin.prepareLoc(androidMap, iosMap);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static BaiduLocationAndroidOption initAndroidOptions() {\n    BaiduLocationAndroidOption options = BaiduLocationAndroidOption(\n        locationMode: BMFLocationMode.hightAccuracy,\n        isNeedAddress: false,\n        isNeedAltitude: false,\n        isNeedLocationPoiList: false,\n        isNeedNewVersionRgc: true,\n        isNeedLocationDescribe: true,\n        openGps: true,\n        locationPurpose: BMFLocationPurpose.sport,\n        coordType: BMFLocationCoordType.bd09ll,\n        scanspan: 0);\n    return options;\n  }\n\n  static BaiduLocationIOSOption initIOSOptions() {\n    BaiduLocationIOSOption options = BaiduLocationIOSOption(\n      coordType: BMFLocationCoordType.bd09ll,\n      locationTimeout: 10,\n      reGeocodeTimeout: 10,\n      activityType: BMFActivityType.automotiveNavigation,\n      desiredAccuracy: BMFDesiredAccuracy.best,\n      isNeedNewVersionRgc: true,\n      pausesLocationUpdatesAutomatically: false,\n      allowsBackgroundLocationUpdates: true,\n      distanceFilter: 10,\n    );\n    return options;\n  }\n\n  static Future<Map> getLocationSingle() async {\n    await myLocPlugin.stopLocation();\n    longitude = 0;\n    latitude = 0;\n    starLocate = false;\n    count = 0;\n    Map result = {\"success\": false};\n    log(\"进入\");\n    while (count < 10) {\n      if (!starLocate) {\n        starLocate = true;\n        bool test=await myLocPlugin.startLocation();\n      }\n      await Future.delayed(const Duration(seconds: 1))\n          .then((_) {\n        count++;\n        if (longitude != 0 || latitude != 0) {\n          double tlong = longitude;\n          double tl = latitude;\n          result = {\"success\": true, \"longitude\": tlong, \"latitude\": tl};\n          starLocate=false;\n        }\n      });\n      if (!starLocate) {\n        break;\n      }\n    }\n    longitude = 0;\n    latitude = 0;\n    starLocate = false;\n    count = 0;\n    starLocate = false;\n    myLocPlugin.stopLocation();\n    return result;\n  }\n\n  static Future<bool> requestPermission() async {\n    if (!(await Permission.location.isLimited ||\n        await Permission.location.isRestricted ||\n        await Permission.location.isGranted)) {\n      await Permission.location.request();\n    }\n    if ((await Permission.location.isLimited ||\n        await Permission.location.isRestricted ||\n        await Permission.location.isGranted)) {\n      return true;\n    } else {\n      Get.defaultDialog(title: \"错误\",content: const Text(\"无法获取位置信息，请手动设置权限后重启app\"));\n      return false;\n    }\n  }\n}\n```\n\n这段直接引用了另外一个同学的代码，我自己用 get 插件的GetxController 成功封装过一次，不过现在想想封装逻辑较之不是很清晰。\n\n\n\n### 2.由此引申的so文件\n\n在实现了上述的location的封装以及应用之后，想要自己做一个类似于百度地图app，故而尝试调用了百度地图api。\n\n```\nBMFMapOptions mapOptions = BMFMapOptions(\n        center: BMFCoordinate(39.917215, 116.380341),\n        zoomLevel: 12,\n        mapPadding: BMFEdgeInsets(left: 30, top: 0, right: 30, bottom: 0));\nContainer(\n      height: screenSize.height,\n      width: screenSize.width,\n      child: BMFMapWidget(\n        onBMFMapCreated: (controller) {\n          onBMFMapCreated(controller);\n        },\n        mapOptions: mapOptions,\n      ),\n    );\n```\n\n成功按照文档配置好环境以后，出现了地图黑屏的问题（此时并没有退出）。然而在网上一些社区csdn 掘金 stackoverflow，并没有找到解决方案。观察控制台的报错，发现是 缺少了 libgnustl_shared.zip文件。 找了好久找到了下载地址：https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip?  然而按照网络上的方法配置到项目里后，没有用，故放弃。\n\n以下是so文件的简述以及作用：\n\n```\n\".so\" 文件是一种共享库（Shared Object Library）文件的后缀名。这种文件格式通常在类Unix操作系统（如Linux）中使用。共享库包含一组预编译的可执行代码和数据，可以被多个程序共享，以提供共享的功能和资源。\n\n这些文件通常包含编译后的二进制代码，可以被动态链接到程序中，而不是静态地嵌入在每个程序中。这样做有助于减小程序文件的大小，同时允许多个程序共享相同的代码库，提高系统的效率。\n\n在Linux系统中，共享库文件通常存储在 \"/lib\" 或 \"/usr/lib\" 目录下，而应用程序通过动态链接器在运行时加载这些库。这种动态链接的方式有助于减少内存占用，同时简化程序的维护和更新。\n```\n\n\n## 3.网易云api\n\n对接百度api失败之后有点烦，于是...\n\n涉及到的知识点：docker  、serveless 、nodejs跨域\n\n感谢开源项目：\n\n​\t\t1.github地址：git@github.com:Binaryify/NeteaseCloudMusicApi.git\n\n​\t\t2.官方网站 :https://docs.neteasecloudmusicapi.binaryify.com/\n\n算是一个总结，也算是一个分享：\n\n```\n 1.克隆仓库并运行项目\n git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git\n cd NeteaseCloudMusicApi\n npm install\n \n node app.js\n //之后可以在默认3000端口访问到\n\n set PORT=4000 && node app.js\n```\n\n\n\n### 1.docker 部署\n\ndocker 是在我大一下学期接触到的，当时一并学了vim，堪称利器。然而docker对当时的我相当于降维打击，很多概念都无法理解。现在则一学就会，验证了认识的螺旋上升性。\n\n```\n$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi && cd NeteaseCloudMusicApi\n\n$ sudo docker build . -t netease-music-api\n\n$ sudo docker run -d -p 3000:3000 netease-music-api\n```\n\n可视化版本的，在docker应用里的”dev enviroments“里添加任务夹即可\n\n不过部署之后在客户端请求会遇到跨域问题，这点我们之后再说\n\n### 2. 跨域问题\n\n因为本人是打算做一个flutter的android项目的，所以会遇到跨域问题\n\n以下是我在掘金上搜索到的node js解决代码， 不过我在本地运行之后并没有解决跨域，权且当一个记录，量变引起质变，或许早晚会用到\n\n```\nconst http = require('http');\n\n// 第一步：接受客户端请求\nconst server = http.createServer((request, response) => {\n\t\n    // 代理服务器，直接和浏览器直接交互，也需要设置：CORS 的首部字段\n    response.writeHead(200, {\n        'Access-Control-Allow-Origin': '*',  // 设置 optins 方法允许所有服务器访问 \n        'Access-Control-Allow-Methods': '*',\n        'Access-Control-Allow-Headers': 'Content-Type',\n    });\n\t\n    // 第二步：将请求转发给服务器\n    const proxyRequest = http.request({\n        host: '127.0.0.1',\n        port: 4000,\n        url: '/',\n        method: request.method,\n        headers: request.headers\n    }, (serverResponse) => {\n        \n        // 第三步：收到服务器的响应\n        var body = '';\n\n        serverResponse.on('data', (chunk) => {\n            body += chunk;\n        });\n\n        serverResponse.on('end', () => {\n            console.log('The data is ' + body );\n            \n            // 第四步：将响应结果转发给浏览器\n            response.end(body);\n        })\n\n    }).end();\n\n});\n\nserver.listen(3000, () => {\n    console.log('The proxyServer is running at http://localhost:3000');\n});\n```\n\n\n### 3.serveless部署\n\n网址： https://console.cloud.tencent.com/sls\n\n以下是步骤：\n\n1. fork 此项目\n\n2. 在腾讯云serverless应用管理页面( https://console.cloud.tencent.com/sls ),点击`新建应用`\n\n3. 顶部`创建方式`选择 `Web 应用`\n\n4. 选择 `Express框架`,点击底部`下一步按钮`\n\n5. 输入`应用名`,上传方式选择`代码仓库`,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目\n\n6. 启动文件填入:\n\n   ```\n   #!/bin/bash\n   export PORT=9000\n   /var/lang/node16/bin/node app.js\n   ```\n\n7. 点击`完成`,等待部署完成,点击`资源列表`的 `API网关` 里的 `URL`,正常情况会打开文档地址,点击文档`例子`可查看接口调用效果\n\n在serveless部署之后，跨域问题解决了。\n\n\n\n","source":"_posts/2some.md","raw":"---\nlayout: posts\ntitle: 鸟宿池边树\ndescription: 一些关于flutter以及android的问题\ndate: 2024-1-13 10:47:29\ntags:\n   - android\n   - flutter\n---\n总的来说，我不是一个爱写文章的人。记起来从写人生第一篇作文开始，我的写作之路就没有遇到过坦途。曾经试着反思原因，大抵是因为一些完美主义倾向。譬如写了上一句，要对下一句的方向内容乃至把字句被字句都要犹豫很久。不过这也是可贵的，古代诗人曾经有过诗句。鸟宿池边树，僧敲月下门。为人性僻耽佳句，语不惊人死不休。想来那些欧阳修、柳宗元之类的大家都曾如此。\n\n就譬如写上一段以及这一段，大抵改了二十次有余。\n\n\n\n最近还是在做我名为 ”电梯维保“ 的项目，不过近几日工作少了些枯燥。添加了些百度api定位之类的，由此引出来了种种。\n\n以下是这几日我遇到的一些问题，权当是总结，也是为了以后找起来方便。\n\n##  1. sourcetree 配置 github  SSH\n\n原因：在像往常一样用ssh拉取git仓库的时候报了 port：22   timeout错误，故此总结了两篇比较简洁的技术博客\n\n\n\n配置ssh ：https://juejin.cn/post/7224017330724175927\n\n修改config（如果没有config则新建）：https://blog.csdn.net/the__future/article/details/130038818\n\n\n\n## 2.百度api\n\n### \t1.百度api  location定位功能   封装代码\n\n以下是代码：\n\n```dart\nclass GetLocation {\n  static int count = 0;\n  static bool starLocate = false;\n  static double latitude = 0;\n  static double longitude = 0;\n\n  GetLocation();\n\n  static LocationFlutterPlugin myLocPlugin = LocationFlutterPlugin();\n  static BaiduLocation baiduLocation = BaiduLocation();\n\n  static Future<bool> locationInit() async {\n    log(\"定位初始化\");\n\n    /// 动态申请定位权限\n    if (await requestPermission()) {\n      myLocPlugin.setAgreePrivacy(true);\n      myLocPlugin.getApiKeyCallback(callback: (String result) {\n        String str = result;\n        log('鉴权结果：' + str);\n      });\n\n      myLocPlugin.seriesLocationCallback(\n          callback: (BaiduLocation result) async {\n        if (count >= 10) {\n          await myLocPlugin.stopLocation();\n        } else {\n          if (result.latitude != null && result.longitude != null) {\n            await myLocPlugin.stopLocation();\n            longitude = result.longitude!;\n            latitude = result.latitude!;\n          }else{\n            log(\"错误码:${result.errorCode}  ${result.errorInfo} ${result.getMap().toString()}\");\n          }\n        }\n      });\n      Map androidMap = initAndroidOptions().getMap();\n      Map iosMap = initIOSOptions().getMap();\n      var _suc = await myLocPlugin.prepareLoc(androidMap, iosMap);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static BaiduLocationAndroidOption initAndroidOptions() {\n    BaiduLocationAndroidOption options = BaiduLocationAndroidOption(\n        locationMode: BMFLocationMode.hightAccuracy,\n        isNeedAddress: false,\n        isNeedAltitude: false,\n        isNeedLocationPoiList: false,\n        isNeedNewVersionRgc: true,\n        isNeedLocationDescribe: true,\n        openGps: true,\n        locationPurpose: BMFLocationPurpose.sport,\n        coordType: BMFLocationCoordType.bd09ll,\n        scanspan: 0);\n    return options;\n  }\n\n  static BaiduLocationIOSOption initIOSOptions() {\n    BaiduLocationIOSOption options = BaiduLocationIOSOption(\n      coordType: BMFLocationCoordType.bd09ll,\n      locationTimeout: 10,\n      reGeocodeTimeout: 10,\n      activityType: BMFActivityType.automotiveNavigation,\n      desiredAccuracy: BMFDesiredAccuracy.best,\n      isNeedNewVersionRgc: true,\n      pausesLocationUpdatesAutomatically: false,\n      allowsBackgroundLocationUpdates: true,\n      distanceFilter: 10,\n    );\n    return options;\n  }\n\n  static Future<Map> getLocationSingle() async {\n    await myLocPlugin.stopLocation();\n    longitude = 0;\n    latitude = 0;\n    starLocate = false;\n    count = 0;\n    Map result = {\"success\": false};\n    log(\"进入\");\n    while (count < 10) {\n      if (!starLocate) {\n        starLocate = true;\n        bool test=await myLocPlugin.startLocation();\n      }\n      await Future.delayed(const Duration(seconds: 1))\n          .then((_) {\n        count++;\n        if (longitude != 0 || latitude != 0) {\n          double tlong = longitude;\n          double tl = latitude;\n          result = {\"success\": true, \"longitude\": tlong, \"latitude\": tl};\n          starLocate=false;\n        }\n      });\n      if (!starLocate) {\n        break;\n      }\n    }\n    longitude = 0;\n    latitude = 0;\n    starLocate = false;\n    count = 0;\n    starLocate = false;\n    myLocPlugin.stopLocation();\n    return result;\n  }\n\n  static Future<bool> requestPermission() async {\n    if (!(await Permission.location.isLimited ||\n        await Permission.location.isRestricted ||\n        await Permission.location.isGranted)) {\n      await Permission.location.request();\n    }\n    if ((await Permission.location.isLimited ||\n        await Permission.location.isRestricted ||\n        await Permission.location.isGranted)) {\n      return true;\n    } else {\n      Get.defaultDialog(title: \"错误\",content: const Text(\"无法获取位置信息，请手动设置权限后重启app\"));\n      return false;\n    }\n  }\n}\n```\n\n这段直接引用了另外一个同学的代码，我自己用 get 插件的GetxController 成功封装过一次，不过现在想想封装逻辑较之不是很清晰。\n\n\n\n### 2.由此引申的so文件\n\n在实现了上述的location的封装以及应用之后，想要自己做一个类似于百度地图app，故而尝试调用了百度地图api。\n\n```\nBMFMapOptions mapOptions = BMFMapOptions(\n        center: BMFCoordinate(39.917215, 116.380341),\n        zoomLevel: 12,\n        mapPadding: BMFEdgeInsets(left: 30, top: 0, right: 30, bottom: 0));\nContainer(\n      height: screenSize.height,\n      width: screenSize.width,\n      child: BMFMapWidget(\n        onBMFMapCreated: (controller) {\n          onBMFMapCreated(controller);\n        },\n        mapOptions: mapOptions,\n      ),\n    );\n```\n\n成功按照文档配置好环境以后，出现了地图黑屏的问题（此时并没有退出）。然而在网上一些社区csdn 掘金 stackoverflow，并没有找到解决方案。观察控制台的报错，发现是 缺少了 libgnustl_shared.zip文件。 找了好久找到了下载地址：https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip?  然而按照网络上的方法配置到项目里后，没有用，故放弃。\n\n以下是so文件的简述以及作用：\n\n```\n\".so\" 文件是一种共享库（Shared Object Library）文件的后缀名。这种文件格式通常在类Unix操作系统（如Linux）中使用。共享库包含一组预编译的可执行代码和数据，可以被多个程序共享，以提供共享的功能和资源。\n\n这些文件通常包含编译后的二进制代码，可以被动态链接到程序中，而不是静态地嵌入在每个程序中。这样做有助于减小程序文件的大小，同时允许多个程序共享相同的代码库，提高系统的效率。\n\n在Linux系统中，共享库文件通常存储在 \"/lib\" 或 \"/usr/lib\" 目录下，而应用程序通过动态链接器在运行时加载这些库。这种动态链接的方式有助于减少内存占用，同时简化程序的维护和更新。\n```\n\n\n## 3.网易云api\n\n对接百度api失败之后有点烦，于是...\n\n涉及到的知识点：docker  、serveless 、nodejs跨域\n\n感谢开源项目：\n\n​\t\t1.github地址：git@github.com:Binaryify/NeteaseCloudMusicApi.git\n\n​\t\t2.官方网站 :https://docs.neteasecloudmusicapi.binaryify.com/\n\n算是一个总结，也算是一个分享：\n\n```\n 1.克隆仓库并运行项目\n git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git\n cd NeteaseCloudMusicApi\n npm install\n \n node app.js\n //之后可以在默认3000端口访问到\n\n set PORT=4000 && node app.js\n```\n\n\n\n### 1.docker 部署\n\ndocker 是在我大一下学期接触到的，当时一并学了vim，堪称利器。然而docker对当时的我相当于降维打击，很多概念都无法理解。现在则一学就会，验证了认识的螺旋上升性。\n\n```\n$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi && cd NeteaseCloudMusicApi\n\n$ sudo docker build . -t netease-music-api\n\n$ sudo docker run -d -p 3000:3000 netease-music-api\n```\n\n可视化版本的，在docker应用里的”dev enviroments“里添加任务夹即可\n\n不过部署之后在客户端请求会遇到跨域问题，这点我们之后再说\n\n### 2. 跨域问题\n\n因为本人是打算做一个flutter的android项目的，所以会遇到跨域问题\n\n以下是我在掘金上搜索到的node js解决代码， 不过我在本地运行之后并没有解决跨域，权且当一个记录，量变引起质变，或许早晚会用到\n\n```\nconst http = require('http');\n\n// 第一步：接受客户端请求\nconst server = http.createServer((request, response) => {\n\t\n    // 代理服务器，直接和浏览器直接交互，也需要设置：CORS 的首部字段\n    response.writeHead(200, {\n        'Access-Control-Allow-Origin': '*',  // 设置 optins 方法允许所有服务器访问 \n        'Access-Control-Allow-Methods': '*',\n        'Access-Control-Allow-Headers': 'Content-Type',\n    });\n\t\n    // 第二步：将请求转发给服务器\n    const proxyRequest = http.request({\n        host: '127.0.0.1',\n        port: 4000,\n        url: '/',\n        method: request.method,\n        headers: request.headers\n    }, (serverResponse) => {\n        \n        // 第三步：收到服务器的响应\n        var body = '';\n\n        serverResponse.on('data', (chunk) => {\n            body += chunk;\n        });\n\n        serverResponse.on('end', () => {\n            console.log('The data is ' + body );\n            \n            // 第四步：将响应结果转发给浏览器\n            response.end(body);\n        })\n\n    }).end();\n\n});\n\nserver.listen(3000, () => {\n    console.log('The proxyServer is running at http://localhost:3000');\n});\n```\n\n\n### 3.serveless部署\n\n网址： https://console.cloud.tencent.com/sls\n\n以下是步骤：\n\n1. fork 此项目\n\n2. 在腾讯云serverless应用管理页面( https://console.cloud.tencent.com/sls ),点击`新建应用`\n\n3. 顶部`创建方式`选择 `Web 应用`\n\n4. 选择 `Express框架`,点击底部`下一步按钮`\n\n5. 输入`应用名`,上传方式选择`代码仓库`,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目\n\n6. 启动文件填入:\n\n   ```\n   #!/bin/bash\n   export PORT=9000\n   /var/lang/node16/bin/node app.js\n   ```\n\n7. 点击`完成`,等待部署完成,点击`资源列表`的 `API网关` 里的 `URL`,正常情况会打开文档地址,点击文档`例子`可查看接口调用效果\n\n在serveless部署之后，跨域问题解决了。\n\n\n\n","slug":"2some","published":1,"updated":"2024-07-05T03:00:29.238Z","comments":1,"photos":[],"link":"","_id":"cly84y85r0003gg6kfje31ica","content":"<p>总的来说，我不是一个爱写文章的人。记起来从写人生第一篇作文开始，我的写作之路就没有遇到过坦途。曾经试着反思原因，大抵是因为一些完美主义倾向。譬如写了上一句，要对下一句的方向内容乃至把字句被字句都要犹豫很久。不过这也是可贵的，古代诗人曾经有过诗句。鸟宿池边树，僧敲月下门。为人性僻耽佳句，语不惊人死不休。想来那些欧阳修、柳宗元之类的大家都曾如此。</p>\n<p>就譬如写上一段以及这一段，大抵改了二十次有余。</p>\n<p>最近还是在做我名为 ”电梯维保“ 的项目，不过近几日工作少了些枯燥。添加了些百度api定位之类的，由此引出来了种种。</p>\n<p>以下是这几日我遇到的一些问题，权当是总结，也是为了以后找起来方便。</p>\n<h2 id=\"1-sourcetree-配置-github-SSH\"><a href=\"#1-sourcetree-配置-github-SSH\" class=\"headerlink\" title=\"1. sourcetree 配置 github  SSH\"></a>1. sourcetree 配置 github  SSH</h2><p>原因：在像往常一样用ssh拉取git仓库的时候报了 port：22   timeout错误，故此总结了两篇比较简洁的技术博客</p>\n<p>配置ssh ：<a href=\"https://juejin.cn/post/7224017330724175927\">https://juejin.cn/post/7224017330724175927</a></p>\n<p>修改config（如果没有config则新建）：<a href=\"https://blog.csdn.net/the__future/article/details/130038818\">https://blog.csdn.net/the__future/article/details/130038818</a></p>\n<h2 id=\"2-百度api\"><a href=\"#2-百度api\" class=\"headerlink\" title=\"2.百度api\"></a>2.百度api</h2><h3 id=\"1-百度api-location定位功能-封装代码\"><a href=\"#1-百度api-location定位功能-封装代码\" class=\"headerlink\" title=\"1.百度api  location定位功能   封装代码\"></a>1.百度api  location定位功能   封装代码</h3><p>以下是代码：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GetLocation</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">double</span> latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">double</span> longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  GetLocation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> LocationFlutterPlugin myLocPlugin = LocationFlutterPlugin();</span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocation baiduLocation = BaiduLocation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">bool</span>&gt; locationInit() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;定位初始化&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// <span class=\"language-markdown\">动态申请定位权限</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">await</span> requestPermission()) &#123;</span><br><span class=\"line\">      myLocPlugin.setAgreePrivacy(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">      myLocPlugin.getApiKeyCallback(callback: (<span class=\"built_in\">String</span> result) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">String</span> str = result;</span><br><span class=\"line\">        log(<span class=\"string\">&#x27;鉴权结果：&#x27;</span> + str);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      myLocPlugin.seriesLocationCallback(</span><br><span class=\"line\">          callback: (BaiduLocation result) <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (result.latitude != <span class=\"keyword\">null</span> &amp;&amp; result.longitude != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">            longitude = result.longitude!;</span><br><span class=\"line\">            latitude = result.latitude!;</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            log(<span class=\"string\">&quot;错误码:<span class=\"subst\">$&#123;result.errorCode&#125;</span>  <span class=\"subst\">$&#123;result.errorInfo&#125;</span> <span class=\"subst\">$&#123;result.getMap().toString()&#125;</span>&quot;</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"built_in\">Map</span> androidMap = initAndroidOptions().getMap();</span><br><span class=\"line\">      <span class=\"built_in\">Map</span> iosMap = initIOSOptions().getMap();</span><br><span class=\"line\">      <span class=\"keyword\">var</span> _suc = <span class=\"keyword\">await</span> myLocPlugin.prepareLoc(androidMap, iosMap);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocationAndroidOption initAndroidOptions() &#123;</span><br><span class=\"line\">    BaiduLocationAndroidOption options = BaiduLocationAndroidOption(</span><br><span class=\"line\">        locationMode: BMFLocationMode.hightAccuracy,</span><br><span class=\"line\">        isNeedAddress: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedAltitude: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedLocationPoiList: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedNewVersionRgc: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        isNeedLocationDescribe: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        openGps: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        locationPurpose: BMFLocationPurpose.sport,</span><br><span class=\"line\">        coordType: BMFLocationCoordType.bd09ll,</span><br><span class=\"line\">        scanspan: <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocationIOSOption initIOSOptions() &#123;</span><br><span class=\"line\">    BaiduLocationIOSOption options = BaiduLocationIOSOption(</span><br><span class=\"line\">      coordType: BMFLocationCoordType.bd09ll,</span><br><span class=\"line\">      locationTimeout: <span class=\"number\">10</span>,</span><br><span class=\"line\">      reGeocodeTimeout: <span class=\"number\">10</span>,</span><br><span class=\"line\">      activityType: BMFActivityType.automotiveNavigation,</span><br><span class=\"line\">      desiredAccuracy: BMFDesiredAccuracy.best,</span><br><span class=\"line\">      isNeedNewVersionRgc: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">      pausesLocationUpdatesAutomatically: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">      allowsBackgroundLocationUpdates: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">      distanceFilter: <span class=\"number\">10</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">Map</span>&gt; getLocationSingle() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">    longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">Map</span> result = &#123;<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">false</span>&#125;;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;进入&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (count &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!starLocate) &#123;</span><br><span class=\"line\">        starLocate = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"built_in\">bool</span> test=<span class=\"keyword\">await</span> myLocPlugin.startLocation();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> Future.delayed(<span class=\"keyword\">const</span> <span class=\"built_in\">Duration</span>(seconds: <span class=\"number\">1</span>))</span><br><span class=\"line\">          .then((_) &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (longitude != <span class=\"number\">0</span> || latitude != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">double</span> tlong = longitude;</span><br><span class=\"line\">          <span class=\"built_in\">double</span> tl = latitude;</span><br><span class=\"line\">          result = &#123;<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">true</span>, <span class=\"string\">&quot;longitude&quot;</span>: tlong, <span class=\"string\">&quot;latitude&quot;</span>: tl&#125;;</span><br><span class=\"line\">          starLocate=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!starLocate) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    myLocPlugin.stopLocation();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">bool</span>&gt; requestPermission() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!(<span class=\"keyword\">await</span> Permission.location.isLimited ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isRestricted ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isGranted)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> Permission.location.request();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">await</span> Permission.location.isLimited ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isRestricted ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isGranted)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      Get.defaultDialog(title: <span class=\"string\">&quot;错误&quot;</span>,content: <span class=\"keyword\">const</span> Text(<span class=\"string\">&quot;无法获取位置信息，请手动设置权限后重启app&quot;</span>));</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这段直接引用了另外一个同学的代码，我自己用 get 插件的GetxController 成功封装过一次，不过现在想想封装逻辑较之不是很清晰。</p>\n<h3 id=\"2-由此引申的so文件\"><a href=\"#2-由此引申的so文件\" class=\"headerlink\" title=\"2.由此引申的so文件\"></a>2.由此引申的so文件</h3><p>在实现了上述的location的封装以及应用之后，想要自己做一个类似于百度地图app，故而尝试调用了百度地图api。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BMFMapOptions mapOptions = BMFMapOptions(</span><br><span class=\"line\">        center: BMFCoordinate(39.917215, 116.380341),</span><br><span class=\"line\">        zoomLevel: 12,</span><br><span class=\"line\">        mapPadding: BMFEdgeInsets(left: 30, top: 0, right: 30, bottom: 0));</span><br><span class=\"line\">Container(</span><br><span class=\"line\">      height: screenSize.height,</span><br><span class=\"line\">      width: screenSize.width,</span><br><span class=\"line\">      child: BMFMapWidget(</span><br><span class=\"line\">        onBMFMapCreated: (controller) &#123;</span><br><span class=\"line\">          onBMFMapCreated(controller);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        mapOptions: mapOptions,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n\n<p>成功按照文档配置好环境以后，出现了地图黑屏的问题（此时并没有退出）。然而在网上一些社区csdn 掘金 stackoverflow，并没有找到解决方案。观察控制台的报错，发现是 缺少了 libgnustl_shared.zip文件。 找了好久找到了下载地址：<a href=\"https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip\">https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip</a>?  然而按照网络上的方法配置到项目里后，没有用，故放弃。</p>\n<p>以下是so文件的简述以及作用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;.so&quot; 文件是一种共享库（Shared Object Library）文件的后缀名。这种文件格式通常在类Unix操作系统（如Linux）中使用。共享库包含一组预编译的可执行代码和数据，可以被多个程序共享，以提供共享的功能和资源。</span><br><span class=\"line\"></span><br><span class=\"line\">这些文件通常包含编译后的二进制代码，可以被动态链接到程序中，而不是静态地嵌入在每个程序中。这样做有助于减小程序文件的大小，同时允许多个程序共享相同的代码库，提高系统的效率。</span><br><span class=\"line\"></span><br><span class=\"line\">在Linux系统中，共享库文件通常存储在 &quot;/lib&quot; 或 &quot;/usr/lib&quot; 目录下，而应用程序通过动态链接器在运行时加载这些库。这种动态链接的方式有助于减少内存占用，同时简化程序的维护和更新。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"3-网易云api\"><a href=\"#3-网易云api\" class=\"headerlink\" title=\"3.网易云api\"></a>3.网易云api</h2><p>对接百度api失败之后有点烦，于是…</p>\n<p>涉及到的知识点：docker  、serveless 、nodejs跨域</p>\n<p>感谢开源项目：</p>\n<p>​\t\t1.github地址：<a href=\"mailto:&#103;&#105;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d;\">&#103;&#105;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d;</a>:Binaryify&#x2F;NeteaseCloudMusicApi.git</p>\n<p>​\t\t2.官方网站 :<a href=\"https://docs.neteasecloudmusicapi.binaryify.com/\">https://docs.neteasecloudmusicapi.binaryify.com/</a></p>\n<p>算是一个总结，也算是一个分享：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.克隆仓库并运行项目</span><br><span class=\"line\">git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git</span><br><span class=\"line\">cd NeteaseCloudMusicApi</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\">node app.js</span><br><span class=\"line\">//之后可以在默认3000端口访问到</span><br><span class=\"line\"></span><br><span class=\"line\">set PORT=4000 &amp;&amp; node app.js</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-docker-部署\"><a href=\"#1-docker-部署\" class=\"headerlink\" title=\"1.docker 部署\"></a>1.docker 部署</h3><p>docker 是在我大一下学期接触到的，当时一并学了vim，堪称利器。然而docker对当时的我相当于降维打击，很多概念都无法理解。现在则一学就会，验证了认识的螺旋上升性。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi &amp;&amp; cd NeteaseCloudMusicApi</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo docker build . -t netease-music-api</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo docker run -d -p 3000:3000 netease-music-api</span><br></pre></td></tr></table></figure>\n\n<p>可视化版本的，在docker应用里的”dev enviroments“里添加任务夹即可</p>\n<p>不过部署之后在客户端请求会遇到跨域问题，这点我们之后再说</p>\n<h3 id=\"2-跨域问题\"><a href=\"#2-跨域问题\" class=\"headerlink\" title=\"2. 跨域问题\"></a>2. 跨域问题</h3><p>因为本人是打算做一个flutter的android项目的，所以会遇到跨域问题</p>\n<p>以下是我在掘金上搜索到的node js解决代码， 不过我在本地运行之后并没有解决跨域，权且当一个记录，量变引起质变，或许早晚会用到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const http = require(&#x27;http&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 第一步：接受客户端请求</span><br><span class=\"line\">const server = http.createServer((request, response) =&gt; &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 代理服务器，直接和浏览器直接交互，也需要设置：CORS 的首部字段</span><br><span class=\"line\">    response.writeHead(200, &#123;</span><br><span class=\"line\">        &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27;,  // 设置 optins 方法允许所有服务器访问 </span><br><span class=\"line\">        &#x27;Access-Control-Allow-Methods&#x27;: &#x27;*&#x27;,</span><br><span class=\"line\">        &#x27;Access-Control-Allow-Headers&#x27;: &#x27;Content-Type&#x27;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 第二步：将请求转发给服务器</span><br><span class=\"line\">    const proxyRequest = http.request(&#123;</span><br><span class=\"line\">        host: &#x27;127.0.0.1&#x27;,</span><br><span class=\"line\">        port: 4000,</span><br><span class=\"line\">        url: &#x27;/&#x27;,</span><br><span class=\"line\">        method: request.method,</span><br><span class=\"line\">        headers: request.headers</span><br><span class=\"line\">    &#125;, (serverResponse) =&gt; &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        // 第三步：收到服务器的响应</span><br><span class=\"line\">        var body = &#x27;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">        serverResponse.on(&#x27;data&#x27;, (chunk) =&gt; &#123;</span><br><span class=\"line\">            body += chunk;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        serverResponse.on(&#x27;end&#x27;, () =&gt; &#123;</span><br><span class=\"line\">            console.log(&#x27;The data is &#x27; + body );</span><br><span class=\"line\">            </span><br><span class=\"line\">            // 第四步：将响应结果转发给浏览器</span><br><span class=\"line\">            response.end(body);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;).end();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">server.listen(3000, () =&gt; &#123;</span><br><span class=\"line\">    console.log(&#x27;The proxyServer is running at http://localhost:3000&#x27;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"3-serveless部署\"><a href=\"#3-serveless部署\" class=\"headerlink\" title=\"3.serveless部署\"></a>3.serveless部署</h3><p>网址： <a href=\"https://console.cloud.tencent.com/sls\">https://console.cloud.tencent.com/sls</a></p>\n<p>以下是步骤：</p>\n<ol>\n<li><p>fork 此项目</p>\n</li>\n<li><p>在腾讯云serverless应用管理页面( <a href=\"https://console.cloud.tencent.com/sls\">https://console.cloud.tencent.com/sls</a> ),点击<code>新建应用</code></p>\n</li>\n<li><p>顶部<code>创建方式</code>选择 <code>Web 应用</code></p>\n</li>\n<li><p>选择 <code>Express框架</code>,点击底部<code>下一步按钮</code></p>\n</li>\n<li><p>输入<code>应用名</code>,上传方式选择<code>代码仓库</code>,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目</p>\n</li>\n<li><p>启动文件填入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">export PORT=9000</span><br><span class=\"line\">/var/lang/node16/bin/node app.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击<code>完成</code>,等待部署完成,点击<code>资源列表</code>的 <code>API网关</code> 里的 <code>URL</code>,正常情况会打开文档地址,点击文档<code>例子</code>可查看接口调用效果</p>\n</li>\n</ol>\n<p>在serveless部署之后，跨域问题解决了。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>总的来说，我不是一个爱写文章的人。记起来从写人生第一篇作文开始，我的写作之路就没有遇到过坦途。曾经试着反思原因，大抵是因为一些完美主义倾向。譬如写了上一句，要对下一句的方向内容乃至把字句被字句都要犹豫很久。不过这也是可贵的，古代诗人曾经有过诗句。鸟宿池边树，僧敲月下门。为人性僻耽佳句，语不惊人死不休。想来那些欧阳修、柳宗元之类的大家都曾如此。</p>\n<p>就譬如写上一段以及这一段，大抵改了二十次有余。</p>\n<p>最近还是在做我名为 ”电梯维保“ 的项目，不过近几日工作少了些枯燥。添加了些百度api定位之类的，由此引出来了种种。</p>\n<p>以下是这几日我遇到的一些问题，权当是总结，也是为了以后找起来方便。</p>\n<h2 id=\"1-sourcetree-配置-github-SSH\"><a href=\"#1-sourcetree-配置-github-SSH\" class=\"headerlink\" title=\"1. sourcetree 配置 github  SSH\"></a>1. sourcetree 配置 github  SSH</h2><p>原因：在像往常一样用ssh拉取git仓库的时候报了 port：22   timeout错误，故此总结了两篇比较简洁的技术博客</p>\n<p>配置ssh ：<a href=\"https://juejin.cn/post/7224017330724175927\">https://juejin.cn/post/7224017330724175927</a></p>\n<p>修改config（如果没有config则新建）：<a href=\"https://blog.csdn.net/the__future/article/details/130038818\">https://blog.csdn.net/the__future/article/details/130038818</a></p>\n<h2 id=\"2-百度api\"><a href=\"#2-百度api\" class=\"headerlink\" title=\"2.百度api\"></a>2.百度api</h2><h3 id=\"1-百度api-location定位功能-封装代码\"><a href=\"#1-百度api-location定位功能-封装代码\" class=\"headerlink\" title=\"1.百度api  location定位功能   封装代码\"></a>1.百度api  location定位功能   封装代码</h3><p>以下是代码：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GetLocation</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">double</span> latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">double</span> longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  GetLocation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> LocationFlutterPlugin myLocPlugin = LocationFlutterPlugin();</span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocation baiduLocation = BaiduLocation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">bool</span>&gt; locationInit() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;定位初始化&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// <span class=\"language-markdown\">动态申请定位权限</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">await</span> requestPermission()) &#123;</span><br><span class=\"line\">      myLocPlugin.setAgreePrivacy(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">      myLocPlugin.getApiKeyCallback(callback: (<span class=\"built_in\">String</span> result) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">String</span> str = result;</span><br><span class=\"line\">        log(<span class=\"string\">&#x27;鉴权结果：&#x27;</span> + str);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      myLocPlugin.seriesLocationCallback(</span><br><span class=\"line\">          callback: (BaiduLocation result) <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (result.latitude != <span class=\"keyword\">null</span> &amp;&amp; result.longitude != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">            longitude = result.longitude!;</span><br><span class=\"line\">            latitude = result.latitude!;</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            log(<span class=\"string\">&quot;错误码:<span class=\"subst\">$&#123;result.errorCode&#125;</span>  <span class=\"subst\">$&#123;result.errorInfo&#125;</span> <span class=\"subst\">$&#123;result.getMap().toString()&#125;</span>&quot;</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"built_in\">Map</span> androidMap = initAndroidOptions().getMap();</span><br><span class=\"line\">      <span class=\"built_in\">Map</span> iosMap = initIOSOptions().getMap();</span><br><span class=\"line\">      <span class=\"keyword\">var</span> _suc = <span class=\"keyword\">await</span> myLocPlugin.prepareLoc(androidMap, iosMap);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocationAndroidOption initAndroidOptions() &#123;</span><br><span class=\"line\">    BaiduLocationAndroidOption options = BaiduLocationAndroidOption(</span><br><span class=\"line\">        locationMode: BMFLocationMode.hightAccuracy,</span><br><span class=\"line\">        isNeedAddress: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedAltitude: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedLocationPoiList: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedNewVersionRgc: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        isNeedLocationDescribe: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        openGps: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        locationPurpose: BMFLocationPurpose.sport,</span><br><span class=\"line\">        coordType: BMFLocationCoordType.bd09ll,</span><br><span class=\"line\">        scanspan: <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocationIOSOption initIOSOptions() &#123;</span><br><span class=\"line\">    BaiduLocationIOSOption options = BaiduLocationIOSOption(</span><br><span class=\"line\">      coordType: BMFLocationCoordType.bd09ll,</span><br><span class=\"line\">      locationTimeout: <span class=\"number\">10</span>,</span><br><span class=\"line\">      reGeocodeTimeout: <span class=\"number\">10</span>,</span><br><span class=\"line\">      activityType: BMFActivityType.automotiveNavigation,</span><br><span class=\"line\">      desiredAccuracy: BMFDesiredAccuracy.best,</span><br><span class=\"line\">      isNeedNewVersionRgc: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">      pausesLocationUpdatesAutomatically: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">      allowsBackgroundLocationUpdates: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">      distanceFilter: <span class=\"number\">10</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">Map</span>&gt; getLocationSingle() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">    longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">Map</span> result = &#123;<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">false</span>&#125;;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;进入&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (count &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!starLocate) &#123;</span><br><span class=\"line\">        starLocate = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"built_in\">bool</span> test=<span class=\"keyword\">await</span> myLocPlugin.startLocation();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> Future.delayed(<span class=\"keyword\">const</span> <span class=\"built_in\">Duration</span>(seconds: <span class=\"number\">1</span>))</span><br><span class=\"line\">          .then((_) &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (longitude != <span class=\"number\">0</span> || latitude != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">double</span> tlong = longitude;</span><br><span class=\"line\">          <span class=\"built_in\">double</span> tl = latitude;</span><br><span class=\"line\">          result = &#123;<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">true</span>, <span class=\"string\">&quot;longitude&quot;</span>: tlong, <span class=\"string\">&quot;latitude&quot;</span>: tl&#125;;</span><br><span class=\"line\">          starLocate=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!starLocate) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    myLocPlugin.stopLocation();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">bool</span>&gt; requestPermission() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!(<span class=\"keyword\">await</span> Permission.location.isLimited ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isRestricted ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isGranted)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> Permission.location.request();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">await</span> Permission.location.isLimited ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isRestricted ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isGranted)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      Get.defaultDialog(title: <span class=\"string\">&quot;错误&quot;</span>,content: <span class=\"keyword\">const</span> Text(<span class=\"string\">&quot;无法获取位置信息，请手动设置权限后重启app&quot;</span>));</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这段直接引用了另外一个同学的代码，我自己用 get 插件的GetxController 成功封装过一次，不过现在想想封装逻辑较之不是很清晰。</p>\n<h3 id=\"2-由此引申的so文件\"><a href=\"#2-由此引申的so文件\" class=\"headerlink\" title=\"2.由此引申的so文件\"></a>2.由此引申的so文件</h3><p>在实现了上述的location的封装以及应用之后，想要自己做一个类似于百度地图app，故而尝试调用了百度地图api。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BMFMapOptions mapOptions = BMFMapOptions(</span><br><span class=\"line\">        center: BMFCoordinate(39.917215, 116.380341),</span><br><span class=\"line\">        zoomLevel: 12,</span><br><span class=\"line\">        mapPadding: BMFEdgeInsets(left: 30, top: 0, right: 30, bottom: 0));</span><br><span class=\"line\">Container(</span><br><span class=\"line\">      height: screenSize.height,</span><br><span class=\"line\">      width: screenSize.width,</span><br><span class=\"line\">      child: BMFMapWidget(</span><br><span class=\"line\">        onBMFMapCreated: (controller) &#123;</span><br><span class=\"line\">          onBMFMapCreated(controller);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        mapOptions: mapOptions,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n\n<p>成功按照文档配置好环境以后，出现了地图黑屏的问题（此时并没有退出）。然而在网上一些社区csdn 掘金 stackoverflow，并没有找到解决方案。观察控制台的报错，发现是 缺少了 libgnustl_shared.zip文件。 找了好久找到了下载地址：<a href=\"https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip\">https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip</a>?  然而按照网络上的方法配置到项目里后，没有用，故放弃。</p>\n<p>以下是so文件的简述以及作用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;.so&quot; 文件是一种共享库（Shared Object Library）文件的后缀名。这种文件格式通常在类Unix操作系统（如Linux）中使用。共享库包含一组预编译的可执行代码和数据，可以被多个程序共享，以提供共享的功能和资源。</span><br><span class=\"line\"></span><br><span class=\"line\">这些文件通常包含编译后的二进制代码，可以被动态链接到程序中，而不是静态地嵌入在每个程序中。这样做有助于减小程序文件的大小，同时允许多个程序共享相同的代码库，提高系统的效率。</span><br><span class=\"line\"></span><br><span class=\"line\">在Linux系统中，共享库文件通常存储在 &quot;/lib&quot; 或 &quot;/usr/lib&quot; 目录下，而应用程序通过动态链接器在运行时加载这些库。这种动态链接的方式有助于减少内存占用，同时简化程序的维护和更新。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"3-网易云api\"><a href=\"#3-网易云api\" class=\"headerlink\" title=\"3.网易云api\"></a>3.网易云api</h2><p>对接百度api失败之后有点烦，于是…</p>\n<p>涉及到的知识点：docker  、serveless 、nodejs跨域</p>\n<p>感谢开源项目：</p>\n<p>​\t\t1.github地址：<a href=\"mailto:&#103;&#105;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d;\">&#103;&#105;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d;</a>:Binaryify&#x2F;NeteaseCloudMusicApi.git</p>\n<p>​\t\t2.官方网站 :<a href=\"https://docs.neteasecloudmusicapi.binaryify.com/\">https://docs.neteasecloudmusicapi.binaryify.com/</a></p>\n<p>算是一个总结，也算是一个分享：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.克隆仓库并运行项目</span><br><span class=\"line\">git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git</span><br><span class=\"line\">cd NeteaseCloudMusicApi</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\">node app.js</span><br><span class=\"line\">//之后可以在默认3000端口访问到</span><br><span class=\"line\"></span><br><span class=\"line\">set PORT=4000 &amp;&amp; node app.js</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-docker-部署\"><a href=\"#1-docker-部署\" class=\"headerlink\" title=\"1.docker 部署\"></a>1.docker 部署</h3><p>docker 是在我大一下学期接触到的，当时一并学了vim，堪称利器。然而docker对当时的我相当于降维打击，很多概念都无法理解。现在则一学就会，验证了认识的螺旋上升性。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi &amp;&amp; cd NeteaseCloudMusicApi</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo docker build . -t netease-music-api</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo docker run -d -p 3000:3000 netease-music-api</span><br></pre></td></tr></table></figure>\n\n<p>可视化版本的，在docker应用里的”dev enviroments“里添加任务夹即可</p>\n<p>不过部署之后在客户端请求会遇到跨域问题，这点我们之后再说</p>\n<h3 id=\"2-跨域问题\"><a href=\"#2-跨域问题\" class=\"headerlink\" title=\"2. 跨域问题\"></a>2. 跨域问题</h3><p>因为本人是打算做一个flutter的android项目的，所以会遇到跨域问题</p>\n<p>以下是我在掘金上搜索到的node js解决代码， 不过我在本地运行之后并没有解决跨域，权且当一个记录，量变引起质变，或许早晚会用到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const http = require(&#x27;http&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 第一步：接受客户端请求</span><br><span class=\"line\">const server = http.createServer((request, response) =&gt; &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 代理服务器，直接和浏览器直接交互，也需要设置：CORS 的首部字段</span><br><span class=\"line\">    response.writeHead(200, &#123;</span><br><span class=\"line\">        &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27;,  // 设置 optins 方法允许所有服务器访问 </span><br><span class=\"line\">        &#x27;Access-Control-Allow-Methods&#x27;: &#x27;*&#x27;,</span><br><span class=\"line\">        &#x27;Access-Control-Allow-Headers&#x27;: &#x27;Content-Type&#x27;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 第二步：将请求转发给服务器</span><br><span class=\"line\">    const proxyRequest = http.request(&#123;</span><br><span class=\"line\">        host: &#x27;127.0.0.1&#x27;,</span><br><span class=\"line\">        port: 4000,</span><br><span class=\"line\">        url: &#x27;/&#x27;,</span><br><span class=\"line\">        method: request.method,</span><br><span class=\"line\">        headers: request.headers</span><br><span class=\"line\">    &#125;, (serverResponse) =&gt; &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        // 第三步：收到服务器的响应</span><br><span class=\"line\">        var body = &#x27;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">        serverResponse.on(&#x27;data&#x27;, (chunk) =&gt; &#123;</span><br><span class=\"line\">            body += chunk;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        serverResponse.on(&#x27;end&#x27;, () =&gt; &#123;</span><br><span class=\"line\">            console.log(&#x27;The data is &#x27; + body );</span><br><span class=\"line\">            </span><br><span class=\"line\">            // 第四步：将响应结果转发给浏览器</span><br><span class=\"line\">            response.end(body);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;).end();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">server.listen(3000, () =&gt; &#123;</span><br><span class=\"line\">    console.log(&#x27;The proxyServer is running at http://localhost:3000&#x27;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"3-serveless部署\"><a href=\"#3-serveless部署\" class=\"headerlink\" title=\"3.serveless部署\"></a>3.serveless部署</h3><p>网址： <a href=\"https://console.cloud.tencent.com/sls\">https://console.cloud.tencent.com/sls</a></p>\n<p>以下是步骤：</p>\n<ol>\n<li><p>fork 此项目</p>\n</li>\n<li><p>在腾讯云serverless应用管理页面( <a href=\"https://console.cloud.tencent.com/sls\">https://console.cloud.tencent.com/sls</a> ),点击<code>新建应用</code></p>\n</li>\n<li><p>顶部<code>创建方式</code>选择 <code>Web 应用</code></p>\n</li>\n<li><p>选择 <code>Express框架</code>,点击底部<code>下一步按钮</code></p>\n</li>\n<li><p>输入<code>应用名</code>,上传方式选择<code>代码仓库</code>,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目</p>\n</li>\n<li><p>启动文件填入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">export PORT=9000</span><br><span class=\"line\">/var/lang/node16/bin/node app.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击<code>完成</code>,等待部署完成,点击<code>资源列表</code>的 <code>API网关</code> 里的 <code>URL</code>,正常情况会打开文档地址,点击文档<code>例子</code>可查看接口调用效果</p>\n</li>\n</ol>\n<p>在serveless部署之后，跨域问题解决了。</p>\n"},{"layout":"posts","title":"低配版仿网易云app","description":"假期开发了一款简易的网易云app，实现了核心功能，包括歌曲的下载、播放、搜索、歌单广场等","date":"2024-02-01T14:47:29.000Z","_content":"\n# wyyapp\n\nA new Flutter project.\n\n## Getting Started\n\n一个简陋版的仿网易云音乐app，供学习使用\n开发实践\n1.17-2.1 一共十五天，中间休息了三天\n经历了大大小小四五次重构，原本的代码写的太烂了\n\n出于 要拓展自己技术栈的目的，这个app先告一段落\n之后需要学一些go后端以及鸿蒙生态,flutter 还是不值得all in\n不如说，由于本人的性格，我不会all in任何一门技术\n\n网易云接口是适配pc端的，对于android端的适配不是很好，所以有些功能实现起来非常复杂\n不过的确有app端的首页接口，但是其内部结构过于复杂,尝试分析，明白了大部分接口的含义\n然而，嵌套起来实在太过复杂,具体请看最后的分析\n\n所以只做了核心功能\n歌曲类的封装，包括下载、下一首、重新播放等功能\n下载类的封装、通知类的封装\n\n可以说,封装、整理、以及称得上是舒爽的代码结构是我在这个项目中学到的最有价值的东西\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fanalyze.png\" width=\"400px\"/>\n\n## 项目截图\n\n<img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fin.jpg\"/>\n\n下载功能\n<img alt=\"img_2.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_2.png\"/>\n\n通过android 的notification实现下载进度的展示 以及播放的控制\n<img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fnotifi.jpg\"/>\n<video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2FnotificationAmusiclist.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video>\n\n搜索\n<img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fsearch.png\"/>\n\n深色模式\n<img alt=\"dark mode\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fdark.jpg\"/>\n\n歌单广场\n<img alt=\"img_1.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_1.png\"/>\n<img alt=\"img_3.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_3.png\"/>\n\n批量管理\n<img alt=\"playlist\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Faddtoplaylist.mp4\"/>\n\n## “分析”\n\n以下是对于网易云音乐接口的分析的一角，总的来说\n对我启发的最重要的点是\n他们通过后端来控制前端代码的展示结构，这样的代码我第一次见到\n\n初见时候，不禁又对前端的作用心生鄙夷\n后面尝试复现前端的实现类的时候\n才发现，这样的组织结构，对于前端来说,是非常不友好的\n至少对一个未从头参与开发的初级学习者来说是这样的\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg.png\" width=\"400px\"/>\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg23.png\" width=\"400px\"/>\n","source":"_posts/3wyyapp.md","raw":"---\nlayout: posts\ntitle: 低配版仿网易云app\ndescription: 假期开发了一款简易的网易云app，实现了核心功能，包括歌曲的下载、播放、搜索、歌单广场等\ndate: 2024-2-1 22:47:29\ntags:\n  - android\n  - flutter\n---\n\n# wyyapp\n\nA new Flutter project.\n\n## Getting Started\n\n一个简陋版的仿网易云音乐app，供学习使用\n开发实践\n1.17-2.1 一共十五天，中间休息了三天\n经历了大大小小四五次重构，原本的代码写的太烂了\n\n出于 要拓展自己技术栈的目的，这个app先告一段落\n之后需要学一些go后端以及鸿蒙生态,flutter 还是不值得all in\n不如说，由于本人的性格，我不会all in任何一门技术\n\n网易云接口是适配pc端的，对于android端的适配不是很好，所以有些功能实现起来非常复杂\n不过的确有app端的首页接口，但是其内部结构过于复杂,尝试分析，明白了大部分接口的含义\n然而，嵌套起来实在太过复杂,具体请看最后的分析\n\n所以只做了核心功能\n歌曲类的封装，包括下载、下一首、重新播放等功能\n下载类的封装、通知类的封装\n\n可以说,封装、整理、以及称得上是舒爽的代码结构是我在这个项目中学到的最有价值的东西\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fanalyze.png\" width=\"400px\"/>\n\n## 项目截图\n\n<img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fin.jpg\"/>\n\n下载功能\n<img alt=\"img_2.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_2.png\"/>\n\n通过android 的notification实现下载进度的展示 以及播放的控制\n<img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fnotifi.jpg\"/>\n<video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2FnotificationAmusiclist.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video>\n\n搜索\n<img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fsearch.png\"/>\n\n深色模式\n<img alt=\"dark mode\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fdark.jpg\"/>\n\n歌单广场\n<img alt=\"img_1.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_1.png\"/>\n<img alt=\"img_3.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_3.png\"/>\n\n批量管理\n<img alt=\"playlist\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Faddtoplaylist.mp4\"/>\n\n## “分析”\n\n以下是对于网易云音乐接口的分析的一角，总的来说\n对我启发的最重要的点是\n他们通过后端来控制前端代码的展示结构，这样的代码我第一次见到\n\n初见时候，不禁又对前端的作用心生鄙夷\n后面尝试复现前端的实现类的时候\n才发现，这样的组织结构，对于前端来说,是非常不友好的\n至少对一个未从头参与开发的初级学习者来说是这样的\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg.png\" width=\"400px\"/>\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg23.png\" width=\"400px\"/>\n","slug":"3wyyapp","published":1,"updated":"2024-07-05T03:00:29.355Z","comments":1,"photos":[],"link":"","_id":"cly84y8610006gg6k21d52c1s","content":"<h1 id=\"wyyapp\"><a href=\"#wyyapp\" class=\"headerlink\" title=\"wyyapp\"></a>wyyapp</h1><p>A new Flutter project.</p>\n<h2 id=\"Getting-Started\"><a href=\"#Getting-Started\" class=\"headerlink\" title=\"Getting Started\"></a>Getting Started</h2><p>一个简陋版的仿网易云音乐app，供学习使用<br>开发实践<br>1.17-2.1 一共十五天，中间休息了三天<br>经历了大大小小四五次重构，原本的代码写的太烂了</p>\n<p>出于 要拓展自己技术栈的目的，这个app先告一段落<br>之后需要学一些go后端以及鸿蒙生态,flutter 还是不值得all in<br>不如说，由于本人的性格，我不会all in任何一门技术</p>\n<p>网易云接口是适配pc端的，对于android端的适配不是很好，所以有些功能实现起来非常复杂<br>不过的确有app端的首页接口，但是其内部结构过于复杂,尝试分析，明白了大部分接口的含义<br>然而，嵌套起来实在太过复杂,具体请看最后的分析</p>\n<p>所以只做了核心功能<br>歌曲类的封装，包括下载、下一首、重新播放等功能<br>下载类的封装、通知类的封装</p>\n<p>可以说,封装、整理、以及称得上是舒爽的代码结构是我在这个项目中学到的最有价值的东西</p>\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fanalyze.png\" width=\"400px\"/>\n\n<h2 id=\"项目截图\"><a href=\"#项目截图\" class=\"headerlink\" title=\"项目截图\"></a>项目截图</h2><img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fin.jpg\"/>\n\n<p>下载功能<br><img alt=\"img_2.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_2.png\"/></p>\n<p>通过android 的notification实现下载进度的展示 以及播放的控制<br><img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fnotifi.jpg\"/><br><video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2FnotificationAmusiclist.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video></p>\n<p>搜索<br><img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fsearch.png\"/></p>\n<p>深色模式<br><img alt=\"dark mode\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fdark.jpg\"/></p>\n<p>歌单广场<br><img alt=\"img_1.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_1.png\"/><br><img alt=\"img_3.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_3.png\"/></p>\n<p>批量管理<br><img alt=\"playlist\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Faddtoplaylist.mp4\"/></p>\n<h2 id=\"“分析”\"><a href=\"#“分析”\" class=\"headerlink\" title=\"“分析”\"></a>“分析”</h2><p>以下是对于网易云音乐接口的分析的一角，总的来说<br>对我启发的最重要的点是<br>他们通过后端来控制前端代码的展示结构，这样的代码我第一次见到</p>\n<p>初见时候，不禁又对前端的作用心生鄙夷<br>后面尝试复现前端的实现类的时候<br>才发现，这样的组织结构，对于前端来说,是非常不友好的<br>至少对一个未从头参与开发的初级学习者来说是这样的</p>\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg.png\" width=\"400px\"/>\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg23.png\" width=\"400px\"/>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<h1 id=\"wyyapp\"><a href=\"#wyyapp\" class=\"headerlink\" title=\"wyyapp\"></a>wyyapp</h1><p>A new Flutter project.</p>\n<h2 id=\"Getting-Started\"><a href=\"#Getting-Started\" class=\"headerlink\" title=\"Getting Started\"></a>Getting Started</h2><p>一个简陋版的仿网易云音乐app，供学习使用<br>开发实践<br>1.17-2.1 一共十五天，中间休息了三天<br>经历了大大小小四五次重构，原本的代码写的太烂了</p>\n<p>出于 要拓展自己技术栈的目的，这个app先告一段落<br>之后需要学一些go后端以及鸿蒙生态,flutter 还是不值得all in<br>不如说，由于本人的性格，我不会all in任何一门技术</p>\n<p>网易云接口是适配pc端的，对于android端的适配不是很好，所以有些功能实现起来非常复杂<br>不过的确有app端的首页接口，但是其内部结构过于复杂,尝试分析，明白了大部分接口的含义<br>然而，嵌套起来实在太过复杂,具体请看最后的分析</p>\n<p>所以只做了核心功能<br>歌曲类的封装，包括下载、下一首、重新播放等功能<br>下载类的封装、通知类的封装</p>\n<p>可以说,封装、整理、以及称得上是舒爽的代码结构是我在这个项目中学到的最有价值的东西</p>\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fanalyze.png\" width=\"400px\"/>\n\n<h2 id=\"项目截图\"><a href=\"#项目截图\" class=\"headerlink\" title=\"项目截图\"></a>项目截图</h2><img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fin.jpg\"/>\n\n<p>下载功能<br><img alt=\"img_2.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_2.png\"/></p>\n<p>通过android 的notification实现下载进度的展示 以及播放的控制<br><img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fnotifi.jpg\"/><br><video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2FnotificationAmusiclist.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video></p>\n<p>搜索<br><img alt=\"img.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fsearch.png\"/></p>\n<p>深色模式<br><img alt=\"dark mode\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fdark.jpg\"/></p>\n<p>歌单广场<br><img alt=\"img_1.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_1.png\"/><br><img alt=\"img_3.png\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg_3.png\"/></p>\n<p>批量管理<br><img alt=\"playlist\" height=\"400px\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Faddtoplaylist.mp4\"/></p>\n<h2 id=\"“分析”\"><a href=\"#“分析”\" class=\"headerlink\" title=\"“分析”\"></a>“分析”</h2><p>以下是对于网易云音乐接口的分析的一角，总的来说<br>对我启发的最重要的点是<br>他们通过后端来控制前端代码的展示结构，这样的代码我第一次见到</p>\n<p>初见时候，不禁又对前端的作用心生鄙夷<br>后面尝试复现前端的实现类的时候<br>才发现，这样的组织结构，对于前端来说,是非常不友好的<br>至少对一个未从头参与开发的初级学习者来说是这样的</p>\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg.png\" width=\"400px\"/>\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/3source%2Fimg23.png\" width=\"400px\"/>\n"},{"layout":"posts","title":"Zing 一款前后端独立gpt软件","subtitle":"本文介绍作者作为独立开发者，完成的一款前后端独立开发的gpt软件，包括了一些技术细节以及界面展示","date":"2024-03-23T13:23:29.000Z","updated":"2024-07-05T03:00:29.360Z","_content":"\n事实上，我并不是一个很聪明的人。\n\n就如同我第二篇文章写的，每写一个字，我都要思量好久。我不知那时那刻落笔的时候是处于一种什么养的自大的心理，\n我把它归咎于完美主义，而此时此刻看来这种自我归因又略显简陋了。\n我常常会想，会不会有一种完美的笔法，能够穷尽此时此刻我所有的想法于一张纸上。于是我便踌躇住，想要捕捉住它。\n然后，我就会在这种踌躇中，一次次的推迟，直到最后，我发现我已经不再是那个想要写下一篇文章的人了。\n\n**Zing** 一个GPT软件\n\n## 概述\n\n大致使用的东西：\n\n后端使用的是go语言，前端使用的是flutter。\nRedis用于邮箱验证码\ndocker用于本地开发验证\nLinux一些命令\n\n文本聊天使用的模型是GPT-3.5，图片聊天使用的是Stable-diffusion-xl模型\n\n## 界面功能展示 项目截图\n\nlogo设计 与 彩色logo\n其中，黑白logo用于纯文字聊天，彩色logo用于图片\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogo.png\" width=\"200px\" style=\"display:inline;\"/>  <img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogo1.png\" width=\"200px\" style=\"display:inline;\"/>\n\n### 注册登录界面 login and register\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogin.jpg\" width=\"250px\" style=\"display:inline;\"/>  <img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fregister.jpg\" width=\"250px\" style=\"display:inline;\"/>\n\n### 主界面 main\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fmain.jpg\" width=\"250px\"/>\n\n### 聊天界面 chat\n\n1.文字聊天演示 text chat\n<video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Ftext_chat.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video>\n2.图片聊天演示 image chat\n<video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fimg_chat.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video>\n\n### 一些附加\n\n1.提供prompts\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fprovide_prompts.jpg\" width=\"250px\"/>\n\n2.使用prompts\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fchat_prompts.jpg\" width=\"250px\"/>\n\n3.版本检查\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fversion_update.jpg\" width=\"250px\"/>\n\n## 一些总结\n\n总体开发大致持续了十五天左右，从开始学习go到目前以上展示的进度\n可以称得上是收获颇丰\n\n- 技术上来讲,这是第一次真正实操了docker、redis、linux、swagger以及一些问题\n- 比之前的纸上谈兵不同 ，实践之后才发现，原来对于我来讲像是一道道关隘的技术概念，真正实操起来也不过尔尔\n- 产品上来讲，这次我是真正体会到了文档的重要性，有组织的开发流程以及预先规定好的字段和接口规范、功能规范，对于开发是真的大有益处\n  心态上来讲，”先完成再优化“，我在开发过程中，一直在想着如何优化，导致进度缓慢\n\n之后会专门写一篇文章来总结一下这次开发的一些经验和教训\n不过，从我对写作的热情来看，这篇文章可能会拖很久，我还是在这里提一嘴吧\n也不算太鸽\n\n比如，在用移动端连接pc端的后端的时候，即使使用了跨域，也会无法访问到\n即使在同一个wifi下，也会有这个问题，因为即使是同一个网络，也可能会分不同网段\n这涉及内网穿透\n\n```\n","source":"_posts/4Zing.md","raw":"---\nlayout: posts\ntitle: Zing 一款前后端独立gpt软件\nsubtitle: 本文介绍作者作为独立开发者，完成的一款前后端独立开发的gpt软件，包括了一些技术细节以及界面展示 \ndate: 2024-3-23 21:23:29\nupdated:\ntags:\n  - flutter\n  - gpt\n  - ai\n  - develop\n  - go\n---\n\n事实上，我并不是一个很聪明的人。\n\n就如同我第二篇文章写的，每写一个字，我都要思量好久。我不知那时那刻落笔的时候是处于一种什么养的自大的心理，\n我把它归咎于完美主义，而此时此刻看来这种自我归因又略显简陋了。\n我常常会想，会不会有一种完美的笔法，能够穷尽此时此刻我所有的想法于一张纸上。于是我便踌躇住，想要捕捉住它。\n然后，我就会在这种踌躇中，一次次的推迟，直到最后，我发现我已经不再是那个想要写下一篇文章的人了。\n\n**Zing** 一个GPT软件\n\n## 概述\n\n大致使用的东西：\n\n后端使用的是go语言，前端使用的是flutter。\nRedis用于邮箱验证码\ndocker用于本地开发验证\nLinux一些命令\n\n文本聊天使用的模型是GPT-3.5，图片聊天使用的是Stable-diffusion-xl模型\n\n## 界面功能展示 项目截图\n\nlogo设计 与 彩色logo\n其中，黑白logo用于纯文字聊天，彩色logo用于图片\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogo.png\" width=\"200px\" style=\"display:inline;\"/>  <img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogo1.png\" width=\"200px\" style=\"display:inline;\"/>\n\n### 注册登录界面 login and register\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogin.jpg\" width=\"250px\" style=\"display:inline;\"/>  <img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fregister.jpg\" width=\"250px\" style=\"display:inline;\"/>\n\n### 主界面 main\n\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fmain.jpg\" width=\"250px\"/>\n\n### 聊天界面 chat\n\n1.文字聊天演示 text chat\n<video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Ftext_chat.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video>\n2.图片聊天演示 image chat\n<video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fimg_chat.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video>\n\n### 一些附加\n\n1.提供prompts\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fprovide_prompts.jpg\" width=\"250px\"/>\n\n2.使用prompts\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fchat_prompts.jpg\" width=\"250px\"/>\n\n3.版本检查\n<img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fversion_update.jpg\" width=\"250px\"/>\n\n## 一些总结\n\n总体开发大致持续了十五天左右，从开始学习go到目前以上展示的进度\n可以称得上是收获颇丰\n\n- 技术上来讲,这是第一次真正实操了docker、redis、linux、swagger以及一些问题\n- 比之前的纸上谈兵不同 ，实践之后才发现，原来对于我来讲像是一道道关隘的技术概念，真正实操起来也不过尔尔\n- 产品上来讲，这次我是真正体会到了文档的重要性，有组织的开发流程以及预先规定好的字段和接口规范、功能规范，对于开发是真的大有益处\n  心态上来讲，”先完成再优化“，我在开发过程中，一直在想着如何优化，导致进度缓慢\n\n之后会专门写一篇文章来总结一下这次开发的一些经验和教训\n不过，从我对写作的热情来看，这篇文章可能会拖很久，我还是在这里提一嘴吧\n也不算太鸽\n\n比如，在用移动端连接pc端的后端的时候，即使使用了跨域，也会无法访问到\n即使在同一个wifi下，也会有这个问题，因为即使是同一个网络，也可能会分不同网段\n这涉及内网穿透\n\n```\n","slug":"4Zing","published":1,"comments":1,"photos":[],"link":"","_id":"cly84y8630007gg6k5tny5ew8","content":"<p>事实上，我并不是一个很聪明的人。</p>\n<p>就如同我第二篇文章写的，每写一个字，我都要思量好久。我不知那时那刻落笔的时候是处于一种什么养的自大的心理，<br>我把它归咎于完美主义，而此时此刻看来这种自我归因又略显简陋了。<br>我常常会想，会不会有一种完美的笔法，能够穷尽此时此刻我所有的想法于一张纸上。于是我便踌躇住，想要捕捉住它。<br>然后，我就会在这种踌躇中，一次次的推迟，直到最后，我发现我已经不再是那个想要写下一篇文章的人了。</p>\n<p><strong>Zing</strong> 一个GPT软件</p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>大致使用的东西：</p>\n<p>后端使用的是go语言，前端使用的是flutter。<br>Redis用于邮箱验证码<br>docker用于本地开发验证<br>Linux一些命令</p>\n<p>文本聊天使用的模型是GPT-3.5，图片聊天使用的是Stable-diffusion-xl模型</p>\n<h2 id=\"界面功能展示-项目截图\"><a href=\"#界面功能展示-项目截图\" class=\"headerlink\" title=\"界面功能展示 项目截图\"></a>界面功能展示 项目截图</h2><p>logo设计 与 彩色logo<br>其中，黑白logo用于纯文字聊天，彩色logo用于图片<br><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogo.png\" width=\"200px\" style=\"display:inline;\"/>  <img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogo1.png\" width=\"200px\" style=\"display:inline;\"/></p>\n<h3 id=\"注册登录界面-login-and-register\"><a href=\"#注册登录界面-login-and-register\" class=\"headerlink\" title=\"注册登录界面 login and register\"></a>注册登录界面 login and register</h3><p><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogin.jpg\" width=\"250px\" style=\"display:inline;\"/>  <img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fregister.jpg\" width=\"250px\" style=\"display:inline;\"/></p>\n<h3 id=\"主界面-main\"><a href=\"#主界面-main\" class=\"headerlink\" title=\"主界面 main\"></a>主界面 main</h3><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fmain.jpg\" width=\"250px\"/>\n\n<h3 id=\"聊天界面-chat\"><a href=\"#聊天界面-chat\" class=\"headerlink\" title=\"聊天界面 chat\"></a>聊天界面 chat</h3><p>1.文字聊天演示 text chat<br><video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Ftext_chat.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video><br>2.图片聊天演示 image chat<br><video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fimg_chat.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video></p>\n<h3 id=\"一些附加\"><a href=\"#一些附加\" class=\"headerlink\" title=\"一些附加\"></a>一些附加</h3><p>1.提供prompts<br><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fprovide_prompts.jpg\" width=\"250px\"/></p>\n<p>2.使用prompts<br><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fchat_prompts.jpg\" width=\"250px\"/></p>\n<p>3.版本检查<br><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fversion_update.jpg\" width=\"250px\"/></p>\n<h2 id=\"一些总结\"><a href=\"#一些总结\" class=\"headerlink\" title=\"一些总结\"></a>一些总结</h2><p>总体开发大致持续了十五天左右，从开始学习go到目前以上展示的进度<br>可以称得上是收获颇丰</p>\n<ul>\n<li>技术上来讲,这是第一次真正实操了docker、redis、linux、swagger以及一些问题</li>\n<li>比之前的纸上谈兵不同 ，实践之后才发现，原来对于我来讲像是一道道关隘的技术概念，真正实操起来也不过尔尔</li>\n<li>产品上来讲，这次我是真正体会到了文档的重要性，有组织的开发流程以及预先规定好的字段和接口规范、功能规范，对于开发是真的大有益处<br>心态上来讲，”先完成再优化“，我在开发过程中，一直在想着如何优化，导致进度缓慢</li>\n</ul>\n<p>之后会专门写一篇文章来总结一下这次开发的一些经验和教训<br>不过，从我对写作的热情来看，这篇文章可能会拖很久，我还是在这里提一嘴吧<br>也不算太鸽</p>\n<p>比如，在用移动端连接pc端的后端的时候，即使使用了跨域，也会无法访问到<br>即使在同一个wifi下，也会有这个问题，因为即使是同一个网络，也可能会分不同网段<br>这涉及内网穿透</p>\n<pre><code>\n</code></pre>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>事实上，我并不是一个很聪明的人。</p>\n<p>就如同我第二篇文章写的，每写一个字，我都要思量好久。我不知那时那刻落笔的时候是处于一种什么养的自大的心理，<br>我把它归咎于完美主义，而此时此刻看来这种自我归因又略显简陋了。<br>我常常会想，会不会有一种完美的笔法，能够穷尽此时此刻我所有的想法于一张纸上。于是我便踌躇住，想要捕捉住它。<br>然后，我就会在这种踌躇中，一次次的推迟，直到最后，我发现我已经不再是那个想要写下一篇文章的人了。</p>\n<p><strong>Zing</strong> 一个GPT软件</p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>大致使用的东西：</p>\n<p>后端使用的是go语言，前端使用的是flutter。<br>Redis用于邮箱验证码<br>docker用于本地开发验证<br>Linux一些命令</p>\n<p>文本聊天使用的模型是GPT-3.5，图片聊天使用的是Stable-diffusion-xl模型</p>\n<h2 id=\"界面功能展示-项目截图\"><a href=\"#界面功能展示-项目截图\" class=\"headerlink\" title=\"界面功能展示 项目截图\"></a>界面功能展示 项目截图</h2><p>logo设计 与 彩色logo<br>其中，黑白logo用于纯文字聊天，彩色logo用于图片<br><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogo.png\" width=\"200px\" style=\"display:inline;\"/>  <img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogo1.png\" width=\"200px\" style=\"display:inline;\"/></p>\n<h3 id=\"注册登录界面-login-and-register\"><a href=\"#注册登录界面-login-and-register\" class=\"headerlink\" title=\"注册登录界面 login and register\"></a>注册登录界面 login and register</h3><p><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Flogin.jpg\" width=\"250px\" style=\"display:inline;\"/>  <img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fregister.jpg\" width=\"250px\" style=\"display:inline;\"/></p>\n<h3 id=\"主界面-main\"><a href=\"#主界面-main\" class=\"headerlink\" title=\"主界面 main\"></a>主界面 main</h3><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fmain.jpg\" width=\"250px\"/>\n\n<h3 id=\"聊天界面-chat\"><a href=\"#聊天界面-chat\" class=\"headerlink\" title=\"聊天界面 chat\"></a>聊天界面 chat</h3><p>1.文字聊天演示 text chat<br><video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Ftext_chat.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video><br>2.图片聊天演示 image chat<br><video src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fimg_chat.mp4\" controls=\"controls\" width=\"400px\" height=\"300px\"></video></p>\n<h3 id=\"一些附加\"><a href=\"#一些附加\" class=\"headerlink\" title=\"一些附加\"></a>一些附加</h3><p>1.提供prompts<br><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fprovide_prompts.jpg\" width=\"250px\"/></p>\n<p>2.使用prompts<br><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fchat_prompts.jpg\" width=\"250px\"/></p>\n<p>3.版本检查<br><img alt=\"img.png\" src=\"https://sherlock-1314462060.cos.ap-nanjing.myqcloud.com/self-page/4source%2Fversion_update.jpg\" width=\"250px\"/></p>\n<h2 id=\"一些总结\"><a href=\"#一些总结\" class=\"headerlink\" title=\"一些总结\"></a>一些总结</h2><p>总体开发大致持续了十五天左右，从开始学习go到目前以上展示的进度<br>可以称得上是收获颇丰</p>\n<ul>\n<li>技术上来讲,这是第一次真正实操了docker、redis、linux、swagger以及一些问题</li>\n<li>比之前的纸上谈兵不同 ，实践之后才发现，原来对于我来讲像是一道道关隘的技术概念，真正实操起来也不过尔尔</li>\n<li>产品上来讲，这次我是真正体会到了文档的重要性，有组织的开发流程以及预先规定好的字段和接口规范、功能规范，对于开发是真的大有益处<br>心态上来讲，”先完成再优化“，我在开发过程中，一直在想着如何优化，导致进度缓慢</li>\n</ul>\n<p>之后会专门写一篇文章来总结一下这次开发的一些经验和教训<br>不过，从我对写作的热情来看，这篇文章可能会拖很久，我还是在这里提一嘴吧<br>也不算太鸽</p>\n<p>比如，在用移动端连接pc端的后端的时候，即使使用了跨域，也会无法访问到<br>即使在同一个wifi下，也会有这个问题，因为即使是同一个网络，也可能会分不同网段<br>这涉及内网穿透</p>\n<pre><code>\n</code></pre>\n"},{"layout":"posts","title":"简单的防抖及其迭代","description":"本文主要讲述了防抖的基本原理，以及在实际开发中的应用，以及一些迭代","date":"2024-04-20T08:32:52.283Z","updated":"2024-07-03T02:03:46.907Z","_content":"\n![(可以写关于图片的描述)](/source/_img/bg1.png)\n\n以下情景纯属虚构，如有雷同纯属巧合\n\n## 初相见\n\n这两天小刘被安排到一个项目（被老板pua中），遇到了这样一个问题：在用户登录的时候手抖点了两次，请求了两侧资源设置了两次token，但是真正完成的有效功能只有一次。\n\n```javascript\nlet login = () => {\n    console.log(\"login\")\n}\n```\n\n### 第一次\n\n本着大国工匠的精神，老板亲自催促小刘优化这个问题\n\n于是小刘把它做成了下面这样\n\n```javascript\n    let delay = 500\nlet timeOut\n\nlet login = () => {\n    if (timeOut) {\n        clearTimeOut(timeOut);\n    }\n    timeOut = setTimeout(() => {\n        console.log(\"login\")\n    }, delay)\n}\n```\n\n不错，很棒，每次点击如果和上一次相差不到0.5秒，那么取消上一次的登录请求，并做一些提示。\n\n但是，过了两天，小刘又遇到了同样的问题，用户的登出方法以及其他的每个按钮好像都需要类似的功能\n\n要知道，小刘是个连骑电车都嫌拿着钥匙麻烦的人\n\n他可不愿意每次都定义好几个delay\n\n```javascript\n    let delay = 500\nlet delay2 = 1000\nlet delay3 = 1500\n\nlet timeOut\nlet timeOut2\nlet timeOut3\n\nlet login = () => {\n    if (timeOut) {\n        //做一些提示\n        clearTimeout(timeOut);\n    }\n    timeOut = setTimeout(() => {\n        console.log(\"login\")\n    }, delay);\n}\n```\n\n## 闭包\n\n突然，小刘灵光一闪，既然每份延迟都使用独立的delay和timeout，那我是不是可以用闭包记住上下文的特性，把这种类似的方法单独抽象出来？\n\n```javascript\nexport function debounce(func, delay) {\n    let timeout;\n\n    return function (...args) {\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            console.log(\"debounce\")\n            func(args);\n        }, delay);\n    }\n}\n```\n\n现在，小刘的代码成了这样子\n\n```javascript\n  let login = () => {\n    console.log(\"login\")\n}\n\nlet logout = () => {\n    console.log(\"logout\")\n}\n\nlogin = debounce(login, 500)\nlogout = debounce(logout, 500)\n\nreturn (\n    <>\n        <button onClick={\n            () => {\n                login()\n            }\n        }>Click me\n        </button>\n        <button onClick={\n            () => {\n                logout()\n            }\n        }>\n        </button>\n\n    </>\n);\n```\n\n这样，就不会有那么多delay1.delay2.delay3.delay4......delayn了\n\n小刘兴冲冲把他的代码提交了上去\n\n## 再修改 —— 原型\n\n另一位同事小文兴冲冲地把更新的代码拉了下来，看到了小刘的代码\n\n然后他浑身一颤，想到了项目发展到最后可能出现这样的情况\n\n```javascript\n   login = debounce(login, 500)\nlogout = debounce(logout, 500)\nfn = debounce(fn, 500)\nfn1 = debounce(fn1, 500)\nfn2 = debounce(fn2, 500)\nfn3 = debounce(fn3, 500)\n```\n\n每个方法执行防抖都要重新赋一个值，每个赋值都需要传入一个可能完全一样的delay\n\n不仅如此，fn1被debounce处理之前的函数也丢失了！\n\n这意味着我们如果想要使用未debounce的函数，就必须要重新定义一个，而且名字还不能一样。\n\n事实上，小文不仅仅是个喝水都懒得张嘴的懒货，而且也是一个无可救药的 ”起名困难户“，\n\n他绝对不能让这种事情发生\n\n所以他想到，\n\n能不能让每个方法都具有一个debounce的方法属性，调用debounce则执行\n\nof course, it can!\n\n```javascript\nexport function debounce(delay) {\n    if (!delay) delay = 500;\n    let timeout;\n    const func = this;\t//这里的this是调用debounce的对象，此处是方法对象\n\n    return function (...args) {\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            func(args);\n        }, delay);\n    }\n}\n```\n\n小文首先把debounce工具类函数改成了上面这个样子\n\n然后又添加了这样一句话\n\n```javascript\n    Function.prototype.debounce = debounce\n```\n\n于是\n\n```javascript\nFunction.prototype.debounce = debounce\n\nfunction onClick() {\n    console.log(\"clickme\")\n}\n\nreturn (\n    <>\n        <button onClick={onClick.debounce()}>Click me</button>\n    </>\n)\n```\n\n这样就可以在不影响原始方法的情况下使用它的debounce拉，而且还不需要传delay值!\n\n```javascript\n    if (!delay) delay = 500;  //如果delay不存在（null、undefined、0...） 就默认为500\n```\n\n**需要注意的是，将 `debounce` 函数添加到 `Function.prototype`\n上并不是一个好的实践，因为它会改变所有函数的行为，可能导致其他依赖于 `Function.prototype` 的代码出现问题。**\n此处仅仅是一个示范，如果没有严谨的文档和规约不建议在项目中使用\n\n## 特殊的环境\n\n不久，小文就被优化了，他的代码流到了一位更年轻，技术更好的小刀身上，\n\n小刀是一位资深的java工程师，非常喜欢用类、对象表示一切\n\n不久，他就发现了这样一个问题：\n\n```javascript\n    // eslint-disable-next-line no-extend-native\nFunction.prototype.debounce = debounce\n\nlet user = {\n    name: \"John\",\n    sayHi() {\n        console.log(\"Hi, \" + this.name);\n    },\n};\n\nreturn (\n    <>\n        <button onClick={() => {\n            user.sayHi.debounce(1000)()\n        }}>Click me\n        </button>\n    </>\n)    \n```\n\n当使用user里的sayHi调用debounce时，会报错！\n\n```\nUncaught TypeError: Cannot convert undefined or null to object\n```\n\n小文刀当即力断，立刻反应出来了问题在哪，然后他把debounce改建成了如下这样\n\n```javascript\nexport function debounce(delay) {\n    console.log(\"debounce\");\n    if (!delay) delay = 500;\n    let timeout;\n    const func = this;\n\n    return function (...args) {\n        const env = this;  //////新增 生命env为this\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            func.apply(env, args);  ////新增 绑定func函数的词法环境（上下文）为env\n        }, delay);\n    }\n}\n```\n\n不过可惜，他对javascript this机制的了解还是不是很深\n\n深谙javascript八股之道的朋友可能已经发现了，这段代码依旧会报错！\n\n以下是原因\n\n1. 在调用user.sayHi时才会计算this的值\n2. 调用过程为： (user.sayHi).debounce()()\n   ,在user.sayHi时，this的值并没有成为”user“，而且sayHi也不是一个词法环境，所以在调用debounce，形成闭包并返回函数后，给env赋值的this时undefined\n\n所以 ....\n\n当然，前面说过，小刀技术水平还不错，于是他很自然地想到了，把需要成为this的环境传进去，当然，也需要兼容不需要this的函数\n\n```javascript\nexport function debounce(delay, env) {\n   if (!delay) delay = 500;\n   let timeout;\n   const func = this;\n\n   return function (...args) {\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(() => {\n         if (env) {\n            func.apply(env, args);\n         } else {\n            func(...args);\n         }\n      }, delay);\n   }\n}\n```\n\n然而，沉溺在修改代码的忙碌中，小刀并没有意识到可以这么做....\n\n```javascript\n  <button onClick={user.sayHi.bind(user).debounce(500)}>\n   Click me\n  </button>\n```\n\nbind会返回一个绑定了user的函数\n\napply则是返回绑定了user的函数执行的结构\n\n## 结尾\n\n说实话，在写这篇文章之前，我只准确地判断了了原型及之前的结果，对于user.sayHi.debouce的运行结果，我理所当然认为也是可以那么运行的。\n\n除去对this的分析之外，还有一点react的小小的收获\n\n```javascript\n let user = {\n    name: \"John\",\n    sayHi() {\n        console.log(\"Hi, \" + this.name);\n    },\n};\n\nreturn (\n    <>\n        <button onClick={user.sayHi}>Click me</button>\n    </>\n)\n```\n\n在这段代码中调用onClick，是会报错的，因为此处的user.sayHi是一个”函数名“，React会把user.sayHi赋值给onClick，然后再执行onClick()\n\n但是，仔细一想，其实这种逻辑我早就应该知道，如下\n\n```javascript\n    let user = {\n    name: \"John\",\n    sayHi() {\n        console.log(\"Hi, \" + this.name);\n    },\n};\n\nlet animal = {\n    name: \"Dog\",\n}\n\nlet sayHi = user.sayHi\n\nsayHi()  ///1. 报错，因为this丢失，为undefined\nsayHi.apply(user)  //2. Hi, John,成功，使用apply绑定this\nuser.sayHi.apply(animal)  //3. Hi, Dog,成功，使用apply绑定this\t\n```\n\nonClick的赋值正是第一种，\n\n解决方法，外部包裹一个箭头函数或者function匿名函数即可，但是要注意的是这种方法对于要调用debounce的onClick却行不通，\n\n```\n  <button onClick={()=>{\n  \tuser.sayHi.debounce()()\n  }}>Click me</button>\n```\n\n因为赋值给onClick的是箭头函数，而不是debounce，所以，每次调用onClick的时候都会重新创建一个debounce\n\n顺便说一句，本来是想用ts写这篇文章的，但是在this赋值的时候会报一堆错，于是改用js\n想起来前些日子看到了一篇文章 ”get out typescript“ 好像题目如下，抨击了ts丢失了js最显著的优点：”灵活性“\n现在看来，确实如此\n","source":"_posts/5js_debounce.md","raw":"---\nlayout: posts\ntitle: 简单的防抖及其迭代\ndescription: 本文主要讲述了防抖的基本原理，以及在实际开发中的应用，以及一些迭代\ndate: 2024-4.20 16.36\nupdated:\ntags:\n  - develop\n  - js\n---\n\n![(可以写关于图片的描述)](/source/_img/bg1.png)\n\n以下情景纯属虚构，如有雷同纯属巧合\n\n## 初相见\n\n这两天小刘被安排到一个项目（被老板pua中），遇到了这样一个问题：在用户登录的时候手抖点了两次，请求了两侧资源设置了两次token，但是真正完成的有效功能只有一次。\n\n```javascript\nlet login = () => {\n    console.log(\"login\")\n}\n```\n\n### 第一次\n\n本着大国工匠的精神，老板亲自催促小刘优化这个问题\n\n于是小刘把它做成了下面这样\n\n```javascript\n    let delay = 500\nlet timeOut\n\nlet login = () => {\n    if (timeOut) {\n        clearTimeOut(timeOut);\n    }\n    timeOut = setTimeout(() => {\n        console.log(\"login\")\n    }, delay)\n}\n```\n\n不错，很棒，每次点击如果和上一次相差不到0.5秒，那么取消上一次的登录请求，并做一些提示。\n\n但是，过了两天，小刘又遇到了同样的问题，用户的登出方法以及其他的每个按钮好像都需要类似的功能\n\n要知道，小刘是个连骑电车都嫌拿着钥匙麻烦的人\n\n他可不愿意每次都定义好几个delay\n\n```javascript\n    let delay = 500\nlet delay2 = 1000\nlet delay3 = 1500\n\nlet timeOut\nlet timeOut2\nlet timeOut3\n\nlet login = () => {\n    if (timeOut) {\n        //做一些提示\n        clearTimeout(timeOut);\n    }\n    timeOut = setTimeout(() => {\n        console.log(\"login\")\n    }, delay);\n}\n```\n\n## 闭包\n\n突然，小刘灵光一闪，既然每份延迟都使用独立的delay和timeout，那我是不是可以用闭包记住上下文的特性，把这种类似的方法单独抽象出来？\n\n```javascript\nexport function debounce(func, delay) {\n    let timeout;\n\n    return function (...args) {\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            console.log(\"debounce\")\n            func(args);\n        }, delay);\n    }\n}\n```\n\n现在，小刘的代码成了这样子\n\n```javascript\n  let login = () => {\n    console.log(\"login\")\n}\n\nlet logout = () => {\n    console.log(\"logout\")\n}\n\nlogin = debounce(login, 500)\nlogout = debounce(logout, 500)\n\nreturn (\n    <>\n        <button onClick={\n            () => {\n                login()\n            }\n        }>Click me\n        </button>\n        <button onClick={\n            () => {\n                logout()\n            }\n        }>\n        </button>\n\n    </>\n);\n```\n\n这样，就不会有那么多delay1.delay2.delay3.delay4......delayn了\n\n小刘兴冲冲把他的代码提交了上去\n\n## 再修改 —— 原型\n\n另一位同事小文兴冲冲地把更新的代码拉了下来，看到了小刘的代码\n\n然后他浑身一颤，想到了项目发展到最后可能出现这样的情况\n\n```javascript\n   login = debounce(login, 500)\nlogout = debounce(logout, 500)\nfn = debounce(fn, 500)\nfn1 = debounce(fn1, 500)\nfn2 = debounce(fn2, 500)\nfn3 = debounce(fn3, 500)\n```\n\n每个方法执行防抖都要重新赋一个值，每个赋值都需要传入一个可能完全一样的delay\n\n不仅如此，fn1被debounce处理之前的函数也丢失了！\n\n这意味着我们如果想要使用未debounce的函数，就必须要重新定义一个，而且名字还不能一样。\n\n事实上，小文不仅仅是个喝水都懒得张嘴的懒货，而且也是一个无可救药的 ”起名困难户“，\n\n他绝对不能让这种事情发生\n\n所以他想到，\n\n能不能让每个方法都具有一个debounce的方法属性，调用debounce则执行\n\nof course, it can!\n\n```javascript\nexport function debounce(delay) {\n    if (!delay) delay = 500;\n    let timeout;\n    const func = this;\t//这里的this是调用debounce的对象，此处是方法对象\n\n    return function (...args) {\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            func(args);\n        }, delay);\n    }\n}\n```\n\n小文首先把debounce工具类函数改成了上面这个样子\n\n然后又添加了这样一句话\n\n```javascript\n    Function.prototype.debounce = debounce\n```\n\n于是\n\n```javascript\nFunction.prototype.debounce = debounce\n\nfunction onClick() {\n    console.log(\"clickme\")\n}\n\nreturn (\n    <>\n        <button onClick={onClick.debounce()}>Click me</button>\n    </>\n)\n```\n\n这样就可以在不影响原始方法的情况下使用它的debounce拉，而且还不需要传delay值!\n\n```javascript\n    if (!delay) delay = 500;  //如果delay不存在（null、undefined、0...） 就默认为500\n```\n\n**需要注意的是，将 `debounce` 函数添加到 `Function.prototype`\n上并不是一个好的实践，因为它会改变所有函数的行为，可能导致其他依赖于 `Function.prototype` 的代码出现问题。**\n此处仅仅是一个示范，如果没有严谨的文档和规约不建议在项目中使用\n\n## 特殊的环境\n\n不久，小文就被优化了，他的代码流到了一位更年轻，技术更好的小刀身上，\n\n小刀是一位资深的java工程师，非常喜欢用类、对象表示一切\n\n不久，他就发现了这样一个问题：\n\n```javascript\n    // eslint-disable-next-line no-extend-native\nFunction.prototype.debounce = debounce\n\nlet user = {\n    name: \"John\",\n    sayHi() {\n        console.log(\"Hi, \" + this.name);\n    },\n};\n\nreturn (\n    <>\n        <button onClick={() => {\n            user.sayHi.debounce(1000)()\n        }}>Click me\n        </button>\n    </>\n)    \n```\n\n当使用user里的sayHi调用debounce时，会报错！\n\n```\nUncaught TypeError: Cannot convert undefined or null to object\n```\n\n小文刀当即力断，立刻反应出来了问题在哪，然后他把debounce改建成了如下这样\n\n```javascript\nexport function debounce(delay) {\n    console.log(\"debounce\");\n    if (!delay) delay = 500;\n    let timeout;\n    const func = this;\n\n    return function (...args) {\n        const env = this;  //////新增 生命env为this\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            func.apply(env, args);  ////新增 绑定func函数的词法环境（上下文）为env\n        }, delay);\n    }\n}\n```\n\n不过可惜，他对javascript this机制的了解还是不是很深\n\n深谙javascript八股之道的朋友可能已经发现了，这段代码依旧会报错！\n\n以下是原因\n\n1. 在调用user.sayHi时才会计算this的值\n2. 调用过程为： (user.sayHi).debounce()()\n   ,在user.sayHi时，this的值并没有成为”user“，而且sayHi也不是一个词法环境，所以在调用debounce，形成闭包并返回函数后，给env赋值的this时undefined\n\n所以 ....\n\n当然，前面说过，小刀技术水平还不错，于是他很自然地想到了，把需要成为this的环境传进去，当然，也需要兼容不需要this的函数\n\n```javascript\nexport function debounce(delay, env) {\n   if (!delay) delay = 500;\n   let timeout;\n   const func = this;\n\n   return function (...args) {\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(() => {\n         if (env) {\n            func.apply(env, args);\n         } else {\n            func(...args);\n         }\n      }, delay);\n   }\n}\n```\n\n然而，沉溺在修改代码的忙碌中，小刀并没有意识到可以这么做....\n\n```javascript\n  <button onClick={user.sayHi.bind(user).debounce(500)}>\n   Click me\n  </button>\n```\n\nbind会返回一个绑定了user的函数\n\napply则是返回绑定了user的函数执行的结构\n\n## 结尾\n\n说实话，在写这篇文章之前，我只准确地判断了了原型及之前的结果，对于user.sayHi.debouce的运行结果，我理所当然认为也是可以那么运行的。\n\n除去对this的分析之外，还有一点react的小小的收获\n\n```javascript\n let user = {\n    name: \"John\",\n    sayHi() {\n        console.log(\"Hi, \" + this.name);\n    },\n};\n\nreturn (\n    <>\n        <button onClick={user.sayHi}>Click me</button>\n    </>\n)\n```\n\n在这段代码中调用onClick，是会报错的，因为此处的user.sayHi是一个”函数名“，React会把user.sayHi赋值给onClick，然后再执行onClick()\n\n但是，仔细一想，其实这种逻辑我早就应该知道，如下\n\n```javascript\n    let user = {\n    name: \"John\",\n    sayHi() {\n        console.log(\"Hi, \" + this.name);\n    },\n};\n\nlet animal = {\n    name: \"Dog\",\n}\n\nlet sayHi = user.sayHi\n\nsayHi()  ///1. 报错，因为this丢失，为undefined\nsayHi.apply(user)  //2. Hi, John,成功，使用apply绑定this\nuser.sayHi.apply(animal)  //3. Hi, Dog,成功，使用apply绑定this\t\n```\n\nonClick的赋值正是第一种，\n\n解决方法，外部包裹一个箭头函数或者function匿名函数即可，但是要注意的是这种方法对于要调用debounce的onClick却行不通，\n\n```\n  <button onClick={()=>{\n  \tuser.sayHi.debounce()()\n  }}>Click me</button>\n```\n\n因为赋值给onClick的是箭头函数，而不是debounce，所以，每次调用onClick的时候都会重新创建一个debounce\n\n顺便说一句，本来是想用ts写这篇文章的，但是在this赋值的时候会报一堆错，于是改用js\n想起来前些日子看到了一篇文章 ”get out typescript“ 好像题目如下，抨击了ts丢失了js最显著的优点：”灵活性“\n现在看来，确实如此\n","slug":"5js_debounce","published":1,"comments":1,"photos":[],"link":"","_id":"cly84y8650008gg6k332lcnck","content":"<p><img src=\"/source/_img/bg1.png\" alt=\"(可以写关于图片的描述)\"></p>\n<p>以下情景纯属虚构，如有雷同纯属巧合</p>\n<h2 id=\"初相见\"><a href=\"#初相见\" class=\"headerlink\" title=\"初相见\"></a>初相见</h2><p>这两天小刘被安排到一个项目（被老板pua中），遇到了这样一个问题：在用户登录的时候手抖点了两次，请求了两侧资源设置了两次token，但是真正完成的有效功能只有一次。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;login&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第一次\"><a href=\"#第一次\" class=\"headerlink\" title=\"第一次\"></a>第一次</h3><p>本着大国工匠的精神，老板亲自催促小刘优化这个问题</p>\n<p>于是小刘把它做成了下面这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">let</span> delay = <span class=\"number\">500</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> timeOut</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timeOut) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">clearTimeOut</span>(timeOut);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timeOut = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;login&quot;</span>)</span><br><span class=\"line\">    &#125;, delay)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>不错，很棒，每次点击如果和上一次相差不到0.5秒，那么取消上一次的登录请求，并做一些提示。</p>\n<p>但是，过了两天，小刘又遇到了同样的问题，用户的登出方法以及其他的每个按钮好像都需要类似的功能</p>\n<p>要知道，小刘是个连骑电车都嫌拿着钥匙麻烦的人</p>\n<p>他可不愿意每次都定义好几个delay</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">let</span> delay = <span class=\"number\">500</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> delay2 = <span class=\"number\">1000</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> delay3 = <span class=\"number\">1500</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> timeOut</span><br><span class=\"line\"><span class=\"keyword\">let</span> timeOut2</span><br><span class=\"line\"><span class=\"keyword\">let</span> timeOut3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timeOut) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//做一些提示</span></span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(timeOut);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timeOut = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;login&quot;</span>)</span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><p>突然，小刘灵光一闪，既然每份延迟都使用独立的delay和timeout，那我是不是可以用闭包记住上下文的特性，把这种类似的方法单独抽象出来？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func, delay</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;debounce&quot;</span>)</span><br><span class=\"line\">            <span class=\"title function_\">func</span>(args);</span><br><span class=\"line\">        &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>现在，小刘的代码成了这样子</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;login&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">logout</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;logout&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">login = <span class=\"title function_\">debounce</span>(login, <span class=\"number\">500</span>)</span><br><span class=\"line\">logout = <span class=\"title function_\">debounce</span>(logout, <span class=\"number\">500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            () =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                login()</span></span><br><span class=\"line\"><span class=\"language-xml\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;&gt;Click me</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            () =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                logout()</span></span><br><span class=\"line\"><span class=\"language-xml\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>这样，就不会有那么多delay1.delay2.delay3.delay4……delayn了</p>\n<p>小刘兴冲冲把他的代码提交了上去</p>\n<h2 id=\"再修改-——-原型\"><a href=\"#再修改-——-原型\" class=\"headerlink\" title=\"再修改 —— 原型\"></a>再修改 —— 原型</h2><p>另一位同事小文兴冲冲地把更新的代码拉了下来，看到了小刘的代码</p>\n<p>然后他浑身一颤，想到了项目发展到最后可能出现这样的情况</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   login = <span class=\"title function_\">debounce</span>(login, <span class=\"number\">500</span>)</span><br><span class=\"line\">logout = <span class=\"title function_\">debounce</span>(logout, <span class=\"number\">500</span>)</span><br><span class=\"line\">fn = <span class=\"title function_\">debounce</span>(fn, <span class=\"number\">500</span>)</span><br><span class=\"line\">fn1 = <span class=\"title function_\">debounce</span>(fn1, <span class=\"number\">500</span>)</span><br><span class=\"line\">fn2 = <span class=\"title function_\">debounce</span>(fn2, <span class=\"number\">500</span>)</span><br><span class=\"line\">fn3 = <span class=\"title function_\">debounce</span>(fn3, <span class=\"number\">500</span>)</span><br></pre></td></tr></table></figure>\n\n<p>每个方法执行防抖都要重新赋一个值，每个赋值都需要传入一个可能完全一样的delay</p>\n<p>不仅如此，fn1被debounce处理之前的函数也丢失了！</p>\n<p>这意味着我们如果想要使用未debounce的函数，就必须要重新定义一个，而且名字还不能一样。</p>\n<p>事实上，小文不仅仅是个喝水都懒得张嘴的懒货，而且也是一个无可救药的 ”起名困难户“，</p>\n<p>他绝对不能让这种事情发生</p>\n<p>所以他想到，</p>\n<p>能不能让每个方法都具有一个debounce的方法属性，调用debounce则执行</p>\n<p>of course, it can!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">delay</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!delay) delay = <span class=\"number\">500</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> func = <span class=\"variable language_\">this</span>;\t<span class=\"comment\">//这里的this是调用debounce的对象，此处是方法对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">func</span>(args);</span><br><span class=\"line\">        &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>小文首先把debounce工具类函数改成了上面这个样子</p>\n<p>然后又添加了这样一句话</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">debounce</span> = debounce</span><br></pre></td></tr></table></figure>\n\n<p>于是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">debounce</span> = debounce</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onClick</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;clickme&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;onClick.debounce()&#125;</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>这样就可以在不影响原始方法的情况下使用它的debounce拉，而且还不需要传delay值!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!delay) delay = <span class=\"number\">500</span>;  <span class=\"comment\">//如果delay不存在（null、undefined、0...） 就默认为500</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>需要注意的是，将 <code>debounce</code> 函数添加到 <code>Function.prototype</code><br>上并不是一个好的实践，因为它会改变所有函数的行为，可能导致其他依赖于 <code>Function.prototype</code> 的代码出现问题。</strong><br>此处仅仅是一个示范，如果没有严谨的文档和规约不建议在项目中使用</p>\n<h2 id=\"特殊的环境\"><a href=\"#特殊的环境\" class=\"headerlink\" title=\"特殊的环境\"></a>特殊的环境</h2><p>不久，小文就被优化了，他的代码流到了一位更年轻，技术更好的小刀身上，</p>\n<p>小刀是一位资深的java工程师，非常喜欢用类、对象表示一切</p>\n<p>不久，他就发现了这样一个问题：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">// eslint-disable-next-line no-extend-native</span></span><br><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">debounce</span> = debounce</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;John&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hi, &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">            user.sayHi.debounce(1000)()</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;&#125;&gt;Click me</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">)    </span><br></pre></td></tr></table></figure>\n\n<p>当使用user里的sayHi调用debounce时，会报错！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Uncaught TypeError: Cannot convert undefined or null to object</span><br></pre></td></tr></table></figure>\n\n<p>小文刀当即力断，立刻反应出来了问题在哪，然后他把debounce改建成了如下这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">delay</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;debounce&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!delay) delay = <span class=\"number\">500</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> func = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> env = <span class=\"variable language_\">this</span>;  <span class=\"comment\">//////新增 生命env为this</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            func.<span class=\"title function_\">apply</span>(env, args);  <span class=\"comment\">////新增 绑定func函数的词法环境（上下文）为env</span></span><br><span class=\"line\">        &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>不过可惜，他对javascript this机制的了解还是不是很深</p>\n<p>深谙javascript八股之道的朋友可能已经发现了，这段代码依旧会报错！</p>\n<p>以下是原因</p>\n<ol>\n<li>在调用user.sayHi时才会计算this的值</li>\n<li>调用过程为： (user.sayHi).debounce()()<br>,在user.sayHi时，this的值并没有成为”user“，而且sayHi也不是一个词法环境，所以在调用debounce，形成闭包并返回函数后，给env赋值的this时undefined</li>\n</ol>\n<p>所以 ….</p>\n<p>当然，前面说过，小刀技术水平还不错，于是他很自然地想到了，把需要成为this的环境传进去，当然，也需要兼容不需要this的函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">delay, env</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!delay) delay = <span class=\"number\">500</span>;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> func = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">      timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (env) &#123;</span><br><span class=\"line\">            func.<span class=\"title function_\">apply</span>(env, args);</span><br><span class=\"line\">         &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">func</span>(...args);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      &#125;, delay);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然而，沉溺在修改代码的忙碌中，小刀并没有意识到可以这么做….</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button onClick=&#123;user.<span class=\"property\">sayHi</span>.<span class=\"title function_\">bind</span>(user).<span class=\"title function_\">debounce</span>(<span class=\"number\">500</span>)&#125;&gt;</span><br><span class=\"line\"> <span class=\"title class_\">Click</span> me</span><br><span class=\"line\">&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>bind会返回一个绑定了user的函数</p>\n<p>apply则是返回绑定了user的函数执行的结构</p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>说实话，在写这篇文章之前，我只准确地判断了了原型及之前的结果，对于user.sayHi.debouce的运行结果，我理所当然认为也是可以那么运行的。</p>\n<p>除去对this的分析之外，还有一点react的小小的收获</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;John&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hi, &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;user.sayHi&#125;</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>在这段代码中调用onClick，是会报错的，因为此处的user.sayHi是一个”函数名“，React会把user.sayHi赋值给onClick，然后再执行onClick()</p>\n<p>但是，仔细一想，其实这种逻辑我早就应该知道，如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;John&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hi, &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> animal = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Dog&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> sayHi = user.<span class=\"property\">sayHi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()  <span class=\"comment\">///1. 报错，因为this丢失，为undefined</span></span><br><span class=\"line\">sayHi.<span class=\"title function_\">apply</span>(user)  <span class=\"comment\">//2. Hi, John,成功，使用apply绑定this</span></span><br><span class=\"line\">user.<span class=\"property\">sayHi</span>.<span class=\"title function_\">apply</span>(animal)  <span class=\"comment\">//3. Hi, Dog,成功，使用apply绑定this\t</span></span><br></pre></td></tr></table></figure>\n\n<p>onClick的赋值正是第一种，</p>\n<p>解决方法，外部包裹一个箭头函数或者function匿名函数即可，但是要注意的是这种方法对于要调用debounce的onClick却行不通，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button onClick=&#123;()=&gt;&#123;</span><br><span class=\"line\">\tuser.sayHi.debounce()()</span><br><span class=\"line\">&#125;&#125;&gt;Click me&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>因为赋值给onClick的是箭头函数，而不是debounce，所以，每次调用onClick的时候都会重新创建一个debounce</p>\n<p>顺便说一句，本来是想用ts写这篇文章的，但是在this赋值的时候会报一堆错，于是改用js<br>想起来前些日子看到了一篇文章 ”get out typescript“ 好像题目如下，抨击了ts丢失了js最显著的优点：”灵活性“<br>现在看来，确实如此</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p><img src=\"/source/_img/bg1.png\" alt=\"(可以写关于图片的描述)\"></p>\n<p>以下情景纯属虚构，如有雷同纯属巧合</p>\n<h2 id=\"初相见\"><a href=\"#初相见\" class=\"headerlink\" title=\"初相见\"></a>初相见</h2><p>这两天小刘被安排到一个项目（被老板pua中），遇到了这样一个问题：在用户登录的时候手抖点了两次，请求了两侧资源设置了两次token，但是真正完成的有效功能只有一次。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;login&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第一次\"><a href=\"#第一次\" class=\"headerlink\" title=\"第一次\"></a>第一次</h3><p>本着大国工匠的精神，老板亲自催促小刘优化这个问题</p>\n<p>于是小刘把它做成了下面这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">let</span> delay = <span class=\"number\">500</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> timeOut</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timeOut) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">clearTimeOut</span>(timeOut);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timeOut = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;login&quot;</span>)</span><br><span class=\"line\">    &#125;, delay)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>不错，很棒，每次点击如果和上一次相差不到0.5秒，那么取消上一次的登录请求，并做一些提示。</p>\n<p>但是，过了两天，小刘又遇到了同样的问题，用户的登出方法以及其他的每个按钮好像都需要类似的功能</p>\n<p>要知道，小刘是个连骑电车都嫌拿着钥匙麻烦的人</p>\n<p>他可不愿意每次都定义好几个delay</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">let</span> delay = <span class=\"number\">500</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> delay2 = <span class=\"number\">1000</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> delay3 = <span class=\"number\">1500</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> timeOut</span><br><span class=\"line\"><span class=\"keyword\">let</span> timeOut2</span><br><span class=\"line\"><span class=\"keyword\">let</span> timeOut3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timeOut) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//做一些提示</span></span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(timeOut);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timeOut = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;login&quot;</span>)</span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><p>突然，小刘灵光一闪，既然每份延迟都使用独立的delay和timeout，那我是不是可以用闭包记住上下文的特性，把这种类似的方法单独抽象出来？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">func, delay</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;debounce&quot;</span>)</span><br><span class=\"line\">            <span class=\"title function_\">func</span>(args);</span><br><span class=\"line\">        &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>现在，小刘的代码成了这样子</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;login&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">logout</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;logout&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">login = <span class=\"title function_\">debounce</span>(login, <span class=\"number\">500</span>)</span><br><span class=\"line\">logout = <span class=\"title function_\">debounce</span>(logout, <span class=\"number\">500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            () =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                login()</span></span><br><span class=\"line\"><span class=\"language-xml\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;&gt;Click me</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            () =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">                logout()</span></span><br><span class=\"line\"><span class=\"language-xml\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>这样，就不会有那么多delay1.delay2.delay3.delay4……delayn了</p>\n<p>小刘兴冲冲把他的代码提交了上去</p>\n<h2 id=\"再修改-——-原型\"><a href=\"#再修改-——-原型\" class=\"headerlink\" title=\"再修改 —— 原型\"></a>再修改 —— 原型</h2><p>另一位同事小文兴冲冲地把更新的代码拉了下来，看到了小刘的代码</p>\n<p>然后他浑身一颤，想到了项目发展到最后可能出现这样的情况</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   login = <span class=\"title function_\">debounce</span>(login, <span class=\"number\">500</span>)</span><br><span class=\"line\">logout = <span class=\"title function_\">debounce</span>(logout, <span class=\"number\">500</span>)</span><br><span class=\"line\">fn = <span class=\"title function_\">debounce</span>(fn, <span class=\"number\">500</span>)</span><br><span class=\"line\">fn1 = <span class=\"title function_\">debounce</span>(fn1, <span class=\"number\">500</span>)</span><br><span class=\"line\">fn2 = <span class=\"title function_\">debounce</span>(fn2, <span class=\"number\">500</span>)</span><br><span class=\"line\">fn3 = <span class=\"title function_\">debounce</span>(fn3, <span class=\"number\">500</span>)</span><br></pre></td></tr></table></figure>\n\n<p>每个方法执行防抖都要重新赋一个值，每个赋值都需要传入一个可能完全一样的delay</p>\n<p>不仅如此，fn1被debounce处理之前的函数也丢失了！</p>\n<p>这意味着我们如果想要使用未debounce的函数，就必须要重新定义一个，而且名字还不能一样。</p>\n<p>事实上，小文不仅仅是个喝水都懒得张嘴的懒货，而且也是一个无可救药的 ”起名困难户“，</p>\n<p>他绝对不能让这种事情发生</p>\n<p>所以他想到，</p>\n<p>能不能让每个方法都具有一个debounce的方法属性，调用debounce则执行</p>\n<p>of course, it can!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">delay</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!delay) delay = <span class=\"number\">500</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> func = <span class=\"variable language_\">this</span>;\t<span class=\"comment\">//这里的this是调用debounce的对象，此处是方法对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">func</span>(args);</span><br><span class=\"line\">        &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>小文首先把debounce工具类函数改成了上面这个样子</p>\n<p>然后又添加了这样一句话</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">debounce</span> = debounce</span><br></pre></td></tr></table></figure>\n\n<p>于是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">debounce</span> = debounce</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onClick</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;clickme&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;onClick.debounce()&#125;</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>这样就可以在不影响原始方法的情况下使用它的debounce拉，而且还不需要传delay值!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!delay) delay = <span class=\"number\">500</span>;  <span class=\"comment\">//如果delay不存在（null、undefined、0...） 就默认为500</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>需要注意的是，将 <code>debounce</code> 函数添加到 <code>Function.prototype</code><br>上并不是一个好的实践，因为它会改变所有函数的行为，可能导致其他依赖于 <code>Function.prototype</code> 的代码出现问题。</strong><br>此处仅仅是一个示范，如果没有严谨的文档和规约不建议在项目中使用</p>\n<h2 id=\"特殊的环境\"><a href=\"#特殊的环境\" class=\"headerlink\" title=\"特殊的环境\"></a>特殊的环境</h2><p>不久，小文就被优化了，他的代码流到了一位更年轻，技术更好的小刀身上，</p>\n<p>小刀是一位资深的java工程师，非常喜欢用类、对象表示一切</p>\n<p>不久，他就发现了这样一个问题：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">// eslint-disable-next-line no-extend-native</span></span><br><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">debounce</span> = debounce</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;John&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hi, &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">            user.sayHi.debounce(1000)()</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;&#125;&gt;Click me</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">)    </span><br></pre></td></tr></table></figure>\n\n<p>当使用user里的sayHi调用debounce时，会报错！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Uncaught TypeError: Cannot convert undefined or null to object</span><br></pre></td></tr></table></figure>\n\n<p>小文刀当即力断，立刻反应出来了问题在哪，然后他把debounce改建成了如下这样</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">delay</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;debounce&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!delay) delay = <span class=\"number\">500</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> func = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> env = <span class=\"variable language_\">this</span>;  <span class=\"comment\">//////新增 生命env为this</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">        timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            func.<span class=\"title function_\">apply</span>(env, args);  <span class=\"comment\">////新增 绑定func函数的词法环境（上下文）为env</span></span><br><span class=\"line\">        &#125;, delay);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>不过可惜，他对javascript this机制的了解还是不是很深</p>\n<p>深谙javascript八股之道的朋友可能已经发现了，这段代码依旧会报错！</p>\n<p>以下是原因</p>\n<ol>\n<li>在调用user.sayHi时才会计算this的值</li>\n<li>调用过程为： (user.sayHi).debounce()()<br>,在user.sayHi时，this的值并没有成为”user“，而且sayHi也不是一个词法环境，所以在调用debounce，形成闭包并返回函数后，给env赋值的this时undefined</li>\n</ol>\n<p>所以 ….</p>\n<p>当然，前面说过，小刀技术水平还不错，于是他很自然地想到了，把需要成为this的环境传进去，当然，也需要兼容不需要this的函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">delay, env</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!delay) delay = <span class=\"number\">500</span>;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> timeout;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> func = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (timeout) <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">      timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (env) &#123;</span><br><span class=\"line\">            func.<span class=\"title function_\">apply</span>(env, args);</span><br><span class=\"line\">         &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">func</span>(...args);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      &#125;, delay);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然而，沉溺在修改代码的忙碌中，小刀并没有意识到可以这么做….</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button onClick=&#123;user.<span class=\"property\">sayHi</span>.<span class=\"title function_\">bind</span>(user).<span class=\"title function_\">debounce</span>(<span class=\"number\">500</span>)&#125;&gt;</span><br><span class=\"line\"> <span class=\"title class_\">Click</span> me</span><br><span class=\"line\">&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>bind会返回一个绑定了user的函数</p>\n<p>apply则是返回绑定了user的函数执行的结构</p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>说实话，在写这篇文章之前，我只准确地判断了了原型及之前的结果，对于user.sayHi.debouce的运行结果，我理所当然认为也是可以那么运行的。</p>\n<p>除去对this的分析之外，还有一点react的小小的收获</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;John&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hi, &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;user.sayHi&#125;</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>在这段代码中调用onClick，是会报错的，因为此处的user.sayHi是一个”函数名“，React会把user.sayHi赋值给onClick，然后再执行onClick()</p>\n<p>但是，仔细一想，其实这种逻辑我早就应该知道，如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;John&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Hi, &quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> animal = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;Dog&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> sayHi = user.<span class=\"property\">sayHi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">sayHi</span>()  <span class=\"comment\">///1. 报错，因为this丢失，为undefined</span></span><br><span class=\"line\">sayHi.<span class=\"title function_\">apply</span>(user)  <span class=\"comment\">//2. Hi, John,成功，使用apply绑定this</span></span><br><span class=\"line\">user.<span class=\"property\">sayHi</span>.<span class=\"title function_\">apply</span>(animal)  <span class=\"comment\">//3. Hi, Dog,成功，使用apply绑定this\t</span></span><br></pre></td></tr></table></figure>\n\n<p>onClick的赋值正是第一种，</p>\n<p>解决方法，外部包裹一个箭头函数或者function匿名函数即可，但是要注意的是这种方法对于要调用debounce的onClick却行不通，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button onClick=&#123;()=&gt;&#123;</span><br><span class=\"line\">\tuser.sayHi.debounce()()</span><br><span class=\"line\">&#125;&#125;&gt;Click me&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>因为赋值给onClick的是箭头函数，而不是debounce，所以，每次调用onClick的时候都会重新创建一个debounce</p>\n<p>顺便说一句，本来是想用ts写这篇文章的，但是在this赋值的时候会报一堆错，于是改用js<br>想起来前些日子看到了一篇文章 ”get out typescript“ 好像题目如下，抨击了ts丢失了js最显著的优点：”灵活性“<br>现在看来，确实如此</p>\n"},{"title":"记录一次开源经历--Ospp","subtitle":"一个企业级Ai提供者Casibase","date":"2024-06-15T02:47:29.000Z","updated":"2024-06-14T23:35:48.506Z","description":null,"top_img":null,"_content":"\n之前一直听说开源项目很加分，恰逢最近无事，遂即参与了一个Ospp开源活动的项目\n需要说明的是，中选公布日期在7月1日，这篇文章作于6.15，\n所以截至目前为止，我还没有中选，但是我觉得这次经历还是值得记录的\n\n## 项目介绍\n\n项目名叫Casibase，一个企业级Ai提供者:\n\n项目链接: [Github链接](https://github.com/casibase/casibase)\n技术栈:React + Antd 前端 Go后端\n\n## 项目经历\n\n### 初相见\n\n四月半左右我看到了OSPP这个开源活动，很感兴趣\n而且由于学校安排，小学期有一个实训，只有一个月的实习时间，必然是面试不了，所以我就报名了这个活动\n\n看了大概半个多月的项目列表、每个项目的项目介绍以及难易程度，最终选择了Casibase这个项目\n其一是因为，技术栈正好对口，React+Go后端，正好符合我的技术栈\n其二是因为，我觉得相较于单纯的javascript和go项目，这个项目的技术栈更复杂，申请的人数或许也会相对较少 ，\n阻力可能没那么大。（然而事实证明，并不如我所想\n并且热门的项目大多是java、linux、ai大模型等等\n\n所以大概在五月初我向导师发送了我的简历,然后导师联系我写了一些pr\n\n### 主要工作以及收获\n\n截至6.15也就是今天，我一共提交了7个pr,合并了6个pr\n![pr](prs.png)\n![prdetails](prdetails.png)\n\n大致工作有\n\n1. 实现了多模态，即输入消息，实现图片、文本多种回复\n2. 仿照tinyColor这个库实现了主题色的自动生成\n3. 实现了输入框复制图片\n4. 修复了一些bug\n\n虽然和这个导师的交流确实很有压迫力，不过也确实学到了很多东西\n比如github 的 ci/cd流程\n比如如何写一个好的干净的pr(这一部分被骂了好几次)\n还有一些git命令(--amend)\n\n另：\n这也是我第一次看到非函数式react组件，使用的是class\n之前一直看到生命周期componentDidMount等等，在函数式组件中完全没有，原来是在这里\n也是我第一次看见把前端项目放到后端项目下的文件夹里\n算是长知识了(\n\n### OVER\n\n总的来说，这次经历还算不错\n不过导师跟我说，还有另外一个比较看好的候选人\n再加上六月末有许多考试，这半个月没法再提交pr\n所以感觉中选的可能性不大(可恶)\n","source":"_posts/6ospp.md","raw":"---\ntitle: 记录一次开源经历--Ospp\nsubtitle: 一个企业级Ai提供者Casibase\ndate: 2024-6-15 10:47:29\nupdated:\ndescription:\ntop_img:\ntags:\n  - 开源\n  - ospp\n---\n\n之前一直听说开源项目很加分，恰逢最近无事，遂即参与了一个Ospp开源活动的项目\n需要说明的是，中选公布日期在7月1日，这篇文章作于6.15，\n所以截至目前为止，我还没有中选，但是我觉得这次经历还是值得记录的\n\n## 项目介绍\n\n项目名叫Casibase，一个企业级Ai提供者:\n\n项目链接: [Github链接](https://github.com/casibase/casibase)\n技术栈:React + Antd 前端 Go后端\n\n## 项目经历\n\n### 初相见\n\n四月半左右我看到了OSPP这个开源活动，很感兴趣\n而且由于学校安排，小学期有一个实训，只有一个月的实习时间，必然是面试不了，所以我就报名了这个活动\n\n看了大概半个多月的项目列表、每个项目的项目介绍以及难易程度，最终选择了Casibase这个项目\n其一是因为，技术栈正好对口，React+Go后端，正好符合我的技术栈\n其二是因为，我觉得相较于单纯的javascript和go项目，这个项目的技术栈更复杂，申请的人数或许也会相对较少 ，\n阻力可能没那么大。（然而事实证明，并不如我所想\n并且热门的项目大多是java、linux、ai大模型等等\n\n所以大概在五月初我向导师发送了我的简历,然后导师联系我写了一些pr\n\n### 主要工作以及收获\n\n截至6.15也就是今天，我一共提交了7个pr,合并了6个pr\n![pr](prs.png)\n![prdetails](prdetails.png)\n\n大致工作有\n\n1. 实现了多模态，即输入消息，实现图片、文本多种回复\n2. 仿照tinyColor这个库实现了主题色的自动生成\n3. 实现了输入框复制图片\n4. 修复了一些bug\n\n虽然和这个导师的交流确实很有压迫力，不过也确实学到了很多东西\n比如github 的 ci/cd流程\n比如如何写一个好的干净的pr(这一部分被骂了好几次)\n还有一些git命令(--amend)\n\n另：\n这也是我第一次看到非函数式react组件，使用的是class\n之前一直看到生命周期componentDidMount等等，在函数式组件中完全没有，原来是在这里\n也是我第一次看见把前端项目放到后端项目下的文件夹里\n算是长知识了(\n\n### OVER\n\n总的来说，这次经历还算不错\n不过导师跟我说，还有另外一个比较看好的候选人\n再加上六月末有许多考试，这半个月没法再提交pr\n所以感觉中选的可能性不大(可恶)\n","slug":"6ospp","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cly84y868000agg6k7xjo1nqt","content":"<p>之前一直听说开源项目很加分，恰逢最近无事，遂即参与了一个Ospp开源活动的项目<br>需要说明的是，中选公布日期在7月1日，这篇文章作于6.15，<br>所以截至目前为止，我还没有中选，但是我觉得这次经历还是值得记录的</p>\n<h2 id=\"项目介绍\"><a href=\"#项目介绍\" class=\"headerlink\" title=\"项目介绍\"></a>项目介绍</h2><p>项目名叫Casibase，一个企业级Ai提供者:</p>\n<p>项目链接: <a href=\"https://github.com/casibase/casibase\">Github链接</a><br>技术栈:React + Antd 前端 Go后端</p>\n<h2 id=\"项目经历\"><a href=\"#项目经历\" class=\"headerlink\" title=\"项目经历\"></a>项目经历</h2><h3 id=\"初相见\"><a href=\"#初相见\" class=\"headerlink\" title=\"初相见\"></a>初相见</h3><p>四月半左右我看到了OSPP这个开源活动，很感兴趣<br>而且由于学校安排，小学期有一个实训，只有一个月的实习时间，必然是面试不了，所以我就报名了这个活动</p>\n<p>看了大概半个多月的项目列表、每个项目的项目介绍以及难易程度，最终选择了Casibase这个项目<br>其一是因为，技术栈正好对口，React+Go后端，正好符合我的技术栈<br>其二是因为，我觉得相较于单纯的javascript和go项目，这个项目的技术栈更复杂，申请的人数或许也会相对较少 ，<br>阻力可能没那么大。（然而事实证明，并不如我所想<br>并且热门的项目大多是java、linux、ai大模型等等</p>\n<p>所以大概在五月初我向导师发送了我的简历,然后导师联系我写了一些pr</p>\n<h3 id=\"主要工作以及收获\"><a href=\"#主要工作以及收获\" class=\"headerlink\" title=\"主要工作以及收获\"></a>主要工作以及收获</h3><p>截至6.15也就是今天，我一共提交了7个pr,合并了6个pr<br><img src=\"/2024/06/15/6ospp/prs.png\" alt=\"pr\"><br><img src=\"/2024/06/15/6ospp/prdetails.png\" alt=\"prdetails\"></p>\n<p>大致工作有</p>\n<ol>\n<li>实现了多模态，即输入消息，实现图片、文本多种回复</li>\n<li>仿照tinyColor这个库实现了主题色的自动生成</li>\n<li>实现了输入框复制图片</li>\n<li>修复了一些bug</li>\n</ol>\n<p>虽然和这个导师的交流确实很有压迫力，不过也确实学到了很多东西<br>比如github 的 ci&#x2F;cd流程<br>比如如何写一个好的干净的pr(这一部分被骂了好几次)<br>还有一些git命令(–amend)</p>\n<p>另：<br>这也是我第一次看到非函数式react组件，使用的是class<br>之前一直看到生命周期componentDidMount等等，在函数式组件中完全没有，原来是在这里<br>也是我第一次看见把前端项目放到后端项目下的文件夹里<br>算是长知识了(</p>\n<h3 id=\"OVER\"><a href=\"#OVER\" class=\"headerlink\" title=\"OVER\"></a>OVER</h3><p>总的来说，这次经历还算不错<br>不过导师跟我说，还有另外一个比较看好的候选人<br>再加上六月末有许多考试，这半个月没法再提交pr<br>所以感觉中选的可能性不大(可恶)</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>之前一直听说开源项目很加分，恰逢最近无事，遂即参与了一个Ospp开源活动的项目<br>需要说明的是，中选公布日期在7月1日，这篇文章作于6.15，<br>所以截至目前为止，我还没有中选，但是我觉得这次经历还是值得记录的</p>\n<h2 id=\"项目介绍\"><a href=\"#项目介绍\" class=\"headerlink\" title=\"项目介绍\"></a>项目介绍</h2><p>项目名叫Casibase，一个企业级Ai提供者:</p>\n<p>项目链接: <a href=\"https://github.com/casibase/casibase\">Github链接</a><br>技术栈:React + Antd 前端 Go后端</p>\n<h2 id=\"项目经历\"><a href=\"#项目经历\" class=\"headerlink\" title=\"项目经历\"></a>项目经历</h2><h3 id=\"初相见\"><a href=\"#初相见\" class=\"headerlink\" title=\"初相见\"></a>初相见</h3><p>四月半左右我看到了OSPP这个开源活动，很感兴趣<br>而且由于学校安排，小学期有一个实训，只有一个月的实习时间，必然是面试不了，所以我就报名了这个活动</p>\n<p>看了大概半个多月的项目列表、每个项目的项目介绍以及难易程度，最终选择了Casibase这个项目<br>其一是因为，技术栈正好对口，React+Go后端，正好符合我的技术栈<br>其二是因为，我觉得相较于单纯的javascript和go项目，这个项目的技术栈更复杂，申请的人数或许也会相对较少 ，<br>阻力可能没那么大。（然而事实证明，并不如我所想<br>并且热门的项目大多是java、linux、ai大模型等等</p>\n<p>所以大概在五月初我向导师发送了我的简历,然后导师联系我写了一些pr</p>\n<h3 id=\"主要工作以及收获\"><a href=\"#主要工作以及收获\" class=\"headerlink\" title=\"主要工作以及收获\"></a>主要工作以及收获</h3><p>截至6.15也就是今天，我一共提交了7个pr,合并了6个pr<br><img src=\"/2024/06/15/6ospp/prs.png\" alt=\"pr\"><br><img src=\"/2024/06/15/6ospp/prdetails.png\" alt=\"prdetails\"></p>\n<p>大致工作有</p>\n<ol>\n<li>实现了多模态，即输入消息，实现图片、文本多种回复</li>\n<li>仿照tinyColor这个库实现了主题色的自动生成</li>\n<li>实现了输入框复制图片</li>\n<li>修复了一些bug</li>\n</ol>\n<p>虽然和这个导师的交流确实很有压迫力，不过也确实学到了很多东西<br>比如github 的 ci&#x2F;cd流程<br>比如如何写一个好的干净的pr(这一部分被骂了好几次)<br>还有一些git命令(–amend)</p>\n<p>另：<br>这也是我第一次看到非函数式react组件，使用的是class<br>之前一直看到生命周期componentDidMount等等，在函数式组件中完全没有，原来是在这里<br>也是我第一次看见把前端项目放到后端项目下的文件夹里<br>算是长知识了(</p>\n<h3 id=\"OVER\"><a href=\"#OVER\" class=\"headerlink\" title=\"OVER\"></a>OVER</h3><p>总的来说，这次经历还算不错<br>不过导师跟我说，还有另外一个比较看好的候选人<br>再加上六月末有许多考试，这半个月没法再提交pr<br>所以感觉中选的可能性不大(可恶)</p>\n"},{"layout":"epost","title":"龙芯开发板","subtitle":"本文记录了作者第一次接触开发板的一些经历，仅作为记录","date":"2024-06-14T23:19:29.000Z","_content":"\n正在参与一个实验室的项目\n我是做前端的，但是后端学长毕业跑路了\n故而目前软件部分都是我在做\n\n有一部分的工作是,需要写好程序放到这个板子里\n\n也是第一次接触到了开发板这种东西,姑且记录一下\n之前玩过同学的树莓派，感觉很类似\n(确实很类似)\n\n总体连接和系统样子：\n![龙芯开发板](total.jpg)\n\n光是连接这个板子就花了我好长时间，\n尤其是柔性电路板，我还以为他是个装饰品\n\n而且初始的板子显示比例1080×600无法适配到我的显示器\n我还以为是显示器和板子不兼容的问题\n\n![板子](ban.jpg)\n\n登录界面\n![登录界面](login.jpg)\n\n在龙芯vscode上写了一个hello world\n![hello world](helloworld.jpg)\n","source":"_posts/7long.md","raw":"---\nlayout: epost\ntitle: 龙芯开发板\nsubtitle: 本文记录了作者第一次接触开发板的一些经历，仅作为记录\ndate: 2024-06-15 07:19:29\ntags:\n  - development\n  - 记录 \n---\n\n正在参与一个实验室的项目\n我是做前端的，但是后端学长毕业跑路了\n故而目前软件部分都是我在做\n\n有一部分的工作是,需要写好程序放到这个板子里\n\n也是第一次接触到了开发板这种东西,姑且记录一下\n之前玩过同学的树莓派，感觉很类似\n(确实很类似)\n\n总体连接和系统样子：\n![龙芯开发板](total.jpg)\n\n光是连接这个板子就花了我好长时间，\n尤其是柔性电路板，我还以为他是个装饰品\n\n而且初始的板子显示比例1080×600无法适配到我的显示器\n我还以为是显示器和板子不兼容的问题\n\n![板子](ban.jpg)\n\n登录界面\n![登录界面](login.jpg)\n\n在龙芯vscode上写了一个hello world\n![hello world](helloworld.jpg)\n","slug":"7long","published":1,"updated":"2024-07-05T03:00:28.948Z","comments":1,"photos":[],"link":"","_id":"cly84y86a000bgg6k8amd8d25","content":"<p>正在参与一个实验室的项目<br>我是做前端的，但是后端学长毕业跑路了<br>故而目前软件部分都是我在做</p>\n<p>有一部分的工作是,需要写好程序放到这个板子里</p>\n<p>也是第一次接触到了开发板这种东西,姑且记录一下<br>之前玩过同学的树莓派，感觉很类似<br>(确实很类似)</p>\n<p>总体连接和系统样子：<br><img src=\"/2024/06/15/7long/total.jpg\" alt=\"龙芯开发板\"></p>\n<p>光是连接这个板子就花了我好长时间，<br>尤其是柔性电路板，我还以为他是个装饰品</p>\n<p>而且初始的板子显示比例1080×600无法适配到我的显示器<br>我还以为是显示器和板子不兼容的问题</p>\n<p><img src=\"/2024/06/15/7long/ban.jpg\" alt=\"板子\"></p>\n<p>登录界面<br><img src=\"/2024/06/15/7long/login.jpg\" alt=\"登录界面\"></p>\n<p>在龙芯vscode上写了一个hello world<br><img src=\"/2024/06/15/7long/helloworld.jpg\" alt=\"hello world\"></p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>正在参与一个实验室的项目<br>我是做前端的，但是后端学长毕业跑路了<br>故而目前软件部分都是我在做</p>\n<p>有一部分的工作是,需要写好程序放到这个板子里</p>\n<p>也是第一次接触到了开发板这种东西,姑且记录一下<br>之前玩过同学的树莓派，感觉很类似<br>(确实很类似)</p>\n<p>总体连接和系统样子：<br><img src=\"/2024/06/15/7long/total.jpg\" alt=\"龙芯开发板\"></p>\n<p>光是连接这个板子就花了我好长时间，<br>尤其是柔性电路板，我还以为他是个装饰品</p>\n<p>而且初始的板子显示比例1080×600无法适配到我的显示器<br>我还以为是显示器和板子不兼容的问题</p>\n<p><img src=\"/2024/06/15/7long/ban.jpg\" alt=\"板子\"></p>\n<p>登录界面<br><img src=\"/2024/06/15/7long/login.jpg\" alt=\"登录界面\"></p>\n<p>在龙芯vscode上写了一个hello world<br><img src=\"/2024/06/15/7long/helloworld.jpg\" alt=\"hello world\"></p>\n"},{"title":"权限认证","description":"本文通过引用掘金上一篇较为不明的文章，对token、cookie、session、jwt、oauth2进行了简单的梳理与辨析","date":"2024-07-03T01:38:00.750Z","updated":"2024-07-05T03:26:56.829Z","top_img":null,"_content":"这两天闲逛掘金，看到了一个19年大火的文章，讲的是token、cookie、session、jwt，和我之前认为的有一些不同\n去伪留臻，记而存之\n\n附上链接：https://juejin.cn/post/6844904034181070861?searchId=202407022020106665740BE9EADAA2CD66\n\n主要概念：\n\n- session\n- cookie\n- token\n- jwt json web token\n- oauth2\n\n***session和token是一种 ”信息组成“ 的策略***\n\n***jwt是一种高级协议，解决了token中的一些问题***\n\n***cookie是一种信息载体，如同localstorage和sessionstorage***\n\n***Oauth2，第三方登录协议***\n\n**不同概念之间可比较性不高，这也是juejin那篇文章误导性很强的地方之一**\n\n## 存储方式：cookie、localstorage、sessionStorage\n\n### cookie\n\ncookie存储的信息大多被用于：\n\n- 会话状态管理\n    - 用户登陆状态等\n- 个性化设置\n    - 自定义设置、主题和其他设置\n- 浏览器行为跟踪\n    - 分析用户行为\n\n浏览器第一次请求服务端数据，服务端设置cookie\n\n不过cookie存储空间较小，大约4k\n\n### localStorage、sessionStorage\n\n两者的区别是，sessionStorage只在一次会话中有效\n\n## 验证信息策略\n\n### Session\n\n浏览器第一次向服务端请求，服务端生成一个seesionid，并储存到内存或者redis或者数据库中，之后，并且把sessionid返回给客户端，此时，可以选择存到cookie中并且不设置过期时间（关闭session清除），也可以放到前端内存（即声明一个全局变量）中（关闭应用清除）。每次请求服务端数据时，服务端检查cookie是否存在sessionid并且进行验证，如果缓存中有sessionid，那么则通过，没有则重新登录\n\nsessionId生成策略：可以是随机数、也可以是客户端传来的数据\n\n特点：存放在**服务端**，服务端每次收到请求都会查询是否存在sessionid，会给服务端查询造成压力\n\n### Token\n\n客户端进行登录时，服务端生成一个token（字符串，可以有意义也可以无意义）返回给客户端并由客户端保存，之后每次请求，需要由客户端带上这个token，服务端进行验证\n\n以下是几种token中常用的策略（拓展、变式）\n\n- 双token，（多用于实现无感登录）\n    - 即有两种token，access token 用于请求数据，refresh token 用于刷新access token\n    - access token 有效期较短，refresh token 有效时间较长\n    - 客户端登录时，服务端生成两个token，access token随请求返回到客户端，用于每次请求时进行验证；refresh token 放到 http\n      only cookie中，以使客户端无法访问，增加安全性，用于access token过期时进行刷新\n- JWT 一种 token 的 格式以及包含的信息 的**规范*\n    - 由三部分组成，头部、中部、尾部, 用.分割，如：xxxxx.yyyyy.zzzzz\n    - 头部：加密方式等,使用base64编码\n    - 中部：用户的信息，如：用户id等，使用base64编码\n    - 尾部：头部和中部使用头部声明的加密方式进行加密\n    - 客户端进行储存，请求时，只需带上jwt，然后客户端进行解码验证，验证无误则有效，节省存储sessionid的服务器压力，用解码时间换取空间\n### OAuth2\n\n简单的来说，OAuth2也就是第三方认证，比如你想用微信的号登录小红书这个过程，就是OAuth2的过程\n\n","source":"_posts/8Auth.md","raw":"---\ntitle: 权限认证\ndescription: 本文通过引用掘金上一篇较为不明的文章，对token、cookie、session、jwt、oauth2进行了简单的梳理与辨析\ndate: ':year-:month-:day :hour:00:00'\nupdated:\ntop_img:\ntags:\n  - 本手\n---\n这两天闲逛掘金，看到了一个19年大火的文章，讲的是token、cookie、session、jwt，和我之前认为的有一些不同\n去伪留臻，记而存之\n\n附上链接：https://juejin.cn/post/6844904034181070861?searchId=202407022020106665740BE9EADAA2CD66\n\n主要概念：\n\n- session\n- cookie\n- token\n- jwt json web token\n- oauth2\n\n***session和token是一种 ”信息组成“ 的策略***\n\n***jwt是一种高级协议，解决了token中的一些问题***\n\n***cookie是一种信息载体，如同localstorage和sessionstorage***\n\n***Oauth2，第三方登录协议***\n\n**不同概念之间可比较性不高，这也是juejin那篇文章误导性很强的地方之一**\n\n## 存储方式：cookie、localstorage、sessionStorage\n\n### cookie\n\ncookie存储的信息大多被用于：\n\n- 会话状态管理\n    - 用户登陆状态等\n- 个性化设置\n    - 自定义设置、主题和其他设置\n- 浏览器行为跟踪\n    - 分析用户行为\n\n浏览器第一次请求服务端数据，服务端设置cookie\n\n不过cookie存储空间较小，大约4k\n\n### localStorage、sessionStorage\n\n两者的区别是，sessionStorage只在一次会话中有效\n\n## 验证信息策略\n\n### Session\n\n浏览器第一次向服务端请求，服务端生成一个seesionid，并储存到内存或者redis或者数据库中，之后，并且把sessionid返回给客户端，此时，可以选择存到cookie中并且不设置过期时间（关闭session清除），也可以放到前端内存（即声明一个全局变量）中（关闭应用清除）。每次请求服务端数据时，服务端检查cookie是否存在sessionid并且进行验证，如果缓存中有sessionid，那么则通过，没有则重新登录\n\nsessionId生成策略：可以是随机数、也可以是客户端传来的数据\n\n特点：存放在**服务端**，服务端每次收到请求都会查询是否存在sessionid，会给服务端查询造成压力\n\n### Token\n\n客户端进行登录时，服务端生成一个token（字符串，可以有意义也可以无意义）返回给客户端并由客户端保存，之后每次请求，需要由客户端带上这个token，服务端进行验证\n\n以下是几种token中常用的策略（拓展、变式）\n\n- 双token，（多用于实现无感登录）\n    - 即有两种token，access token 用于请求数据，refresh token 用于刷新access token\n    - access token 有效期较短，refresh token 有效时间较长\n    - 客户端登录时，服务端生成两个token，access token随请求返回到客户端，用于每次请求时进行验证；refresh token 放到 http\n      only cookie中，以使客户端无法访问，增加安全性，用于access token过期时进行刷新\n- JWT 一种 token 的 格式以及包含的信息 的**规范*\n    - 由三部分组成，头部、中部、尾部, 用.分割，如：xxxxx.yyyyy.zzzzz\n    - 头部：加密方式等,使用base64编码\n    - 中部：用户的信息，如：用户id等，使用base64编码\n    - 尾部：头部和中部使用头部声明的加密方式进行加密\n    - 客户端进行储存，请求时，只需带上jwt，然后客户端进行解码验证，验证无误则有效，节省存储sessionid的服务器压力，用解码时间换取空间\n### OAuth2\n\n简单的来说，OAuth2也就是第三方认证，比如你想用微信的号登录小红书这个过程，就是OAuth2的过程\n\n","slug":"8Auth","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cly84y86g000dgg6kaf0lhlq8","content":"<p>这两天闲逛掘金，看到了一个19年大火的文章，讲的是token、cookie、session、jwt，和我之前认为的有一些不同<br>去伪留臻，记而存之</p>\n<p>附上链接：<a href=\"https://juejin.cn/post/6844904034181070861?searchId=202407022020106665740BE9EADAA2CD66\">https://juejin.cn/post/6844904034181070861?searchId=202407022020106665740BE9EADAA2CD66</a></p>\n<p>主要概念：</p>\n<ul>\n<li>session</li>\n<li>cookie</li>\n<li>token</li>\n<li>jwt json web token</li>\n<li>oauth2</li>\n</ul>\n<p><em><strong>session和token是一种 ”信息组成“ 的策略</strong></em></p>\n<p><em><strong>jwt是一种高级协议，解决了token中的一些问题</strong></em></p>\n<p><em><strong>cookie是一种信息载体，如同localstorage和sessionstorage</strong></em></p>\n<p><em><strong>Oauth2，第三方登录协议</strong></em></p>\n<p><strong>不同概念之间可比较性不高，这也是juejin那篇文章误导性很强的地方之一</strong></p>\n<h2 id=\"存储方式：cookie、localstorage、sessionStorage\"><a href=\"#存储方式：cookie、localstorage、sessionStorage\" class=\"headerlink\" title=\"存储方式：cookie、localstorage、sessionStorage\"></a>存储方式：cookie、localstorage、sessionStorage</h2><h3 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h3><p>cookie存储的信息大多被用于：</p>\n<ul>\n<li>会话状态管理<ul>\n<li>用户登陆状态等</li>\n</ul>\n</li>\n<li>个性化设置<ul>\n<li>自定义设置、主题和其他设置</li>\n</ul>\n</li>\n<li>浏览器行为跟踪<ul>\n<li>分析用户行为</li>\n</ul>\n</li>\n</ul>\n<p>浏览器第一次请求服务端数据，服务端设置cookie</p>\n<p>不过cookie存储空间较小，大约4k</p>\n<h3 id=\"localStorage、sessionStorage\"><a href=\"#localStorage、sessionStorage\" class=\"headerlink\" title=\"localStorage、sessionStorage\"></a>localStorage、sessionStorage</h3><p>两者的区别是，sessionStorage只在一次会话中有效</p>\n<h2 id=\"验证信息策略\"><a href=\"#验证信息策略\" class=\"headerlink\" title=\"验证信息策略\"></a>验证信息策略</h2><h3 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h3><p>浏览器第一次向服务端请求，服务端生成一个seesionid，并储存到内存或者redis或者数据库中，之后，并且把sessionid返回给客户端，此时，可以选择存到cookie中并且不设置过期时间（关闭session清除），也可以放到前端内存（即声明一个全局变量）中（关闭应用清除）。每次请求服务端数据时，服务端检查cookie是否存在sessionid并且进行验证，如果缓存中有sessionid，那么则通过，没有则重新登录</p>\n<p>sessionId生成策略：可以是随机数、也可以是客户端传来的数据</p>\n<p>特点：存放在<strong>服务端</strong>，服务端每次收到请求都会查询是否存在sessionid，会给服务端查询造成压力</p>\n<h3 id=\"Token\"><a href=\"#Token\" class=\"headerlink\" title=\"Token\"></a>Token</h3><p>客户端进行登录时，服务端生成一个token（字符串，可以有意义也可以无意义）返回给客户端并由客户端保存，之后每次请求，需要由客户端带上这个token，服务端进行验证</p>\n<p>以下是几种token中常用的策略（拓展、变式）</p>\n<ul>\n<li>双token，（多用于实现无感登录）<ul>\n<li>即有两种token，access token 用于请求数据，refresh token 用于刷新access token</li>\n<li>access token 有效期较短，refresh token 有效时间较长</li>\n<li>客户端登录时，服务端生成两个token，access token随请求返回到客户端，用于每次请求时进行验证；refresh token 放到 http<br>only cookie中，以使客户端无法访问，增加安全性，用于access token过期时进行刷新</li>\n</ul>\n</li>\n<li>JWT 一种 token 的 格式以及包含的信息 的*<em>规范</em><ul>\n<li>由三部分组成，头部、中部、尾部, 用.分割，如：xxxxx.yyyyy.zzzzz</li>\n<li>头部：加密方式等,使用base64编码</li>\n<li>中部：用户的信息，如：用户id等，使用base64编码</li>\n<li>尾部：头部和中部使用头部声明的加密方式进行加密</li>\n<li>客户端进行储存，请求时，只需带上jwt，然后客户端进行解码验证，验证无误则有效，节省存储sessionid的服务器压力，用解码时间换取空间</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"OAuth2\"><a href=\"#OAuth2\" class=\"headerlink\" title=\"OAuth2\"></a>OAuth2</h3><p>简单的来说，OAuth2也就是第三方认证，比如你想用微信的号登录小红书这个过程，就是OAuth2的过程</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>这两天闲逛掘金，看到了一个19年大火的文章，讲的是token、cookie、session、jwt，和我之前认为的有一些不同<br>去伪留臻，记而存之</p>\n<p>附上链接：<a href=\"https://juejin.cn/post/6844904034181070861?searchId=202407022020106665740BE9EADAA2CD66\">https://juejin.cn/post/6844904034181070861?searchId=202407022020106665740BE9EADAA2CD66</a></p>\n<p>主要概念：</p>\n<ul>\n<li>session</li>\n<li>cookie</li>\n<li>token</li>\n<li>jwt json web token</li>\n<li>oauth2</li>\n</ul>\n<p><em><strong>session和token是一种 ”信息组成“ 的策略</strong></em></p>\n<p><em><strong>jwt是一种高级协议，解决了token中的一些问题</strong></em></p>\n<p><em><strong>cookie是一种信息载体，如同localstorage和sessionstorage</strong></em></p>\n<p><em><strong>Oauth2，第三方登录协议</strong></em></p>\n<p><strong>不同概念之间可比较性不高，这也是juejin那篇文章误导性很强的地方之一</strong></p>\n<h2 id=\"存储方式：cookie、localstorage、sessionStorage\"><a href=\"#存储方式：cookie、localstorage、sessionStorage\" class=\"headerlink\" title=\"存储方式：cookie、localstorage、sessionStorage\"></a>存储方式：cookie、localstorage、sessionStorage</h2><h3 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h3><p>cookie存储的信息大多被用于：</p>\n<ul>\n<li>会话状态管理<ul>\n<li>用户登陆状态等</li>\n</ul>\n</li>\n<li>个性化设置<ul>\n<li>自定义设置、主题和其他设置</li>\n</ul>\n</li>\n<li>浏览器行为跟踪<ul>\n<li>分析用户行为</li>\n</ul>\n</li>\n</ul>\n<p>浏览器第一次请求服务端数据，服务端设置cookie</p>\n<p>不过cookie存储空间较小，大约4k</p>\n<h3 id=\"localStorage、sessionStorage\"><a href=\"#localStorage、sessionStorage\" class=\"headerlink\" title=\"localStorage、sessionStorage\"></a>localStorage、sessionStorage</h3><p>两者的区别是，sessionStorage只在一次会话中有效</p>\n<h2 id=\"验证信息策略\"><a href=\"#验证信息策略\" class=\"headerlink\" title=\"验证信息策略\"></a>验证信息策略</h2><h3 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h3><p>浏览器第一次向服务端请求，服务端生成一个seesionid，并储存到内存或者redis或者数据库中，之后，并且把sessionid返回给客户端，此时，可以选择存到cookie中并且不设置过期时间（关闭session清除），也可以放到前端内存（即声明一个全局变量）中（关闭应用清除）。每次请求服务端数据时，服务端检查cookie是否存在sessionid并且进行验证，如果缓存中有sessionid，那么则通过，没有则重新登录</p>\n<p>sessionId生成策略：可以是随机数、也可以是客户端传来的数据</p>\n<p>特点：存放在<strong>服务端</strong>，服务端每次收到请求都会查询是否存在sessionid，会给服务端查询造成压力</p>\n<h3 id=\"Token\"><a href=\"#Token\" class=\"headerlink\" title=\"Token\"></a>Token</h3><p>客户端进行登录时，服务端生成一个token（字符串，可以有意义也可以无意义）返回给客户端并由客户端保存，之后每次请求，需要由客户端带上这个token，服务端进行验证</p>\n<p>以下是几种token中常用的策略（拓展、变式）</p>\n<ul>\n<li>双token，（多用于实现无感登录）<ul>\n<li>即有两种token，access token 用于请求数据，refresh token 用于刷新access token</li>\n<li>access token 有效期较短，refresh token 有效时间较长</li>\n<li>客户端登录时，服务端生成两个token，access token随请求返回到客户端，用于每次请求时进行验证；refresh token 放到 http<br>only cookie中，以使客户端无法访问，增加安全性，用于access token过期时进行刷新</li>\n</ul>\n</li>\n<li>JWT 一种 token 的 格式以及包含的信息 的*<em>规范</em><ul>\n<li>由三部分组成，头部、中部、尾部, 用.分割，如：xxxxx.yyyyy.zzzzz</li>\n<li>头部：加密方式等,使用base64编码</li>\n<li>中部：用户的信息，如：用户id等，使用base64编码</li>\n<li>尾部：头部和中部使用头部声明的加密方式进行加密</li>\n<li>客户端进行储存，请求时，只需带上jwt，然后客户端进行解码验证，验证无误则有效，节省存储sessionid的服务器压力，用解码时间换取空间</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"OAuth2\"><a href=\"#OAuth2\" class=\"headerlink\" title=\"OAuth2\"></a>OAuth2</h3><p>简单的来说，OAuth2也就是第三方认证，比如你想用微信的号登录小红书这个过程，就是OAuth2的过程</p>\n"}],"PostAsset":[{"_id":"source/_posts/6ospp/casibase.png","post":"cly84y868000agg6k7xjo1nqt","slug":"casibase.png","modified":1,"renderable":1},{"_id":"source/_posts/6ospp/prdetails.png","post":"cly84y868000agg6k7xjo1nqt","slug":"prdetails.png","modified":1,"renderable":1},{"_id":"source/_posts/6ospp/prs.png","post":"cly84y868000agg6k7xjo1nqt","slug":"prs.png","modified":1,"renderable":1},{"_id":"source/_posts/7long/ban.jpg","post":"cly84y86a000bgg6k8amd8d25","slug":"ban.jpg","modified":1,"renderable":1},{"_id":"source/_posts/7long/helloworld.jpg","post":"cly84y86a000bgg6k8amd8d25","slug":"helloworld.jpg","modified":1,"renderable":1},{"_id":"source/_posts/7long/login.jpg","post":"cly84y86a000bgg6k8amd8d25","slug":"login.jpg","modified":1,"renderable":1},{"_id":"source/_posts/7long/total.jpg","post":"cly84y86a000bgg6k8amd8d25","slug":"total.jpg","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[{"post_id":"cly84y85k0001gg6k3ihf6wqy","tag_id":"cly84y85w0004gg6kdxqaaxab","_id":"cly84y86i000egg6kbm86e4e8"},{"post_id":"cly84y85k0001gg6k3ihf6wqy","tag_id":"cly84y8670009gg6k4pni3ssw","_id":"cly84y86j000fgg6k6vhqdmu9"},{"post_id":"cly84y85r0003gg6kfje31ica","tag_id":"cly84y85w0004gg6kdxqaaxab","_id":"cly84y86l000igg6k1nyidv0x"},{"post_id":"cly84y85r0003gg6kfje31ica","tag_id":"cly84y8670009gg6k4pni3ssw","_id":"cly84y86l000jgg6k24959lst"},{"post_id":"cly84y8610006gg6k21d52c1s","tag_id":"cly84y85w0004gg6kdxqaaxab","_id":"cly84y86n000mgg6kftu10a23"},{"post_id":"cly84y8610006gg6k21d52c1s","tag_id":"cly84y8670009gg6k4pni3ssw","_id":"cly84y86n000ngg6k9vs6ggdi"},{"post_id":"cly84y8630007gg6k5tny5ew8","tag_id":"cly84y8670009gg6k4pni3ssw","_id":"cly84y873000tgg6k6qbs8zwr"},{"post_id":"cly84y8630007gg6k5tny5ew8","tag_id":"cly84y86n000ogg6kd0np2xc0","_id":"cly84y873000ugg6k6cq9hgju"},{"post_id":"cly84y8630007gg6k5tny5ew8","tag_id":"cly84y86o000pgg6kft21b0nv","_id":"cly84y874000wgg6k86mb5ixt"},{"post_id":"cly84y8630007gg6k5tny5ew8","tag_id":"cly84y86p000qgg6kevxr6gua","_id":"cly84y874000xgg6k3t6faumj"},{"post_id":"cly84y8630007gg6k5tny5ew8","tag_id":"cly84y86q000rgg6ka7c21xtf","_id":"cly84y874000zgg6k2z7s1iav"},{"post_id":"cly84y8650008gg6k332lcnck","tag_id":"cly84y86p000qgg6kevxr6gua","_id":"cly84y8750010gg6k2da89tc9"},{"post_id":"cly84y8650008gg6k332lcnck","tag_id":"cly84y873000vgg6k6grnf7et","_id":"cly84y8750012gg6k3of80txo"},{"post_id":"cly84y868000agg6k7xjo1nqt","tag_id":"cly84y874000ygg6k5pbz01dk","_id":"cly84y8760014gg6k917l3ct1"},{"post_id":"cly84y868000agg6k7xjo1nqt","tag_id":"cly84y8750011gg6k1cghepmw","_id":"cly84y8760015gg6kg79shsym"},{"post_id":"cly84y86a000bgg6k8amd8d25","tag_id":"cly84y8750013gg6k5isg57dy","_id":"cly84y8770018gg6k4nwq5vnk"},{"post_id":"cly84y86a000bgg6k8amd8d25","tag_id":"cly84y8760016gg6kc7o140en","_id":"cly84y8770019gg6kcr8f607a"},{"post_id":"cly84y86g000dgg6kaf0lhlq8","tag_id":"cly84y8760017gg6k8nmfdkzy","_id":"cly84y877001agg6khmxr2gm0"}],"Tag":[{"name":"android","_id":"cly84y85w0004gg6kdxqaaxab"},{"name":"flutter","_id":"cly84y8670009gg6k4pni3ssw"},{"name":"gpt","_id":"cly84y86n000ogg6kd0np2xc0"},{"name":"ai","_id":"cly84y86o000pgg6kft21b0nv"},{"name":"develop","_id":"cly84y86p000qgg6kevxr6gua"},{"name":"go","_id":"cly84y86q000rgg6ka7c21xtf"},{"name":"js","_id":"cly84y873000vgg6k6grnf7et"},{"name":"开源","_id":"cly84y874000ygg6k5pbz01dk"},{"name":"ospp","_id":"cly84y8750011gg6k1cghepmw"},{"name":"development","_id":"cly84y8750013gg6k5isg57dy"},{"name":"记录","_id":"cly84y8760016gg6kc7o140en"},{"name":"本手","_id":"cly84y8760017gg6k8nmfdkzy"}]}}