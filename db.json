{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/2023-11-02 (1).png","path":"img/2023-11-02 (1).png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/2023-11-02 (15).png","path":"img/2023-11-02 (15).png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/2023-11-02 (5).png","path":"img/2023-11-02 (5).png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/2023-11-02 (6).png","path":"img/2023-11-02 (6).png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/bg1.png","path":"img/bg1.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/bg2.png","path":"img/bg2.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/head.png","path":"img/head.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/categories/index.md","hash":"c5e61badd6923f79a4bf02f9fd4f4a3787fe9ff3","modified":1701571616933},{"_id":"source/link/index.md","hash":"52186b5dfca8835541caacfbd5763995627b87ef","modified":1701571616933},{"_id":"source/_data/link.yml","hash":"a6916d38cd25f9e4887fc5bfea1f6ed2ea72e97e","modified":1701571616824},{"_id":"source/tags/index.md","hash":"f9278f3dca878755ddb7690b3aaec480a1f06512","modified":1701571616935},{"_id":"source/_posts/first.md","hash":"56b09cee6729c8e1d774e84bdd2541275a58a23c","modified":1701574794359},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1701571616932},{"_id":"source/_posts/first_img/img_1.png","hash":"01abe75a3ad5ad9d4bebb7537561e807c118ebce","modified":1701574794361},{"_id":"source/_posts/first_img/img_2.png","hash":"491e760433171586a3d04b834b9ce5d023be944c","modified":1701574794362},{"_id":"source/_posts/first_img/img.png","hash":"adedd2a6cd681a752d5e9e158b6b8a86f9544263","modified":1701574794361},{"_id":"themes/butterfly/_config.yml","hash":"4ea043d6c24ba3e5be83d3e1d2c277abbf7c219b","modified":1700984701995},{"_id":"themes/butterfly/package.json","hash":"1e3099099a5459a30a14421c84f9ab834f54aa51","modified":1700983469194},{"_id":"themes/butterfly/plugins.yml","hash":"9b21d2395b435b0df05db1b3faf8b853d92cf027","modified":1700983469195},{"_id":"themes/butterfly/languages/default.yml","hash":"90e9e2f36dc51aa77eb7804ae048b4876035b12d","modified":1700983469148},{"_id":"themes/butterfly/languages/en.yml","hash":"68127be0e6b44cfc5f31353d8b275c02939b3ff9","modified":1700983469148},{"_id":"themes/butterfly/layout/archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1700983469149},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"2dcc70a011b37890215ae0fd6d8f8c78aa8af6b0","modified":1700983469148},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"1392e7b8c678cdfb54f55523693e66abc7d80538","modified":1700983469149},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1700983469150},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1700983469193},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1700983469193},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1700983469194},{"_id":"themes/butterfly/README.md","hash":"20a91bea7f7ada8b8195d2abff106a7ce21bba20","modified":1700983469146},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1700983469145},{"_id":"themes/butterfly/README_CN.md","hash":"9d729ee2ffc5e5f703ccfbfbbb7b286d59071125","modified":1700983469146},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1700983469194},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"eed9190301095b35081aa2658204cc3f15b9f5e1","modified":1700983469143},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1700983469144},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1700983469145},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1700983469144},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1700983469151},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1700983469150},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1700983469151},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ea8d4e8ac6af93cd268ba8f6ffcb80417bc2501e","modified":1700983469151},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1700983469196},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1700983469157},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1700983469196},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1700983469145},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"f448bf73103b88de4443e52d600e871cf3de3e32","modified":1700983469163},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9277fead4c29dbe93976f078adaa26e8f9253da3","modified":1700983469163},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1700983469197},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1700983469161},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"0a336dfe5ed08952fa0df1532421df38a74a20d6","modified":1700983469198},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"ef9cd54eedf9d8de458f7d9e9203cd547f3f44d2","modified":1700983469197},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1700983469197},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1700983469198},{"_id":"themes/butterfly/source/css/var.styl","hash":"950250f66faeb611a67540e0fa6cedbcf5a7a321","modified":1700983469229},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1700983469229},{"_id":"themes/butterfly/source/js/main.js","hash":"59cd756a94ecdf3ec7b18f50691a8a6305f7a65a","modified":1700983469231},{"_id":"themes/butterfly/source/js/utils.js","hash":"7b871fe0c4456660cff4c7b9cc4ed089adac2caf","modified":1700983469234},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1700983469199},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5ed2d7ef240c927fe1b7a7fb5bf9e55e2bfd55a5","modified":1700983469199},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"0df22d7dbfa766a65cb6032a1f003348f4307cfe","modified":1700983469199},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"cdd992c8577d583c237b6aac9f5077d8200879b2","modified":1700983469201},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"b12895e0765d596494e5526d121de0dd5a7c23d3","modified":1700983469201},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"b55f71347d2ead097c7f98c0ec792b091433345c","modified":1700983469201},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"c74d6a9b8f71e69447f7847a5f5e81555d68b140","modified":1700983469201},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1700983469202},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"17c0095bc8d612a268cdcab000b1742dc4c6f811","modified":1700983469202},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"d776c670e4076ad6049dbb64cdee7a734b51d37f","modified":1700983469234},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1700983469204},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"164d5f1c2d1b4cb5a813a6fc574016743a53c019","modified":1700983469203},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"b013dc0a3d57d2caa18b89263f23871da9ec456d","modified":1700983469205},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"7ec77b3093f5de67e7032f40a5b12f1389f6f6ff","modified":1700983469204},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"c863d2732ce4bdc084f2d0db92f50f80328c1007","modified":1700983469205},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1700983469206},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"5d08c3552f7d3c80a724ca628bff66321abe2e5a","modified":1700983469204},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"289f85847c58f0b2b7d98a68e370a2896edb8949","modified":1700983469206},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"1bef867c799ba158c5417272fb137539951aa120","modified":1700983469155},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"35d54adc92e717cc32e13515122b025fd1a98ea2","modified":1700983469206},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"7c448886f230adb4f4a0208c88fff809abcb5637","modified":1700983469207},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"dc56e5182dd3813dc977c9bf8556dcc7615e467b","modified":1700983469207},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"e611074a5a7f489a8b04afac0a3f7f882ce26532","modified":1700983469207},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1700983469156},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"e7b25a322ae861dca06d458d3f914220e92758cf","modified":1700983469156},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1700983469155},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1700983469153},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1700983469156},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1700983469152},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"39e1ca0a54eb5fd3688a78737417a1aaa50914c9","modified":1700983469153},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1700983469154},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1700983469153},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1700983469155},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"a7c929b90ae52b78b39b1728e3ab0e3db1cb7b9a","modified":1700983469154},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1700983469155},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1700983469159},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"194a5f310dccecee3ae0b648e4e5318f6fbbddcd","modified":1700983469159},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1700983469160},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1700983469158},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1700983469160},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1700983469158},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"766baca6ddce49d1724a02312387b292ff2d0bdc","modified":1700983469157},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"0abad416b1974a17e5be7817931d5fe799180170","modified":1700983469162},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e37681bc9c169d4220f26ecda2b3d5c02b6b9a0f","modified":1700983469161},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1700983469161},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"912df10a053db3135968e92b6fd1a707ee94c968","modified":1700983469163},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1700983469188},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1700983469188},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"ab037bf5794638bd30da4cf7cf106e5d03b5f696","modified":1700983469189},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1700983469189},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1700983469189},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"8e22f53886a57a68286970d8af8b4c950fd4a1d7","modified":1700983469190},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1700983469190},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"2084b8065e63dd045bdca3dc5992014133601e28","modified":1700983469190},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1700983469191},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1700983469191},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1700983469192},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1700983469192},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"8df529f71e25f1c0a00e533de7944ed3d1ba7bd8","modified":1700983469193},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1700983469165},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1700983469177},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1700983469193},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"e920dae9ce00177922468db49240f5aca0af4f64","modified":1700983469209},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"9b734d99963f3e7f562597dcf60485ccbf6e961c","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"dfb5e16a7e7106bb20b2ac2d0df1251d0fc79609","modified":1700983469187},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"0421da07907b3d98df64239e073b23fbb3f04149","modified":1700983469209},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1700983469220},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"dbc855795a881f8c805bf5c9c5c4d5d542a648ec","modified":1700983469219},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1700983469212},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"a22fd15048d21452f0015d0765d295d730203308","modified":1700983469220},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"41054740cfbd1357138785464f6859681ca58493","modified":1700983469210},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1700983469221},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1700983469221},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"df7a51fcabbadab5aa31770e3202a47c9599bbb7","modified":1700983469221},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1700983469222},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1700983469221},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"a977cd8161ef4d6ddd5293e81403519076657430","modified":1700983469222},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"0b23010154e19f37f0c4af0110f9f834d6d41a13","modified":1700983469224},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"aae70ddd126b2e40158e45036abecbfa33cbfbba","modified":1700983469214},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1700983469214},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1700983469214},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"5e27f7842af82ff7498d4b59787ce9ca90fa9e6f","modified":1700983469215},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1700983469216},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"66a7a0e3c58ac23c81afe9fe18834b9db9c42698","modified":1700983469215},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"8a53d7ba5ca2f5eb4124b684e7845b648583f658","modified":1700983469224},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1700983469216},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1700983469223},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1700983469217},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"f2d1a0f9c890dd2313b2996a0ec7130999a24813","modified":1700983469216},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"c0b11a1a5f52e3a6af4e312a8134c93eda18a7dd","modified":1700983469217},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"0322237e762db401d7b4aa33168d0b9334a9ec26","modified":1700983469218},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"80ee9d0bfe5d38aac1f0cdcea5fc88b71d310041","modified":1700983469218},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"15ea7564b2e3bf46bc91fb6e49c94d057b37caaf","modified":1700983469218},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1700983469225},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1700983469225},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"3e9355b76f87e2ee90f652855282b37ab5ae0b3e","modified":1700983469225},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1700983469228},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1700983469226},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1700983469227},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1700983469228},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1700983469226},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"353b95f9a6c2c1e777d978118cb61f909ccbf89c","modified":1700983469227},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"19b5cfa1f77781246e02967cefe149f19170e45f","modified":1700983469165},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1700983469227},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"a7c2fe73cc05ad3525909b86ad0ede1a9f2d3b48","modified":1700983469233},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1700983469166},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1700983469166},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1700983469166},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1700983469167},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"ab3904451ae1d78903424b8b2ef815c8571e1749","modified":1700983469234},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"8f95aca305b56ccd7c8c7367b03d26db816ebd5f","modified":1700983469164},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"58f37823f6cd9a194fb50f7ca7c2233e49939034","modified":1700983469164},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1700983469168},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"7e233f872aea6fd6beccdc9efd86b1bf9ec9f12d","modified":1700983469167},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"364d1fd655baca9132038ef1e312abde2c0bc7de","modified":1700983469173},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"eb8f2919ea9d52f6c829ffa8052ba2585d0b6b98","modified":1700983469172},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"11f5dca1432e59f22955aaf4ac3e9de6b286d887","modified":1700983469173},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"1eab7ca1cb16c6786f9c3ca0efef8cc15e444ab4","modified":1700983469174},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1700983469168},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"1c86c8fc1a28514a02a1f6a25ca9ec05eb3955b7","modified":1700983469174},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"db6713d2b90eb8183f86ac92c26761a8501c0ddb","modified":1700983469174},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"f78c9c20c86d58c7cf099f6f8d6097103d7d43e5","modified":1700983469173},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"09c2ef4bc6d005f96dfa48b1d9af1ec095c5266d","modified":1700983469175},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1700983469175},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"0b44f6de0f5632b55298d506833f45dae46a6346","modified":1700983469176},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"7f450664e6323a076ae59c393b0f22167cfa82e5","modified":1700983469175},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b65a42167df5fb07e2a63f312a58c321d3112a90","modified":1700983469176},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"08a85e52fc800d3562df869e5e2613313e76fce6","modified":1700983469169},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"4ed7c74087e81c6fcaf4fca7dced58b4e19f4cb1","modified":1700983469177},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"09d2ab2570b67e6f09244a898ccab5567cb82ace","modified":1700983469169},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"7e56b48ab49bd03606d781aaa06f1f1132639ff2","modified":1700983469177},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"0d960849d5b05d27ec87627b983ca35f2411b9e8","modified":1700983469170},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1700983469170},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"799da8f3015e6fe440681b21644bcb3810a5518c","modified":1700983469170},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"6d40b521eec4136f6742c548a4445ed593470b1b","modified":1700983469171},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"6de0c412a4d9b65c576ec79e1949925823c90fa6","modified":1700983469180},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"d8898e427acd91ceb97d6a7ee3acb011ca86b9fc","modified":1700983469180},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0b2ef6e853720f453c5048015f877bc91f85a6f7","modified":1700983469181},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1700983469181},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"a4e52188b6effeee1df2a01dcbf4105de76a61a8","modified":1700983469181},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1700983469184},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"52a06a2e039f44383085333cac69f3f4e7d0ad3a","modified":1700983469185},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1700983469185},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"17520a86de12ae585289463c066d3ac91b78a2ff","modified":1700983469182},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"0544d91c0bc9e26e0fe1b5ff490f4a8540ed1ee1","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ecfff55b2c7f6d87ce4d5028fdf9f8c0bf155c73","modified":1700983469183},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"420a86e73d0d748ac234fd00d06d9e433ca5e3f2","modified":1700983469185},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1700983469178},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1700983469178},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"c16ee69b5ca8db016db0508d014ae0867c4ce929","modified":1700983469186},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"c682e4d61017fb0dd2e837bfcc242371f1a13364","modified":1700983469179},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"bb944185f4bb9f9a9b9d70ee215f66ccd6d4c6cf","modified":1700983469179},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1700983469186},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1700983469187},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1700983469210},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1700983469211},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1700983469211},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1700983469211},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"7c9cc43e1d2577f7151039d58e603c30860fd281","modified":1700983469212},{"_id":"source/_img/bg1.png","hash":"393852dfcd9a76a3d1afa5e7f821fe9964875baf","modified":1701571616901},{"_id":"source/_img/2023-11-02 (5).png","hash":"a53d23703c4129c44cb6b7a7b969573c72d51317","modified":1701571616876},{"_id":"source/_img/head.png","hash":"c2a9ce16d9fb539f7d130e847aa38b185f1dee96","modified":1701571616931},{"_id":"themes/butterfly/source/img/bg1.png","hash":"393852dfcd9a76a3d1afa5e7f821fe9964875baf","modified":1698930846863},{"_id":"source/_img/2023-11-02 (15).png","hash":"a0f99af33c4b05426e5c760b18b10451b6c58cc7","modified":1701571616863},{"_id":"source/_img/2023-11-02 (6).png","hash":"a8fd44de0742a1fc69fc48a1f507554d60d8f699","modified":1701571616892},{"_id":"source/_img/bg2.png","hash":"e278ca160091210b29606c9458c041d252aa5298","modified":1701571616917},{"_id":"themes/butterfly/source/img/2023-11-02 (5).png","hash":"a53d23703c4129c44cb6b7a7b969573c72d51317","modified":1698930937453},{"_id":"themes/butterfly/source/img/head.png","hash":"c2a9ce16d9fb539f7d130e847aa38b185f1dee96","modified":1698931257807},{"_id":"source/_img/2023-11-02 (1).png","hash":"a623974a89c8f5b051a1f1ab72933cdcc8a77251","modified":1701571616847},{"_id":"themes/butterfly/source/img/2023-11-02 (15).png","hash":"a0f99af33c4b05426e5c760b18b10451b6c58cc7","modified":1698931908920},{"_id":"themes/butterfly/source/img/2023-11-02 (6).png","hash":"a8fd44de0742a1fc69fc48a1f507554d60d8f699","modified":1698930952075},{"_id":"themes/butterfly/source/img/bg2.png","hash":"e278ca160091210b29606c9458c041d252aa5298","modified":1698930838983},{"_id":"themes/butterfly/source/img/2023-11-02 (1).png","hash":"a623974a89c8f5b051a1f1ab72933cdcc8a77251","modified":1698930770120},{"_id":"public/categories/index.html","hash":"42d8811eff02ff7bd35588dd9653e9a3e96a3583","modified":1705503182914},{"_id":"public/link/index.html","hash":"f4aa248fb0cf168de195c66e3bc5ef1acfef5229","modified":1705503182914},{"_id":"public/tags/index.html","hash":"a648863f13485ff330cd08107c9e1eb60aca2057","modified":1705503182914},{"_id":"public/archives/index.html","hash":"ccf5ea6676bc62ad53672435445e310ced67691e","modified":1705503182914},{"_id":"public/archives/2023/index.html","hash":"1cc8aa6872819833c07d8a7be9ef758d771b3ff0","modified":1705503182914},{"_id":"public/archives/2023/12/index.html","hash":"cecd23006b80226eb1ac3015c967680578cd356d","modified":1705503182914},{"_id":"public/tags/android/index.html","hash":"c68efe1a1d69187bc66f3f3f0753cdb596c8d7c5","modified":1705503182914},{"_id":"public/tags/flutter/index.html","hash":"dece283a9a321d44a03063ac2e03de2282949cdc","modified":1705503182914},{"_id":"public/2023/12/03/first/index.html","hash":"e2ceeab96ac7e3dc36091f1cfb388fc6c4c0c73f","modified":1701574898062},{"_id":"public/2023/12/03/hello-world/index.html","hash":"049131684544899153b5eec0545706941a86ee9d","modified":1701574898062},{"_id":"public/index.html","hash":"41f2abfb980740ac9516bc804e31521d17aa6e89","modified":1705503182914},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1705501688416},{"_id":"public/css/index.css","hash":"d27882816e123577074b040e3140106c0d565e1a","modified":1705501688416},{"_id":"public/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1705501688416},{"_id":"public/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1705501688416},{"_id":"public/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1705501688416},{"_id":"public/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1705501688416},{"_id":"public/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1705501688416},{"_id":"public/img/bg1.png","hash":"393852dfcd9a76a3d1afa5e7f821fe9964875baf","modified":1705501688416},{"_id":"public/img/2023-11-02 (5).png","hash":"a53d23703c4129c44cb6b7a7b969573c72d51317","modified":1705501688416},{"_id":"public/img/head.png","hash":"c2a9ce16d9fb539f7d130e847aa38b185f1dee96","modified":1705501688416},{"_id":"public/img/2023-11-02 (15).png","hash":"a0f99af33c4b05426e5c760b18b10451b6c58cc7","modified":1705501688416},{"_id":"public/img/2023-11-02 (6).png","hash":"a8fd44de0742a1fc69fc48a1f507554d60d8f699","modified":1705501688416},{"_id":"public/img/bg2.png","hash":"e278ca160091210b29606c9458c041d252aa5298","modified":1705501688416},{"_id":"public/img/2023-11-02 (1).png","hash":"a623974a89c8f5b051a1f1ab72933cdcc8a77251","modified":1705501688416},{"_id":"source/_posts/2some.md","hash":"a89a718af90fdd91e4a012ab7b9c418d28499a96","modified":1705503141703},{"_id":"source/_posts/1android_local_notification.md","hash":"56b09cee6729c8e1d774e84bdd2541275a58a23c","modified":1702734041018},{"_id":"public/archives/2024/index.html","hash":"3c3711b407ec50fa08d2870dc9b42caf2c950659","modified":1705503182914},{"_id":"public/archives/2024/01/index.html","hash":"98c61f6e4d2e45c91ef63003f3aed88bcc26503c","modified":1705503182914},{"_id":"public/2023/12/03/1android_local_notification/index.html","hash":"82cafa5ffdf691104a412dbb881c358f634f3b48","modified":1705501688416},{"_id":"public/2024/01/13/2some/index.html","hash":"d87788b308b09050705bd944ff495934cb0893ad","modified":1705503182914}],"Category":[],"Data":[{"_id":"link","data":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}],"Page":[{"title":"分类","date":"2023-12-03T02:46:56.933Z","updated":"2023-12-03T02:46:56.933Z","type":"categories","comments":1,"description":null,"keywords":null,"top_img":null,"mathjax":null,"katex":null,"aside":null,"aplayer":null,"highlight_shrink":null,"random":null,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: ':year-:month-:day :hour:00:00'\nupdated:\ntype: \"categories\"\ncomments:\ndescription:\nkeywords:\ntop_img:\nmathjax:\nkatex:\naside:\naplayer:\nhighlight_shrink:\nrandom:\n---\n","path":"categories/index.html","layout":"page","_id":"clpoxrew10000946kgs523uy3","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"友情链接","date":"2023-12-03T02:46:56.933Z","updated":"2023-12-03T02:46:56.933Z","type":"link","comments":1,"description":null,"keywords":null,"top_img":null,"mathjax":null,"katex":null,"aside":null,"aplayer":null,"highlight_shrink":null,"random":null,"_content":"","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: ':year-:month-:day :hour:00:00'\nupdated:\ntype: link\ncomments:\ndescription:\nkeywords:\ntop_img:\nmathjax:\nkatex:\naside:\naplayer:\nhighlight_shrink:\nrandom:\n---\n","path":"link/index.html","layout":"page","_id":"clpoxrew70002946kgbw1bvs0","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"标签","date":"2023-12-03T02:46:56.935Z","updated":"2023-12-03T02:46:56.935Z","type":"tags","comments":1,"description":null,"keywords":null,"top_img":null,"mathjax":null,"katex":null,"aside":null,"aplayer":null,"highlight_shrink":null,"random":true,"order":1,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: ':year-:month-:day :hour:00:00'\nupdated:\ntype: \"tags\"\ncomments:\ndescription:\nkeywords:\ntop_img:\nmathjax:\nkatex:\naside:\naplayer:\nhighlight_shrink:\nrandom: true\norder: 1\n---\n","path":"tags/index.html","layout":"page","_id":"clpoxrew90004946k0ycyg05x","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""}],"Post":[{"layout":"posts","title":"一些总结","date":"2024-01-13T02:47:29.000Z","_content":"总的来说，我不是一个爱写文章的人。记起来从写人生第一篇作文开始，我的写作之路就没有遇到过坦途。曾经试着反思原因，大抵是因为一些完美主义倾向。譬如写了上一句，要对下一句的方向内容乃至把字句被字句都要犹豫很久。不过这也是可贵的，古代诗人曾经有过诗句。鸟宿池边树，僧敲月下门。为人性僻耽佳句，语不惊人死不休。想来那些欧阳修、柳宗元之类的大家都曾如此。\n\n就譬如写上一段以及这一段，大抵改了二十次有余。\n\n\n\n最近还是在做我名为 ”电梯维保“ 的项目，不过近几日工作少了些枯燥。添加了些百度api定位之类的，由此引出来了种种。\n\n以下是这几日我遇到的一些问题，权当是总结，也是为了以后找起来方便。\n\n##  1. sourcetree 配置 github  SSH\n\n原因：在像往常一样用ssh拉取git仓库的时候报了 port：22   timeout错误，故此总结了两篇比较简洁的技术博客\n\n\n\n配置ssh ：https://juejin.cn/post/7224017330724175927\n\n修改config（如果没有config则新建）：https://blog.csdn.net/the__future/article/details/130038818\n\n\n\n## 2.百度api\n\n### \t1.百度api  location定位功能   封装代码\n\n以下是代码：\n\n```dart\nclass GetLocation {\n  static int count = 0;\n  static bool starLocate = false;\n  static double latitude = 0;\n  static double longitude = 0;\n\n  GetLocation();\n\n  static LocationFlutterPlugin myLocPlugin = LocationFlutterPlugin();\n  static BaiduLocation baiduLocation = BaiduLocation();\n\n  static Future<bool> locationInit() async {\n    log(\"定位初始化\");\n\n    /// 动态申请定位权限\n    if (await requestPermission()) {\n      myLocPlugin.setAgreePrivacy(true);\n      myLocPlugin.getApiKeyCallback(callback: (String result) {\n        String str = result;\n        log('鉴权结果：' + str);\n      });\n\n      myLocPlugin.seriesLocationCallback(\n          callback: (BaiduLocation result) async {\n        if (count >= 10) {\n          await myLocPlugin.stopLocation();\n        } else {\n          if (result.latitude != null && result.longitude != null) {\n            await myLocPlugin.stopLocation();\n            longitude = result.longitude!;\n            latitude = result.latitude!;\n          }else{\n            log(\"错误码:${result.errorCode}  ${result.errorInfo} ${result.getMap().toString()}\");\n          }\n        }\n      });\n      Map androidMap = initAndroidOptions().getMap();\n      Map iosMap = initIOSOptions().getMap();\n      var _suc = await myLocPlugin.prepareLoc(androidMap, iosMap);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static BaiduLocationAndroidOption initAndroidOptions() {\n    BaiduLocationAndroidOption options = BaiduLocationAndroidOption(\n        locationMode: BMFLocationMode.hightAccuracy,\n        isNeedAddress: false,\n        isNeedAltitude: false,\n        isNeedLocationPoiList: false,\n        isNeedNewVersionRgc: true,\n        isNeedLocationDescribe: true,\n        openGps: true,\n        locationPurpose: BMFLocationPurpose.sport,\n        coordType: BMFLocationCoordType.bd09ll,\n        scanspan: 0);\n    return options;\n  }\n\n  static BaiduLocationIOSOption initIOSOptions() {\n    BaiduLocationIOSOption options = BaiduLocationIOSOption(\n      coordType: BMFLocationCoordType.bd09ll,\n      locationTimeout: 10,\n      reGeocodeTimeout: 10,\n      activityType: BMFActivityType.automotiveNavigation,\n      desiredAccuracy: BMFDesiredAccuracy.best,\n      isNeedNewVersionRgc: true,\n      pausesLocationUpdatesAutomatically: false,\n      allowsBackgroundLocationUpdates: true,\n      distanceFilter: 10,\n    );\n    return options;\n  }\n\n  static Future<Map> getLocationSingle() async {\n    await myLocPlugin.stopLocation();\n    longitude = 0;\n    latitude = 0;\n    starLocate = false;\n    count = 0;\n    Map result = {\"success\": false};\n    log(\"进入\");\n    while (count < 10) {\n      if (!starLocate) {\n        starLocate = true;\n        bool test=await myLocPlugin.startLocation();\n      }\n      await Future.delayed(const Duration(seconds: 1))\n          .then((_) {\n        count++;\n        if (longitude != 0 || latitude != 0) {\n          double tlong = longitude;\n          double tl = latitude;\n          result = {\"success\": true, \"longitude\": tlong, \"latitude\": tl};\n          starLocate=false;\n        }\n      });\n      if (!starLocate) {\n        break;\n      }\n    }\n    longitude = 0;\n    latitude = 0;\n    starLocate = false;\n    count = 0;\n    starLocate = false;\n    myLocPlugin.stopLocation();\n    return result;\n  }\n\n  static Future<bool> requestPermission() async {\n    if (!(await Permission.location.isLimited ||\n        await Permission.location.isRestricted ||\n        await Permission.location.isGranted)) {\n      await Permission.location.request();\n    }\n    if ((await Permission.location.isLimited ||\n        await Permission.location.isRestricted ||\n        await Permission.location.isGranted)) {\n      return true;\n    } else {\n      Get.defaultDialog(title: \"错误\",content: const Text(\"无法获取位置信息，请手动设置权限后重启app\"));\n      return false;\n    }\n  }\n}\n```\n\n这段直接引用了另外一个同学的代码，我自己用 get 插件的GetxController 成功封装过一次，不过现在想想封装逻辑较之不是很清晰。\n\n\n\n### 2.由此引申的so文件\n\n在实现了上述的location的封装以及应用之后，想要自己做一个类似于百度地图app，故而尝试调用了百度地图api。\n\n```\nBMFMapOptions mapOptions = BMFMapOptions(\n        center: BMFCoordinate(39.917215, 116.380341),\n        zoomLevel: 12,\n        mapPadding: BMFEdgeInsets(left: 30, top: 0, right: 30, bottom: 0));\nContainer(\n      height: screenSize.height,\n      width: screenSize.width,\n      child: BMFMapWidget(\n        onBMFMapCreated: (controller) {\n          onBMFMapCreated(controller);\n        },\n        mapOptions: mapOptions,\n      ),\n    );\n```\n\n成功按照文档配置好环境以后，出现了地图黑屏的问题（此时并没有退出）。然而在网上一些社区csdn 掘金 stackoverflow，并没有找到解决方案。观察控制台的报错，发现是 缺少了 libgnustl_shared.zip文件。 找了好久找到了下载地址：https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip?  然而按照网络上的方法配置到项目里后，没有用，故放弃。\n\n以下是so文件的简述以及作用：\n\n```\n\".so\" 文件是一种共享库（Shared Object Library）文件的后缀名。这种文件格式通常在类Unix操作系统（如Linux）中使用。共享库包含一组预编译的可执行代码和数据，可以被多个程序共享，以提供共享的功能和资源。\n\n这些文件通常包含编译后的二进制代码，可以被动态链接到程序中，而不是静态地嵌入在每个程序中。这样做有助于减小程序文件的大小，同时允许多个程序共享相同的代码库，提高系统的效率。\n\n在Linux系统中，共享库文件通常存储在 \"/lib\" 或 \"/usr/lib\" 目录下，而应用程序通过动态链接器在运行时加载这些库。这种动态链接的方式有助于减少内存占用，同时简化程序的维护和更新。\n```\n\n\n## 3.网易云api\n\n对接百度api失败之后有点烦，于是...\n\n涉及到的知识点：docker  、serveless 、nodejs跨域\n\n感谢开源项目：\n\n​\t\t1.github地址：git@github.com:Binaryify/NeteaseCloudMusicApi.git\n\n​\t\t2.官方网站 :https://docs.neteasecloudmusicapi.binaryify.com/\n\n算是一个总结，也算是一个分享：\n\n```\n 1.克隆仓库并运行项目\n git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git\n cd NeteaseCloudMusicApi\n npm install\n \n node app.js\n //之后可以在默认3000端口访问到\n\n set PORT=4000 && node app.js\n```\n\n\n\n### 1.docker 部署\n\ndocker 是在我大一下学期接触到的，当时一并学了vim，堪称利器。然而docker对当时的我相当于降维打击，很多概念都无法理解。现在则一学就会，验证了认识的螺旋上升性。\n\n```\n$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi && cd NeteaseCloudMusicApi\n\n$ sudo docker build . -t netease-music-api\n\n$ sudo docker run -d -p 3000:3000 netease-music-api\n```\n\n可视化版本的，在docker应用里的”dev enviroments“里添加任务夹即可\n\n不过部署之后在客户端请求会遇到跨域问题，这点我们之后再说\n\n### 2. 跨域问题\n\n因为本人是打算做一个flutter的android项目的，所以会遇到跨域问题\n\n以下是我在掘金上搜索到的node js解决代码， 不过我在本地运行之后并没有解决跨域，权且当一个记录，量变引起质变，或许早晚会用到\n\n```\nconst http = require('http');\n\n// 第一步：接受客户端请求\nconst server = http.createServer((request, response) => {\n\t\n    // 代理服务器，直接和浏览器直接交互，也需要设置：CORS 的首部字段\n    response.writeHead(200, {\n        'Access-Control-Allow-Origin': '*',  // 设置 optins 方法允许所有服务器访问 \n        'Access-Control-Allow-Methods': '*',\n        'Access-Control-Allow-Headers': 'Content-Type',\n    });\n\t\n    // 第二步：将请求转发给服务器\n    const proxyRequest = http.request({\n        host: '127.0.0.1',\n        port: 4000,\n        url: '/',\n        method: request.method,\n        headers: request.headers\n    }, (serverResponse) => {\n        \n        // 第三步：收到服务器的响应\n        var body = '';\n\n        serverResponse.on('data', (chunk) => {\n            body += chunk;\n        });\n\n        serverResponse.on('end', () => {\n            console.log('The data is ' + body );\n            \n            // 第四步：将响应结果转发给浏览器\n            response.end(body);\n        })\n\n    }).end();\n\n});\n\nserver.listen(3000, () => {\n    console.log('The proxyServer is running at http://localhost:3000');\n});\n```\n\n\n### 3.serveless部署\n\n网址： https://console.cloud.tencent.com/sls\n\n以下是步骤：\n\n1. fork 此项目\n\n2. 在腾讯云serverless应用管理页面( https://console.cloud.tencent.com/sls ),点击`新建应用`\n\n3. 顶部`创建方式`选择 `Web 应用`\n\n4. 选择 `Express框架`,点击底部`下一步按钮`\n\n5. 输入`应用名`,上传方式选择`代码仓库`,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目\n\n6. 启动文件填入:\n\n   ```\n   #!/bin/bash\n   export PORT=9000\n   /var/lang/node16/bin/node app.js\n   ```\n\n7. 点击`完成`,等待部署完成,点击`资源列表`的 `API网关` 里的 `URL`,正常情况会打开文档地址,点击文档`例子`可查看接口调用效果\n\n在serveless部署之后，跨域问题解决了。\n\n\n\n","source":"_posts/2some.md","raw":"---\nlayout: posts\ntitle: 一些总结\ndate: 2024-1-13 10:47:29\ntags:\n  - android\n  - flutter\n---\n总的来说，我不是一个爱写文章的人。记起来从写人生第一篇作文开始，我的写作之路就没有遇到过坦途。曾经试着反思原因，大抵是因为一些完美主义倾向。譬如写了上一句，要对下一句的方向内容乃至把字句被字句都要犹豫很久。不过这也是可贵的，古代诗人曾经有过诗句。鸟宿池边树，僧敲月下门。为人性僻耽佳句，语不惊人死不休。想来那些欧阳修、柳宗元之类的大家都曾如此。\n\n就譬如写上一段以及这一段，大抵改了二十次有余。\n\n\n\n最近还是在做我名为 ”电梯维保“ 的项目，不过近几日工作少了些枯燥。添加了些百度api定位之类的，由此引出来了种种。\n\n以下是这几日我遇到的一些问题，权当是总结，也是为了以后找起来方便。\n\n##  1. sourcetree 配置 github  SSH\n\n原因：在像往常一样用ssh拉取git仓库的时候报了 port：22   timeout错误，故此总结了两篇比较简洁的技术博客\n\n\n\n配置ssh ：https://juejin.cn/post/7224017330724175927\n\n修改config（如果没有config则新建）：https://blog.csdn.net/the__future/article/details/130038818\n\n\n\n## 2.百度api\n\n### \t1.百度api  location定位功能   封装代码\n\n以下是代码：\n\n```dart\nclass GetLocation {\n  static int count = 0;\n  static bool starLocate = false;\n  static double latitude = 0;\n  static double longitude = 0;\n\n  GetLocation();\n\n  static LocationFlutterPlugin myLocPlugin = LocationFlutterPlugin();\n  static BaiduLocation baiduLocation = BaiduLocation();\n\n  static Future<bool> locationInit() async {\n    log(\"定位初始化\");\n\n    /// 动态申请定位权限\n    if (await requestPermission()) {\n      myLocPlugin.setAgreePrivacy(true);\n      myLocPlugin.getApiKeyCallback(callback: (String result) {\n        String str = result;\n        log('鉴权结果：' + str);\n      });\n\n      myLocPlugin.seriesLocationCallback(\n          callback: (BaiduLocation result) async {\n        if (count >= 10) {\n          await myLocPlugin.stopLocation();\n        } else {\n          if (result.latitude != null && result.longitude != null) {\n            await myLocPlugin.stopLocation();\n            longitude = result.longitude!;\n            latitude = result.latitude!;\n          }else{\n            log(\"错误码:${result.errorCode}  ${result.errorInfo} ${result.getMap().toString()}\");\n          }\n        }\n      });\n      Map androidMap = initAndroidOptions().getMap();\n      Map iosMap = initIOSOptions().getMap();\n      var _suc = await myLocPlugin.prepareLoc(androidMap, iosMap);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static BaiduLocationAndroidOption initAndroidOptions() {\n    BaiduLocationAndroidOption options = BaiduLocationAndroidOption(\n        locationMode: BMFLocationMode.hightAccuracy,\n        isNeedAddress: false,\n        isNeedAltitude: false,\n        isNeedLocationPoiList: false,\n        isNeedNewVersionRgc: true,\n        isNeedLocationDescribe: true,\n        openGps: true,\n        locationPurpose: BMFLocationPurpose.sport,\n        coordType: BMFLocationCoordType.bd09ll,\n        scanspan: 0);\n    return options;\n  }\n\n  static BaiduLocationIOSOption initIOSOptions() {\n    BaiduLocationIOSOption options = BaiduLocationIOSOption(\n      coordType: BMFLocationCoordType.bd09ll,\n      locationTimeout: 10,\n      reGeocodeTimeout: 10,\n      activityType: BMFActivityType.automotiveNavigation,\n      desiredAccuracy: BMFDesiredAccuracy.best,\n      isNeedNewVersionRgc: true,\n      pausesLocationUpdatesAutomatically: false,\n      allowsBackgroundLocationUpdates: true,\n      distanceFilter: 10,\n    );\n    return options;\n  }\n\n  static Future<Map> getLocationSingle() async {\n    await myLocPlugin.stopLocation();\n    longitude = 0;\n    latitude = 0;\n    starLocate = false;\n    count = 0;\n    Map result = {\"success\": false};\n    log(\"进入\");\n    while (count < 10) {\n      if (!starLocate) {\n        starLocate = true;\n        bool test=await myLocPlugin.startLocation();\n      }\n      await Future.delayed(const Duration(seconds: 1))\n          .then((_) {\n        count++;\n        if (longitude != 0 || latitude != 0) {\n          double tlong = longitude;\n          double tl = latitude;\n          result = {\"success\": true, \"longitude\": tlong, \"latitude\": tl};\n          starLocate=false;\n        }\n      });\n      if (!starLocate) {\n        break;\n      }\n    }\n    longitude = 0;\n    latitude = 0;\n    starLocate = false;\n    count = 0;\n    starLocate = false;\n    myLocPlugin.stopLocation();\n    return result;\n  }\n\n  static Future<bool> requestPermission() async {\n    if (!(await Permission.location.isLimited ||\n        await Permission.location.isRestricted ||\n        await Permission.location.isGranted)) {\n      await Permission.location.request();\n    }\n    if ((await Permission.location.isLimited ||\n        await Permission.location.isRestricted ||\n        await Permission.location.isGranted)) {\n      return true;\n    } else {\n      Get.defaultDialog(title: \"错误\",content: const Text(\"无法获取位置信息，请手动设置权限后重启app\"));\n      return false;\n    }\n  }\n}\n```\n\n这段直接引用了另外一个同学的代码，我自己用 get 插件的GetxController 成功封装过一次，不过现在想想封装逻辑较之不是很清晰。\n\n\n\n### 2.由此引申的so文件\n\n在实现了上述的location的封装以及应用之后，想要自己做一个类似于百度地图app，故而尝试调用了百度地图api。\n\n```\nBMFMapOptions mapOptions = BMFMapOptions(\n        center: BMFCoordinate(39.917215, 116.380341),\n        zoomLevel: 12,\n        mapPadding: BMFEdgeInsets(left: 30, top: 0, right: 30, bottom: 0));\nContainer(\n      height: screenSize.height,\n      width: screenSize.width,\n      child: BMFMapWidget(\n        onBMFMapCreated: (controller) {\n          onBMFMapCreated(controller);\n        },\n        mapOptions: mapOptions,\n      ),\n    );\n```\n\n成功按照文档配置好环境以后，出现了地图黑屏的问题（此时并没有退出）。然而在网上一些社区csdn 掘金 stackoverflow，并没有找到解决方案。观察控制台的报错，发现是 缺少了 libgnustl_shared.zip文件。 找了好久找到了下载地址：https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip?  然而按照网络上的方法配置到项目里后，没有用，故放弃。\n\n以下是so文件的简述以及作用：\n\n```\n\".so\" 文件是一种共享库（Shared Object Library）文件的后缀名。这种文件格式通常在类Unix操作系统（如Linux）中使用。共享库包含一组预编译的可执行代码和数据，可以被多个程序共享，以提供共享的功能和资源。\n\n这些文件通常包含编译后的二进制代码，可以被动态链接到程序中，而不是静态地嵌入在每个程序中。这样做有助于减小程序文件的大小，同时允许多个程序共享相同的代码库，提高系统的效率。\n\n在Linux系统中，共享库文件通常存储在 \"/lib\" 或 \"/usr/lib\" 目录下，而应用程序通过动态链接器在运行时加载这些库。这种动态链接的方式有助于减少内存占用，同时简化程序的维护和更新。\n```\n\n\n## 3.网易云api\n\n对接百度api失败之后有点烦，于是...\n\n涉及到的知识点：docker  、serveless 、nodejs跨域\n\n感谢开源项目：\n\n​\t\t1.github地址：git@github.com:Binaryify/NeteaseCloudMusicApi.git\n\n​\t\t2.官方网站 :https://docs.neteasecloudmusicapi.binaryify.com/\n\n算是一个总结，也算是一个分享：\n\n```\n 1.克隆仓库并运行项目\n git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git\n cd NeteaseCloudMusicApi\n npm install\n \n node app.js\n //之后可以在默认3000端口访问到\n\n set PORT=4000 && node app.js\n```\n\n\n\n### 1.docker 部署\n\ndocker 是在我大一下学期接触到的，当时一并学了vim，堪称利器。然而docker对当时的我相当于降维打击，很多概念都无法理解。现在则一学就会，验证了认识的螺旋上升性。\n\n```\n$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi && cd NeteaseCloudMusicApi\n\n$ sudo docker build . -t netease-music-api\n\n$ sudo docker run -d -p 3000:3000 netease-music-api\n```\n\n可视化版本的，在docker应用里的”dev enviroments“里添加任务夹即可\n\n不过部署之后在客户端请求会遇到跨域问题，这点我们之后再说\n\n### 2. 跨域问题\n\n因为本人是打算做一个flutter的android项目的，所以会遇到跨域问题\n\n以下是我在掘金上搜索到的node js解决代码， 不过我在本地运行之后并没有解决跨域，权且当一个记录，量变引起质变，或许早晚会用到\n\n```\nconst http = require('http');\n\n// 第一步：接受客户端请求\nconst server = http.createServer((request, response) => {\n\t\n    // 代理服务器，直接和浏览器直接交互，也需要设置：CORS 的首部字段\n    response.writeHead(200, {\n        'Access-Control-Allow-Origin': '*',  // 设置 optins 方法允许所有服务器访问 \n        'Access-Control-Allow-Methods': '*',\n        'Access-Control-Allow-Headers': 'Content-Type',\n    });\n\t\n    // 第二步：将请求转发给服务器\n    const proxyRequest = http.request({\n        host: '127.0.0.1',\n        port: 4000,\n        url: '/',\n        method: request.method,\n        headers: request.headers\n    }, (serverResponse) => {\n        \n        // 第三步：收到服务器的响应\n        var body = '';\n\n        serverResponse.on('data', (chunk) => {\n            body += chunk;\n        });\n\n        serverResponse.on('end', () => {\n            console.log('The data is ' + body );\n            \n            // 第四步：将响应结果转发给浏览器\n            response.end(body);\n        })\n\n    }).end();\n\n});\n\nserver.listen(3000, () => {\n    console.log('The proxyServer is running at http://localhost:3000');\n});\n```\n\n\n### 3.serveless部署\n\n网址： https://console.cloud.tencent.com/sls\n\n以下是步骤：\n\n1. fork 此项目\n\n2. 在腾讯云serverless应用管理页面( https://console.cloud.tencent.com/sls ),点击`新建应用`\n\n3. 顶部`创建方式`选择 `Web 应用`\n\n4. 选择 `Express框架`,点击底部`下一步按钮`\n\n5. 输入`应用名`,上传方式选择`代码仓库`,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目\n\n6. 启动文件填入:\n\n   ```\n   #!/bin/bash\n   export PORT=9000\n   /var/lang/node16/bin/node app.js\n   ```\n\n7. 点击`完成`,等待部署完成,点击`资源列表`的 `API网关` 里的 `URL`,正常情况会打开文档地址,点击文档`例子`可查看接口调用效果\n\n在serveless部署之后，跨域问题解决了。\n\n\n\n","slug":"2some","published":1,"updated":"2024-01-17T14:52:21.703Z","_id":"clrhvmx970000ns6k1lyxb1e1","comments":1,"photos":[],"link":"","content":"<p>总的来说，我不是一个爱写文章的人。记起来从写人生第一篇作文开始，我的写作之路就没有遇到过坦途。曾经试着反思原因，大抵是因为一些完美主义倾向。譬如写了上一句，要对下一句的方向内容乃至把字句被字句都要犹豫很久。不过这也是可贵的，古代诗人曾经有过诗句。鸟宿池边树，僧敲月下门。为人性僻耽佳句，语不惊人死不休。想来那些欧阳修、柳宗元之类的大家都曾如此。</p>\n<p>就譬如写上一段以及这一段，大抵改了二十次有余。</p>\n<p>最近还是在做我名为 ”电梯维保“ 的项目，不过近几日工作少了些枯燥。添加了些百度api定位之类的，由此引出来了种种。</p>\n<p>以下是这几日我遇到的一些问题，权当是总结，也是为了以后找起来方便。</p>\n<h2 id=\"1-sourcetree-配置-github-SSH\"><a href=\"#1-sourcetree-配置-github-SSH\" class=\"headerlink\" title=\"1. sourcetree 配置 github  SSH\"></a>1. sourcetree 配置 github  SSH</h2><p>原因：在像往常一样用ssh拉取git仓库的时候报了 port：22   timeout错误，故此总结了两篇比较简洁的技术博客</p>\n<p>配置ssh ：<a href=\"https://juejin.cn/post/7224017330724175927\">https://juejin.cn/post/7224017330724175927</a></p>\n<p>修改config（如果没有config则新建）：<a href=\"https://blog.csdn.net/the__future/article/details/130038818\">https://blog.csdn.net/the__future/article/details/130038818</a></p>\n<h2 id=\"2-百度api\"><a href=\"#2-百度api\" class=\"headerlink\" title=\"2.百度api\"></a>2.百度api</h2><h3 id=\"1-百度api-location定位功能-封装代码\"><a href=\"#1-百度api-location定位功能-封装代码\" class=\"headerlink\" title=\"1.百度api  location定位功能   封装代码\"></a>1.百度api  location定位功能   封装代码</h3><p>以下是代码：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GetLocation</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">double</span> latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">double</span> longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  GetLocation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> LocationFlutterPlugin myLocPlugin = LocationFlutterPlugin();</span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocation baiduLocation = BaiduLocation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">bool</span>&gt; locationInit() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;定位初始化&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// <span class=\"language-markdown\">动态申请定位权限</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">await</span> requestPermission()) &#123;</span><br><span class=\"line\">      myLocPlugin.setAgreePrivacy(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">      myLocPlugin.getApiKeyCallback(callback: (<span class=\"built_in\">String</span> result) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">String</span> str = result;</span><br><span class=\"line\">        log(<span class=\"string\">&#x27;鉴权结果：&#x27;</span> + str);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      myLocPlugin.seriesLocationCallback(</span><br><span class=\"line\">          callback: (BaiduLocation result) <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (result.latitude != <span class=\"keyword\">null</span> &amp;&amp; result.longitude != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">            longitude = result.longitude!;</span><br><span class=\"line\">            latitude = result.latitude!;</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            log(<span class=\"string\">&quot;错误码:<span class=\"subst\">$&#123;result.errorCode&#125;</span>  <span class=\"subst\">$&#123;result.errorInfo&#125;</span> <span class=\"subst\">$&#123;result.getMap().toString()&#125;</span>&quot;</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"built_in\">Map</span> androidMap = initAndroidOptions().getMap();</span><br><span class=\"line\">      <span class=\"built_in\">Map</span> iosMap = initIOSOptions().getMap();</span><br><span class=\"line\">      <span class=\"keyword\">var</span> _suc = <span class=\"keyword\">await</span> myLocPlugin.prepareLoc(androidMap, iosMap);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocationAndroidOption initAndroidOptions() &#123;</span><br><span class=\"line\">    BaiduLocationAndroidOption options = BaiduLocationAndroidOption(</span><br><span class=\"line\">        locationMode: BMFLocationMode.hightAccuracy,</span><br><span class=\"line\">        isNeedAddress: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedAltitude: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedLocationPoiList: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedNewVersionRgc: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        isNeedLocationDescribe: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        openGps: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        locationPurpose: BMFLocationPurpose.sport,</span><br><span class=\"line\">        coordType: BMFLocationCoordType.bd09ll,</span><br><span class=\"line\">        scanspan: <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocationIOSOption initIOSOptions() &#123;</span><br><span class=\"line\">    BaiduLocationIOSOption options = BaiduLocationIOSOption(</span><br><span class=\"line\">      coordType: BMFLocationCoordType.bd09ll,</span><br><span class=\"line\">      locationTimeout: <span class=\"number\">10</span>,</span><br><span class=\"line\">      reGeocodeTimeout: <span class=\"number\">10</span>,</span><br><span class=\"line\">      activityType: BMFActivityType.automotiveNavigation,</span><br><span class=\"line\">      desiredAccuracy: BMFDesiredAccuracy.best,</span><br><span class=\"line\">      isNeedNewVersionRgc: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">      pausesLocationUpdatesAutomatically: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">      allowsBackgroundLocationUpdates: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">      distanceFilter: <span class=\"number\">10</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">Map</span>&gt; getLocationSingle() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">    longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">Map</span> result = &#123;<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">false</span>&#125;;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;进入&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (count &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!starLocate) &#123;</span><br><span class=\"line\">        starLocate = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"built_in\">bool</span> test=<span class=\"keyword\">await</span> myLocPlugin.startLocation();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> Future.delayed(<span class=\"keyword\">const</span> <span class=\"built_in\">Duration</span>(seconds: <span class=\"number\">1</span>))</span><br><span class=\"line\">          .then((_) &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (longitude != <span class=\"number\">0</span> || latitude != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">double</span> tlong = longitude;</span><br><span class=\"line\">          <span class=\"built_in\">double</span> tl = latitude;</span><br><span class=\"line\">          result = &#123;<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">true</span>, <span class=\"string\">&quot;longitude&quot;</span>: tlong, <span class=\"string\">&quot;latitude&quot;</span>: tl&#125;;</span><br><span class=\"line\">          starLocate=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!starLocate) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    myLocPlugin.stopLocation();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">bool</span>&gt; requestPermission() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!(<span class=\"keyword\">await</span> Permission.location.isLimited ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isRestricted ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isGranted)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> Permission.location.request();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">await</span> Permission.location.isLimited ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isRestricted ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isGranted)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      Get.defaultDialog(title: <span class=\"string\">&quot;错误&quot;</span>,content: <span class=\"keyword\">const</span> Text(<span class=\"string\">&quot;无法获取位置信息，请手动设置权限后重启app&quot;</span>));</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这段直接引用了另外一个同学的代码，我自己用 get 插件的GetxController 成功封装过一次，不过现在想想封装逻辑较之不是很清晰。</p>\n<h3 id=\"2-由此引申的so文件\"><a href=\"#2-由此引申的so文件\" class=\"headerlink\" title=\"2.由此引申的so文件\"></a>2.由此引申的so文件</h3><p>在实现了上述的location的封装以及应用之后，想要自己做一个类似于百度地图app，故而尝试调用了百度地图api。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BMFMapOptions mapOptions = BMFMapOptions(</span><br><span class=\"line\">        center: BMFCoordinate(39.917215, 116.380341),</span><br><span class=\"line\">        zoomLevel: 12,</span><br><span class=\"line\">        mapPadding: BMFEdgeInsets(left: 30, top: 0, right: 30, bottom: 0));</span><br><span class=\"line\">Container(</span><br><span class=\"line\">      height: screenSize.height,</span><br><span class=\"line\">      width: screenSize.width,</span><br><span class=\"line\">      child: BMFMapWidget(</span><br><span class=\"line\">        onBMFMapCreated: (controller) &#123;</span><br><span class=\"line\">          onBMFMapCreated(controller);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        mapOptions: mapOptions,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n\n<p>成功按照文档配置好环境以后，出现了地图黑屏的问题（此时并没有退出）。然而在网上一些社区csdn 掘金 stackoverflow，并没有找到解决方案。观察控制台的报错，发现是 缺少了 libgnustl_shared.zip文件。 找了好久找到了下载地址：<a href=\"https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip\">https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip</a>?  然而按照网络上的方法配置到项目里后，没有用，故放弃。</p>\n<p>以下是so文件的简述以及作用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;.so&quot; 文件是一种共享库（Shared Object Library）文件的后缀名。这种文件格式通常在类Unix操作系统（如Linux）中使用。共享库包含一组预编译的可执行代码和数据，可以被多个程序共享，以提供共享的功能和资源。</span><br><span class=\"line\"></span><br><span class=\"line\">这些文件通常包含编译后的二进制代码，可以被动态链接到程序中，而不是静态地嵌入在每个程序中。这样做有助于减小程序文件的大小，同时允许多个程序共享相同的代码库，提高系统的效率。</span><br><span class=\"line\"></span><br><span class=\"line\">在Linux系统中，共享库文件通常存储在 &quot;/lib&quot; 或 &quot;/usr/lib&quot; 目录下，而应用程序通过动态链接器在运行时加载这些库。这种动态链接的方式有助于减少内存占用，同时简化程序的维护和更新。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"3-网易云api\"><a href=\"#3-网易云api\" class=\"headerlink\" title=\"3.网易云api\"></a>3.网易云api</h2><p>对接百度api失败之后有点烦，于是…</p>\n<p>涉及到的知识点：docker  、serveless 、nodejs跨域</p>\n<p>感谢开源项目：</p>\n<p>​\t\t1.github地址：<a href=\"mailto:&#103;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;\">&#103;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;</a>:Binaryify&#x2F;NeteaseCloudMusicApi.git</p>\n<p>​\t\t2.官方网站 :<a href=\"https://docs.neteasecloudmusicapi.binaryify.com/\">https://docs.neteasecloudmusicapi.binaryify.com/</a></p>\n<p>算是一个总结，也算是一个分享：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.克隆仓库并运行项目</span><br><span class=\"line\">git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git</span><br><span class=\"line\">cd NeteaseCloudMusicApi</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\">node app.js</span><br><span class=\"line\">//之后可以在默认3000端口访问到</span><br><span class=\"line\"></span><br><span class=\"line\">set PORT=4000 &amp;&amp; node app.js</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-docker-部署\"><a href=\"#1-docker-部署\" class=\"headerlink\" title=\"1.docker 部署\"></a>1.docker 部署</h3><p>docker 是在我大一下学期接触到的，当时一并学了vim，堪称利器。然而docker对当时的我相当于降维打击，很多概念都无法理解。现在则一学就会，验证了认识的螺旋上升性。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi &amp;&amp; cd NeteaseCloudMusicApi</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo docker build . -t netease-music-api</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo docker run -d -p 3000:3000 netease-music-api</span><br></pre></td></tr></table></figure>\n\n<p>可视化版本的，在docker应用里的”dev enviroments“里添加任务夹即可</p>\n<p>不过部署之后在客户端请求会遇到跨域问题，这点我们之后再说</p>\n<h3 id=\"2-跨域问题\"><a href=\"#2-跨域问题\" class=\"headerlink\" title=\"2. 跨域问题\"></a>2. 跨域问题</h3><p>因为本人是打算做一个flutter的android项目的，所以会遇到跨域问题</p>\n<p>以下是我在掘金上搜索到的node js解决代码， 不过我在本地运行之后并没有解决跨域，权且当一个记录，量变引起质变，或许早晚会用到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const http = require(&#x27;http&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 第一步：接受客户端请求</span><br><span class=\"line\">const server = http.createServer((request, response) =&gt; &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 代理服务器，直接和浏览器直接交互，也需要设置：CORS 的首部字段</span><br><span class=\"line\">    response.writeHead(200, &#123;</span><br><span class=\"line\">        &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27;,  // 设置 optins 方法允许所有服务器访问 </span><br><span class=\"line\">        &#x27;Access-Control-Allow-Methods&#x27;: &#x27;*&#x27;,</span><br><span class=\"line\">        &#x27;Access-Control-Allow-Headers&#x27;: &#x27;Content-Type&#x27;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 第二步：将请求转发给服务器</span><br><span class=\"line\">    const proxyRequest = http.request(&#123;</span><br><span class=\"line\">        host: &#x27;127.0.0.1&#x27;,</span><br><span class=\"line\">        port: 4000,</span><br><span class=\"line\">        url: &#x27;/&#x27;,</span><br><span class=\"line\">        method: request.method,</span><br><span class=\"line\">        headers: request.headers</span><br><span class=\"line\">    &#125;, (serverResponse) =&gt; &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        // 第三步：收到服务器的响应</span><br><span class=\"line\">        var body = &#x27;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">        serverResponse.on(&#x27;data&#x27;, (chunk) =&gt; &#123;</span><br><span class=\"line\">            body += chunk;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        serverResponse.on(&#x27;end&#x27;, () =&gt; &#123;</span><br><span class=\"line\">            console.log(&#x27;The data is &#x27; + body );</span><br><span class=\"line\">            </span><br><span class=\"line\">            // 第四步：将响应结果转发给浏览器</span><br><span class=\"line\">            response.end(body);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;).end();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">server.listen(3000, () =&gt; &#123;</span><br><span class=\"line\">    console.log(&#x27;The proxyServer is running at http://localhost:3000&#x27;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"3-serveless部署\"><a href=\"#3-serveless部署\" class=\"headerlink\" title=\"3.serveless部署\"></a>3.serveless部署</h3><p>网址： <a href=\"https://console.cloud.tencent.com/sls\">https://console.cloud.tencent.com/sls</a></p>\n<p>以下是步骤：</p>\n<ol>\n<li><p>fork 此项目</p>\n</li>\n<li><p>在腾讯云serverless应用管理页面( <a href=\"https://console.cloud.tencent.com/sls\">https://console.cloud.tencent.com/sls</a> ),点击<code>新建应用</code></p>\n</li>\n<li><p>顶部<code>创建方式</code>选择 <code>Web 应用</code></p>\n</li>\n<li><p>选择 <code>Express框架</code>,点击底部<code>下一步按钮</code></p>\n</li>\n<li><p>输入<code>应用名</code>,上传方式选择<code>代码仓库</code>,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目</p>\n</li>\n<li><p>启动文件填入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">export PORT=9000</span><br><span class=\"line\">/var/lang/node16/bin/node app.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击<code>完成</code>,等待部署完成,点击<code>资源列表</code>的 <code>API网关</code> 里的 <code>URL</code>,正常情况会打开文档地址,点击文档<code>例子</code>可查看接口调用效果</p>\n</li>\n</ol>\n<p>在serveless部署之后，跨域问题解决了。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>总的来说，我不是一个爱写文章的人。记起来从写人生第一篇作文开始，我的写作之路就没有遇到过坦途。曾经试着反思原因，大抵是因为一些完美主义倾向。譬如写了上一句，要对下一句的方向内容乃至把字句被字句都要犹豫很久。不过这也是可贵的，古代诗人曾经有过诗句。鸟宿池边树，僧敲月下门。为人性僻耽佳句，语不惊人死不休。想来那些欧阳修、柳宗元之类的大家都曾如此。</p>\n<p>就譬如写上一段以及这一段，大抵改了二十次有余。</p>\n<p>最近还是在做我名为 ”电梯维保“ 的项目，不过近几日工作少了些枯燥。添加了些百度api定位之类的，由此引出来了种种。</p>\n<p>以下是这几日我遇到的一些问题，权当是总结，也是为了以后找起来方便。</p>\n<h2 id=\"1-sourcetree-配置-github-SSH\"><a href=\"#1-sourcetree-配置-github-SSH\" class=\"headerlink\" title=\"1. sourcetree 配置 github  SSH\"></a>1. sourcetree 配置 github  SSH</h2><p>原因：在像往常一样用ssh拉取git仓库的时候报了 port：22   timeout错误，故此总结了两篇比较简洁的技术博客</p>\n<p>配置ssh ：<a href=\"https://juejin.cn/post/7224017330724175927\">https://juejin.cn/post/7224017330724175927</a></p>\n<p>修改config（如果没有config则新建）：<a href=\"https://blog.csdn.net/the__future/article/details/130038818\">https://blog.csdn.net/the__future/article/details/130038818</a></p>\n<h2 id=\"2-百度api\"><a href=\"#2-百度api\" class=\"headerlink\" title=\"2.百度api\"></a>2.百度api</h2><h3 id=\"1-百度api-location定位功能-封装代码\"><a href=\"#1-百度api-location定位功能-封装代码\" class=\"headerlink\" title=\"1.百度api  location定位功能   封装代码\"></a>1.百度api  location定位功能   封装代码</h3><p>以下是代码：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GetLocation</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">double</span> latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"built_in\">double</span> longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  GetLocation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> LocationFlutterPlugin myLocPlugin = LocationFlutterPlugin();</span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocation baiduLocation = BaiduLocation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">bool</span>&gt; locationInit() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;定位初始化&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// <span class=\"language-markdown\">动态申请定位权限</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">await</span> requestPermission()) &#123;</span><br><span class=\"line\">      myLocPlugin.setAgreePrivacy(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">      myLocPlugin.getApiKeyCallback(callback: (<span class=\"built_in\">String</span> result) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">String</span> str = result;</span><br><span class=\"line\">        log(<span class=\"string\">&#x27;鉴权结果：&#x27;</span> + str);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      myLocPlugin.seriesLocationCallback(</span><br><span class=\"line\">          callback: (BaiduLocation result) <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (result.latitude != <span class=\"keyword\">null</span> &amp;&amp; result.longitude != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">            longitude = result.longitude!;</span><br><span class=\"line\">            latitude = result.latitude!;</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            log(<span class=\"string\">&quot;错误码:<span class=\"subst\">$&#123;result.errorCode&#125;</span>  <span class=\"subst\">$&#123;result.errorInfo&#125;</span> <span class=\"subst\">$&#123;result.getMap().toString()&#125;</span>&quot;</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"built_in\">Map</span> androidMap = initAndroidOptions().getMap();</span><br><span class=\"line\">      <span class=\"built_in\">Map</span> iosMap = initIOSOptions().getMap();</span><br><span class=\"line\">      <span class=\"keyword\">var</span> _suc = <span class=\"keyword\">await</span> myLocPlugin.prepareLoc(androidMap, iosMap);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocationAndroidOption initAndroidOptions() &#123;</span><br><span class=\"line\">    BaiduLocationAndroidOption options = BaiduLocationAndroidOption(</span><br><span class=\"line\">        locationMode: BMFLocationMode.hightAccuracy,</span><br><span class=\"line\">        isNeedAddress: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedAltitude: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedLocationPoiList: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">        isNeedNewVersionRgc: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        isNeedLocationDescribe: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        openGps: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">        locationPurpose: BMFLocationPurpose.sport,</span><br><span class=\"line\">        coordType: BMFLocationCoordType.bd09ll,</span><br><span class=\"line\">        scanspan: <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> BaiduLocationIOSOption initIOSOptions() &#123;</span><br><span class=\"line\">    BaiduLocationIOSOption options = BaiduLocationIOSOption(</span><br><span class=\"line\">      coordType: BMFLocationCoordType.bd09ll,</span><br><span class=\"line\">      locationTimeout: <span class=\"number\">10</span>,</span><br><span class=\"line\">      reGeocodeTimeout: <span class=\"number\">10</span>,</span><br><span class=\"line\">      activityType: BMFActivityType.automotiveNavigation,</span><br><span class=\"line\">      desiredAccuracy: BMFDesiredAccuracy.best,</span><br><span class=\"line\">      isNeedNewVersionRgc: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">      pausesLocationUpdatesAutomatically: <span class=\"keyword\">false</span>,</span><br><span class=\"line\">      allowsBackgroundLocationUpdates: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">      distanceFilter: <span class=\"number\">10</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">Map</span>&gt; getLocationSingle() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> myLocPlugin.stopLocation();</span><br><span class=\"line\">    longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">Map</span> result = &#123;<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">false</span>&#125;;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;进入&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (count &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!starLocate) &#123;</span><br><span class=\"line\">        starLocate = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"built_in\">bool</span> test=<span class=\"keyword\">await</span> myLocPlugin.startLocation();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> Future.delayed(<span class=\"keyword\">const</span> <span class=\"built_in\">Duration</span>(seconds: <span class=\"number\">1</span>))</span><br><span class=\"line\">          .then((_) &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (longitude != <span class=\"number\">0</span> || latitude != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">double</span> tlong = longitude;</span><br><span class=\"line\">          <span class=\"built_in\">double</span> tl = latitude;</span><br><span class=\"line\">          result = &#123;<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">true</span>, <span class=\"string\">&quot;longitude&quot;</span>: tlong, <span class=\"string\">&quot;latitude&quot;</span>: tl&#125;;</span><br><span class=\"line\">          starLocate=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!starLocate) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    longitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    latitude = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    starLocate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    myLocPlugin.stopLocation();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;<span class=\"built_in\">bool</span>&gt; requestPermission() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!(<span class=\"keyword\">await</span> Permission.location.isLimited ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isRestricted ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isGranted)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">await</span> Permission.location.request();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">await</span> Permission.location.isLimited ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isRestricted ||</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Permission.location.isGranted)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      Get.defaultDialog(title: <span class=\"string\">&quot;错误&quot;</span>,content: <span class=\"keyword\">const</span> Text(<span class=\"string\">&quot;无法获取位置信息，请手动设置权限后重启app&quot;</span>));</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这段直接引用了另外一个同学的代码，我自己用 get 插件的GetxController 成功封装过一次，不过现在想想封装逻辑较之不是很清晰。</p>\n<h3 id=\"2-由此引申的so文件\"><a href=\"#2-由此引申的so文件\" class=\"headerlink\" title=\"2.由此引申的so文件\"></a>2.由此引申的so文件</h3><p>在实现了上述的location的封装以及应用之后，想要自己做一个类似于百度地图app，故而尝试调用了百度地图api。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BMFMapOptions mapOptions = BMFMapOptions(</span><br><span class=\"line\">        center: BMFCoordinate(39.917215, 116.380341),</span><br><span class=\"line\">        zoomLevel: 12,</span><br><span class=\"line\">        mapPadding: BMFEdgeInsets(left: 30, top: 0, right: 30, bottom: 0));</span><br><span class=\"line\">Container(</span><br><span class=\"line\">      height: screenSize.height,</span><br><span class=\"line\">      width: screenSize.width,</span><br><span class=\"line\">      child: BMFMapWidget(</span><br><span class=\"line\">        onBMFMapCreated: (controller) &#123;</span><br><span class=\"line\">          onBMFMapCreated(controller);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        mapOptions: mapOptions,</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n\n<p>成功按照文档配置好环境以后，出现了地图黑屏的问题（此时并没有退出）。然而在网上一些社区csdn 掘金 stackoverflow，并没有找到解决方案。观察控制台的报错，发现是 缺少了 libgnustl_shared.zip文件。 找了好久找到了下载地址：<a href=\"https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip\">https://ava3.androidfilehost.com/dl/JjPZ-RTGo8BAooDv19LIJQ/1705286685/24588232905720518/libgnustl_shared.zip</a>?  然而按照网络上的方法配置到项目里后，没有用，故放弃。</p>\n<p>以下是so文件的简述以及作用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;.so&quot; 文件是一种共享库（Shared Object Library）文件的后缀名。这种文件格式通常在类Unix操作系统（如Linux）中使用。共享库包含一组预编译的可执行代码和数据，可以被多个程序共享，以提供共享的功能和资源。</span><br><span class=\"line\"></span><br><span class=\"line\">这些文件通常包含编译后的二进制代码，可以被动态链接到程序中，而不是静态地嵌入在每个程序中。这样做有助于减小程序文件的大小，同时允许多个程序共享相同的代码库，提高系统的效率。</span><br><span class=\"line\"></span><br><span class=\"line\">在Linux系统中，共享库文件通常存储在 &quot;/lib&quot; 或 &quot;/usr/lib&quot; 目录下，而应用程序通过动态链接器在运行时加载这些库。这种动态链接的方式有助于减少内存占用，同时简化程序的维护和更新。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"3-网易云api\"><a href=\"#3-网易云api\" class=\"headerlink\" title=\"3.网易云api\"></a>3.网易云api</h2><p>对接百度api失败之后有点烦，于是…</p>\n<p>涉及到的知识点：docker  、serveless 、nodejs跨域</p>\n<p>感谢开源项目：</p>\n<p>​\t\t1.github地址：<a href=\"mailto:&#103;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;\">&#103;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;</a>:Binaryify&#x2F;NeteaseCloudMusicApi.git</p>\n<p>​\t\t2.官方网站 :<a href=\"https://docs.neteasecloudmusicapi.binaryify.com/\">https://docs.neteasecloudmusicapi.binaryify.com/</a></p>\n<p>算是一个总结，也算是一个分享：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.克隆仓库并运行项目</span><br><span class=\"line\">git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git</span><br><span class=\"line\">cd NeteaseCloudMusicApi</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\">node app.js</span><br><span class=\"line\">//之后可以在默认3000端口访问到</span><br><span class=\"line\"></span><br><span class=\"line\">set PORT=4000 &amp;&amp; node app.js</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-docker-部署\"><a href=\"#1-docker-部署\" class=\"headerlink\" title=\"1.docker 部署\"></a>1.docker 部署</h3><p>docker 是在我大一下学期接触到的，当时一并学了vim，堪称利器。然而docker对当时的我相当于降维打击，很多概念都无法理解。现在则一学就会，验证了认识的螺旋上升性。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi &amp;&amp; cd NeteaseCloudMusicApi</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo docker build . -t netease-music-api</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo docker run -d -p 3000:3000 netease-music-api</span><br></pre></td></tr></table></figure>\n\n<p>可视化版本的，在docker应用里的”dev enviroments“里添加任务夹即可</p>\n<p>不过部署之后在客户端请求会遇到跨域问题，这点我们之后再说</p>\n<h3 id=\"2-跨域问题\"><a href=\"#2-跨域问题\" class=\"headerlink\" title=\"2. 跨域问题\"></a>2. 跨域问题</h3><p>因为本人是打算做一个flutter的android项目的，所以会遇到跨域问题</p>\n<p>以下是我在掘金上搜索到的node js解决代码， 不过我在本地运行之后并没有解决跨域，权且当一个记录，量变引起质变，或许早晚会用到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const http = require(&#x27;http&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 第一步：接受客户端请求</span><br><span class=\"line\">const server = http.createServer((request, response) =&gt; &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 代理服务器，直接和浏览器直接交互，也需要设置：CORS 的首部字段</span><br><span class=\"line\">    response.writeHead(200, &#123;</span><br><span class=\"line\">        &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27;,  // 设置 optins 方法允许所有服务器访问 </span><br><span class=\"line\">        &#x27;Access-Control-Allow-Methods&#x27;: &#x27;*&#x27;,</span><br><span class=\"line\">        &#x27;Access-Control-Allow-Headers&#x27;: &#x27;Content-Type&#x27;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 第二步：将请求转发给服务器</span><br><span class=\"line\">    const proxyRequest = http.request(&#123;</span><br><span class=\"line\">        host: &#x27;127.0.0.1&#x27;,</span><br><span class=\"line\">        port: 4000,</span><br><span class=\"line\">        url: &#x27;/&#x27;,</span><br><span class=\"line\">        method: request.method,</span><br><span class=\"line\">        headers: request.headers</span><br><span class=\"line\">    &#125;, (serverResponse) =&gt; &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        // 第三步：收到服务器的响应</span><br><span class=\"line\">        var body = &#x27;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">        serverResponse.on(&#x27;data&#x27;, (chunk) =&gt; &#123;</span><br><span class=\"line\">            body += chunk;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        serverResponse.on(&#x27;end&#x27;, () =&gt; &#123;</span><br><span class=\"line\">            console.log(&#x27;The data is &#x27; + body );</span><br><span class=\"line\">            </span><br><span class=\"line\">            // 第四步：将响应结果转发给浏览器</span><br><span class=\"line\">            response.end(body);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;).end();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">server.listen(3000, () =&gt; &#123;</span><br><span class=\"line\">    console.log(&#x27;The proxyServer is running at http://localhost:3000&#x27;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"3-serveless部署\"><a href=\"#3-serveless部署\" class=\"headerlink\" title=\"3.serveless部署\"></a>3.serveless部署</h3><p>网址： <a href=\"https://console.cloud.tencent.com/sls\">https://console.cloud.tencent.com/sls</a></p>\n<p>以下是步骤：</p>\n<ol>\n<li><p>fork 此项目</p>\n</li>\n<li><p>在腾讯云serverless应用管理页面( <a href=\"https://console.cloud.tencent.com/sls\">https://console.cloud.tencent.com/sls</a> ),点击<code>新建应用</code></p>\n</li>\n<li><p>顶部<code>创建方式</code>选择 <code>Web 应用</code></p>\n</li>\n<li><p>选择 <code>Express框架</code>,点击底部<code>下一步按钮</code></p>\n</li>\n<li><p>输入<code>应用名</code>,上传方式选择<code>代码仓库</code>,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目</p>\n</li>\n<li><p>启动文件填入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">export PORT=9000</span><br><span class=\"line\">/var/lang/node16/bin/node app.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击<code>完成</code>,等待部署完成,点击<code>资源列表</code>的 <code>API网关</code> 里的 <code>URL</code>,正常情况会打开文档地址,点击文档<code>例子</code>可查看接口调用效果</p>\n</li>\n</ol>\n<p>在serveless部署之后，跨域问题解决了。</p>\n"},{"layout":"posts","title":"一个奇怪的bug解决（误）经历","date":"2023-12-03T02:47:29.000Z","_content":"\n# 一个奇怪的实现经历\n\n## 背景\n\n事情是这样的:2023年十一月的一个晚上，本人正陷于就业和找实习的泥潭中，焦虑不已。\n于是，遂观于某位学长的前端就业讲座之中，讲到最后，学长提到了“开源项目”，大惊。\n原因是本人上学期一直想投入到某个开源项目里，奈何实力不允许，便搁置。\n搁置也罢，罢不了的是，由于太忙，竟然完全忘了“开源项目”这个概念。\n于是便突发奇想：\n~~自己开源一个项目。~~\n做一个日期闹钟app，不仅在对应的时间提醒，还可以在对应的一段时间一直浮现在桌面上\n\n那么这时候就有人要问了：为什么不在应用商店找一个呢？\n原因有二：1.外面的app太繁杂 2.我愿意\n\n## 实现:系统通知功能\n\n几经翻找，发现flutter官方并没有提供闹钟的插件，在第三方库中找到了一个名为：flutter location notice的插件。\n\n事实上，几乎推进的很顺利，直到我发现了一个奇怪的属性。\n\n```dart\n const AndroidNotificationDetails androidNotificationDetails =\n    AndroidNotificationDetails('your channel id', 'your channel name',\n        channelDescription: 'your channel description',\n        importance: Importance.max,\n        priority: Priority.high,\n        ticker: 'ticker');\nconst NotificationDetails notificationDetails =\n    NotificationDetails(android: androidNotificationDetails);\nawait flutterLocalNotificationsPlugin.show(\n    0, 'plain title', 'plain body', notificationDetails,\n    payload: 'item x');\n```\n\n什么是channel id!？什么是channel name!？\n\n### 第一步:联想\n\n我之前做过一个腾讯云储存、腾讯云聊天的项目，里面有一个id的概念，那么这个channel id的获取方式是不是类似呢？\n思考思考思考思考思考，发现应该不是，这个channel id是一个字符串\n我的云储存云聊天，是基于腾讯云服务器的，理应要一个id\n但是提醒功能，只是基于本地的，理应不需要一个id\n\n### 第二步:stackoverflow\n\n这一步上，很快，我找到了一篇类似的问题\n\n#### [flutter local notification: what's the channel id?](https://stackoverflow.com/questions/53803552/flutter-local-notification-whats-the-channel-id)\n\n喜悦之情溢于言表，然而细细看去\n这篇问题的答案对于我来说就是驴唇不对马嘴：\n\n我要问的是： channel id是什么？怎么获取？\n而不是：channel id 有什么用\n（悲伤）\n\n一秒回到解放前\n\n### 第三步: developer\n\n究其技术原因，不过是利用了android method channel，封装了一些方法\n实现功能还是要依靠原生android的api\n\n既然如此，那么我就去看看android developer的文档吧!\n\n#### [创建和管理通知渠道](https://developer.android.com/training/notify-user/channels?hl=zh-cn#CreateChannel)\n\n> 通知渠道是用户可在 Android 系统的通知设置中看到的通知类别。您可以为您的应用创建多个通知渠道。\n> 例如，您可以为您的应用的每个通知类型创建一个通知渠道。您可以在每个渠道上设置通知行为，例如您可以在某些渠道上启用或禁用通知提示、在其他渠道上显示通知标记、或在其他渠道上启用或禁用通知徽标。\n\n所以，通知渠道应该指的是：弹窗、声音、震动等等\n但是，文档里面并没有提到channel id的获取方式\n\n### 第四步:从头再捋一遍\n\n既然哪里都没有提到channel id的获取方式，那么我就从头再完成一遍插件的实现吧！\n\n第一步，初始化\n\n```Dart\nFlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =\n      FlutterLocalNotificationsPlugin();\nconst AndroidInitializationSettings initializationSettingsAndroid =\n      AndroidInitializationSettings('app_icon');\nfinal InitializationSettings initializationSettings = InitializationSettings(\n      android: initializationSettingsAndroid);\nawait flutterLocalNotificationsPlugin.initialize(initializationSettings,\n      onDidReceiveNotificationResponse: onDidReceiveNotificationResponse);\n```\n\n第二步，创建通知渠道\n\n```Dart\nconst AndroidNotificationDetails androidPlatformChannelSpecifics =\n      AndroidNotificationDetails('your channel id', 'your channel name',\n          'your channel description',\n          importance: Importance.max,\n          priority: Priority.high,\n          showWhen: false);\n```\n\n在这时,我凭借一种摆烂直觉，将channel id改为了一个随机字符串，然后运行，发现，没有任何问题，通知竟然也正常弹出了\n\n# 什么是channel id!？什么是channel name!？\n","source":"_posts/1android_local_notification.md","raw":"---\nlayout: posts\ntitle: 一个奇怪的bug解决（误）经历\ndate: 2023-12-03 10:47:29\ntags:\n  - android\n  - flutter\n---\n\n# 一个奇怪的实现经历\n\n## 背景\n\n事情是这样的:2023年十一月的一个晚上，本人正陷于就业和找实习的泥潭中，焦虑不已。\n于是，遂观于某位学长的前端就业讲座之中，讲到最后，学长提到了“开源项目”，大惊。\n原因是本人上学期一直想投入到某个开源项目里，奈何实力不允许，便搁置。\n搁置也罢，罢不了的是，由于太忙，竟然完全忘了“开源项目”这个概念。\n于是便突发奇想：\n~~自己开源一个项目。~~\n做一个日期闹钟app，不仅在对应的时间提醒，还可以在对应的一段时间一直浮现在桌面上\n\n那么这时候就有人要问了：为什么不在应用商店找一个呢？\n原因有二：1.外面的app太繁杂 2.我愿意\n\n## 实现:系统通知功能\n\n几经翻找，发现flutter官方并没有提供闹钟的插件，在第三方库中找到了一个名为：flutter location notice的插件。\n\n事实上，几乎推进的很顺利，直到我发现了一个奇怪的属性。\n\n```dart\n const AndroidNotificationDetails androidNotificationDetails =\n    AndroidNotificationDetails('your channel id', 'your channel name',\n        channelDescription: 'your channel description',\n        importance: Importance.max,\n        priority: Priority.high,\n        ticker: 'ticker');\nconst NotificationDetails notificationDetails =\n    NotificationDetails(android: androidNotificationDetails);\nawait flutterLocalNotificationsPlugin.show(\n    0, 'plain title', 'plain body', notificationDetails,\n    payload: 'item x');\n```\n\n什么是channel id!？什么是channel name!？\n\n### 第一步:联想\n\n我之前做过一个腾讯云储存、腾讯云聊天的项目，里面有一个id的概念，那么这个channel id的获取方式是不是类似呢？\n思考思考思考思考思考，发现应该不是，这个channel id是一个字符串\n我的云储存云聊天，是基于腾讯云服务器的，理应要一个id\n但是提醒功能，只是基于本地的，理应不需要一个id\n\n### 第二步:stackoverflow\n\n这一步上，很快，我找到了一篇类似的问题\n\n#### [flutter local notification: what's the channel id?](https://stackoverflow.com/questions/53803552/flutter-local-notification-whats-the-channel-id)\n\n喜悦之情溢于言表，然而细细看去\n这篇问题的答案对于我来说就是驴唇不对马嘴：\n\n我要问的是： channel id是什么？怎么获取？\n而不是：channel id 有什么用\n（悲伤）\n\n一秒回到解放前\n\n### 第三步: developer\n\n究其技术原因，不过是利用了android method channel，封装了一些方法\n实现功能还是要依靠原生android的api\n\n既然如此，那么我就去看看android developer的文档吧!\n\n#### [创建和管理通知渠道](https://developer.android.com/training/notify-user/channels?hl=zh-cn#CreateChannel)\n\n> 通知渠道是用户可在 Android 系统的通知设置中看到的通知类别。您可以为您的应用创建多个通知渠道。\n> 例如，您可以为您的应用的每个通知类型创建一个通知渠道。您可以在每个渠道上设置通知行为，例如您可以在某些渠道上启用或禁用通知提示、在其他渠道上显示通知标记、或在其他渠道上启用或禁用通知徽标。\n\n所以，通知渠道应该指的是：弹窗、声音、震动等等\n但是，文档里面并没有提到channel id的获取方式\n\n### 第四步:从头再捋一遍\n\n既然哪里都没有提到channel id的获取方式，那么我就从头再完成一遍插件的实现吧！\n\n第一步，初始化\n\n```Dart\nFlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =\n      FlutterLocalNotificationsPlugin();\nconst AndroidInitializationSettings initializationSettingsAndroid =\n      AndroidInitializationSettings('app_icon');\nfinal InitializationSettings initializationSettings = InitializationSettings(\n      android: initializationSettingsAndroid);\nawait flutterLocalNotificationsPlugin.initialize(initializationSettings,\n      onDidReceiveNotificationResponse: onDidReceiveNotificationResponse);\n```\n\n第二步，创建通知渠道\n\n```Dart\nconst AndroidNotificationDetails androidPlatformChannelSpecifics =\n      AndroidNotificationDetails('your channel id', 'your channel name',\n          'your channel description',\n          importance: Importance.max,\n          priority: Priority.high,\n          showWhen: false);\n```\n\n在这时,我凭借一种摆烂直觉，将channel id改为了一个随机字符串，然后运行，发现，没有任何问题，通知竟然也正常弹出了\n\n# 什么是channel id!？什么是channel name!？\n","slug":"1android_local_notification","published":1,"updated":"2023-12-16T13:40:41.018Z","comments":1,"photos":[],"link":"","_id":"clrhvmx9c0001ns6k7x7idw64","content":"<h1 id=\"一个奇怪的实现经历\"><a href=\"#一个奇怪的实现经历\" class=\"headerlink\" title=\"一个奇怪的实现经历\"></a>一个奇怪的实现经历</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>事情是这样的:2023年十一月的一个晚上，本人正陷于就业和找实习的泥潭中，焦虑不已。<br>于是，遂观于某位学长的前端就业讲座之中，讲到最后，学长提到了“开源项目”，大惊。<br>原因是本人上学期一直想投入到某个开源项目里，奈何实力不允许，便搁置。<br>搁置也罢，罢不了的是，由于太忙，竟然完全忘了“开源项目”这个概念。<br>于是便突发奇想：<br><del>自己开源一个项目。</del><br>做一个日期闹钟app，不仅在对应的时间提醒，还可以在对应的一段时间一直浮现在桌面上</p>\n<p>那么这时候就有人要问了：为什么不在应用商店找一个呢？<br>原因有二：1.外面的app太繁杂 2.我愿意</p>\n<h2 id=\"实现-系统通知功能\"><a href=\"#实现-系统通知功能\" class=\"headerlink\" title=\"实现:系统通知功能\"></a>实现:系统通知功能</h2><p>几经翻找，发现flutter官方并没有提供闹钟的插件，在第三方库中找到了一个名为：flutter location notice的插件。</p>\n<p>事实上，几乎推进的很顺利，直到我发现了一个奇怪的属性。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> AndroidNotificationDetails androidNotificationDetails =</span><br><span class=\"line\">    AndroidNotificationDetails(<span class=\"string\">&#x27;your channel id&#x27;</span>, <span class=\"string\">&#x27;your channel name&#x27;</span>,</span><br><span class=\"line\">        channelDescription: <span class=\"string\">&#x27;your channel description&#x27;</span>,</span><br><span class=\"line\">        importance: Importance.max,</span><br><span class=\"line\">        priority: Priority.high,</span><br><span class=\"line\">        ticker: <span class=\"string\">&#x27;ticker&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> NotificationDetails notificationDetails =</span><br><span class=\"line\">    NotificationDetails(android: androidNotificationDetails);</span><br><span class=\"line\"><span class=\"keyword\">await</span> flutterLocalNotificationsPlugin.<span class=\"keyword\">show</span>(</span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"string\">&#x27;plain title&#x27;</span>, <span class=\"string\">&#x27;plain body&#x27;</span>, notificationDetails,</span><br><span class=\"line\">    payload: <span class=\"string\">&#x27;item x&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>什么是channel id!？什么是channel name!？</p>\n<h3 id=\"第一步-联想\"><a href=\"#第一步-联想\" class=\"headerlink\" title=\"第一步:联想\"></a>第一步:联想</h3><p>我之前做过一个腾讯云储存、腾讯云聊天的项目，里面有一个id的概念，那么这个channel id的获取方式是不是类似呢？<br>思考思考思考思考思考，发现应该不是，这个channel id是一个字符串<br>我的云储存云聊天，是基于腾讯云服务器的，理应要一个id<br>但是提醒功能，只是基于本地的，理应不需要一个id</p>\n<h3 id=\"第二步-stackoverflow\"><a href=\"#第二步-stackoverflow\" class=\"headerlink\" title=\"第二步:stackoverflow\"></a>第二步:stackoverflow</h3><p>这一步上，很快，我找到了一篇类似的问题</p>\n<h4 id=\"flutter-local-notification-what’s-the-channel-id\"><a href=\"#flutter-local-notification-what’s-the-channel-id\" class=\"headerlink\" title=\"flutter local notification: what’s the channel id?\"></a><a href=\"https://stackoverflow.com/questions/53803552/flutter-local-notification-whats-the-channel-id\">flutter local notification: what’s the channel id?</a></h4><p>喜悦之情溢于言表，然而细细看去<br>这篇问题的答案对于我来说就是驴唇不对马嘴：</p>\n<p>我要问的是： channel id是什么？怎么获取？<br>而不是：channel id 有什么用<br>（悲伤）</p>\n<p>一秒回到解放前</p>\n<h3 id=\"第三步-developer\"><a href=\"#第三步-developer\" class=\"headerlink\" title=\"第三步: developer\"></a>第三步: developer</h3><p>究其技术原因，不过是利用了android method channel，封装了一些方法<br>实现功能还是要依靠原生android的api</p>\n<p>既然如此，那么我就去看看android developer的文档吧!</p>\n<h4 id=\"创建和管理通知渠道\"><a href=\"#创建和管理通知渠道\" class=\"headerlink\" title=\"创建和管理通知渠道\"></a><a href=\"https://developer.android.com/training/notify-user/channels?hl=zh-cn#CreateChannel\">创建和管理通知渠道</a></h4><blockquote>\n<p>通知渠道是用户可在 Android 系统的通知设置中看到的通知类别。您可以为您的应用创建多个通知渠道。<br>例如，您可以为您的应用的每个通知类型创建一个通知渠道。您可以在每个渠道上设置通知行为，例如您可以在某些渠道上启用或禁用通知提示、在其他渠道上显示通知标记、或在其他渠道上启用或禁用通知徽标。</p>\n</blockquote>\n<p>所以，通知渠道应该指的是：弹窗、声音、震动等等<br>但是，文档里面并没有提到channel id的获取方式</p>\n<h3 id=\"第四步-从头再捋一遍\"><a href=\"#第四步-从头再捋一遍\" class=\"headerlink\" title=\"第四步:从头再捋一遍\"></a>第四步:从头再捋一遍</h3><p>既然哪里都没有提到channel id的获取方式，那么我就从头再完成一遍插件的实现吧！</p>\n<p>第一步，初始化</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =</span><br><span class=\"line\">      FlutterLocalNotificationsPlugin();</span><br><span class=\"line\"><span class=\"keyword\">const</span> AndroidInitializationSettings initializationSettingsAndroid =</span><br><span class=\"line\">      AndroidInitializationSettings(<span class=\"string\">&#x27;app_icon&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">final</span> InitializationSettings initializationSettings = InitializationSettings(</span><br><span class=\"line\">      android: initializationSettingsAndroid);</span><br><span class=\"line\"><span class=\"keyword\">await</span> flutterLocalNotificationsPlugin.initialize(initializationSettings,</span><br><span class=\"line\">      onDidReceiveNotificationResponse: onDidReceiveNotificationResponse);</span><br></pre></td></tr></table></figure>\n\n<p>第二步，创建通知渠道</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> AndroidNotificationDetails androidPlatformChannelSpecifics =</span><br><span class=\"line\">      AndroidNotificationDetails(<span class=\"string\">&#x27;your channel id&#x27;</span>, <span class=\"string\">&#x27;your channel name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;your channel description&#x27;</span>,</span><br><span class=\"line\">          importance: Importance.max,</span><br><span class=\"line\">          priority: Priority.high,</span><br><span class=\"line\">          showWhen: <span class=\"keyword\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>在这时,我凭借一种摆烂直觉，将channel id改为了一个随机字符串，然后运行，发现，没有任何问题，通知竟然也正常弹出了</p>\n<h1 id=\"什么是channel-id-？什么是channel-name-？\"><a href=\"#什么是channel-id-？什么是channel-name-？\" class=\"headerlink\" title=\"什么是channel id!？什么是channel name!？\"></a>什么是channel id!？什么是channel name!？</h1>","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<h1 id=\"一个奇怪的实现经历\"><a href=\"#一个奇怪的实现经历\" class=\"headerlink\" title=\"一个奇怪的实现经历\"></a>一个奇怪的实现经历</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>事情是这样的:2023年十一月的一个晚上，本人正陷于就业和找实习的泥潭中，焦虑不已。<br>于是，遂观于某位学长的前端就业讲座之中，讲到最后，学长提到了“开源项目”，大惊。<br>原因是本人上学期一直想投入到某个开源项目里，奈何实力不允许，便搁置。<br>搁置也罢，罢不了的是，由于太忙，竟然完全忘了“开源项目”这个概念。<br>于是便突发奇想：<br><del>自己开源一个项目。</del><br>做一个日期闹钟app，不仅在对应的时间提醒，还可以在对应的一段时间一直浮现在桌面上</p>\n<p>那么这时候就有人要问了：为什么不在应用商店找一个呢？<br>原因有二：1.外面的app太繁杂 2.我愿意</p>\n<h2 id=\"实现-系统通知功能\"><a href=\"#实现-系统通知功能\" class=\"headerlink\" title=\"实现:系统通知功能\"></a>实现:系统通知功能</h2><p>几经翻找，发现flutter官方并没有提供闹钟的插件，在第三方库中找到了一个名为：flutter location notice的插件。</p>\n<p>事实上，几乎推进的很顺利，直到我发现了一个奇怪的属性。</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">const</span> AndroidNotificationDetails androidNotificationDetails =</span><br><span class=\"line\">    AndroidNotificationDetails(<span class=\"string\">&#x27;your channel id&#x27;</span>, <span class=\"string\">&#x27;your channel name&#x27;</span>,</span><br><span class=\"line\">        channelDescription: <span class=\"string\">&#x27;your channel description&#x27;</span>,</span><br><span class=\"line\">        importance: Importance.max,</span><br><span class=\"line\">        priority: Priority.high,</span><br><span class=\"line\">        ticker: <span class=\"string\">&#x27;ticker&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> NotificationDetails notificationDetails =</span><br><span class=\"line\">    NotificationDetails(android: androidNotificationDetails);</span><br><span class=\"line\"><span class=\"keyword\">await</span> flutterLocalNotificationsPlugin.<span class=\"keyword\">show</span>(</span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"string\">&#x27;plain title&#x27;</span>, <span class=\"string\">&#x27;plain body&#x27;</span>, notificationDetails,</span><br><span class=\"line\">    payload: <span class=\"string\">&#x27;item x&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>什么是channel id!？什么是channel name!？</p>\n<h3 id=\"第一步-联想\"><a href=\"#第一步-联想\" class=\"headerlink\" title=\"第一步:联想\"></a>第一步:联想</h3><p>我之前做过一个腾讯云储存、腾讯云聊天的项目，里面有一个id的概念，那么这个channel id的获取方式是不是类似呢？<br>思考思考思考思考思考，发现应该不是，这个channel id是一个字符串<br>我的云储存云聊天，是基于腾讯云服务器的，理应要一个id<br>但是提醒功能，只是基于本地的，理应不需要一个id</p>\n<h3 id=\"第二步-stackoverflow\"><a href=\"#第二步-stackoverflow\" class=\"headerlink\" title=\"第二步:stackoverflow\"></a>第二步:stackoverflow</h3><p>这一步上，很快，我找到了一篇类似的问题</p>\n<h4 id=\"flutter-local-notification-what’s-the-channel-id\"><a href=\"#flutter-local-notification-what’s-the-channel-id\" class=\"headerlink\" title=\"flutter local notification: what’s the channel id?\"></a><a href=\"https://stackoverflow.com/questions/53803552/flutter-local-notification-whats-the-channel-id\">flutter local notification: what’s the channel id?</a></h4><p>喜悦之情溢于言表，然而细细看去<br>这篇问题的答案对于我来说就是驴唇不对马嘴：</p>\n<p>我要问的是： channel id是什么？怎么获取？<br>而不是：channel id 有什么用<br>（悲伤）</p>\n<p>一秒回到解放前</p>\n<h3 id=\"第三步-developer\"><a href=\"#第三步-developer\" class=\"headerlink\" title=\"第三步: developer\"></a>第三步: developer</h3><p>究其技术原因，不过是利用了android method channel，封装了一些方法<br>实现功能还是要依靠原生android的api</p>\n<p>既然如此，那么我就去看看android developer的文档吧!</p>\n<h4 id=\"创建和管理通知渠道\"><a href=\"#创建和管理通知渠道\" class=\"headerlink\" title=\"创建和管理通知渠道\"></a><a href=\"https://developer.android.com/training/notify-user/channels?hl=zh-cn#CreateChannel\">创建和管理通知渠道</a></h4><blockquote>\n<p>通知渠道是用户可在 Android 系统的通知设置中看到的通知类别。您可以为您的应用创建多个通知渠道。<br>例如，您可以为您的应用的每个通知类型创建一个通知渠道。您可以在每个渠道上设置通知行为，例如您可以在某些渠道上启用或禁用通知提示、在其他渠道上显示通知标记、或在其他渠道上启用或禁用通知徽标。</p>\n</blockquote>\n<p>所以，通知渠道应该指的是：弹窗、声音、震动等等<br>但是，文档里面并没有提到channel id的获取方式</p>\n<h3 id=\"第四步-从头再捋一遍\"><a href=\"#第四步-从头再捋一遍\" class=\"headerlink\" title=\"第四步:从头再捋一遍\"></a>第四步:从头再捋一遍</h3><p>既然哪里都没有提到channel id的获取方式，那么我就从头再完成一遍插件的实现吧！</p>\n<p>第一步，初始化</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =</span><br><span class=\"line\">      FlutterLocalNotificationsPlugin();</span><br><span class=\"line\"><span class=\"keyword\">const</span> AndroidInitializationSettings initializationSettingsAndroid =</span><br><span class=\"line\">      AndroidInitializationSettings(<span class=\"string\">&#x27;app_icon&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">final</span> InitializationSettings initializationSettings = InitializationSettings(</span><br><span class=\"line\">      android: initializationSettingsAndroid);</span><br><span class=\"line\"><span class=\"keyword\">await</span> flutterLocalNotificationsPlugin.initialize(initializationSettings,</span><br><span class=\"line\">      onDidReceiveNotificationResponse: onDidReceiveNotificationResponse);</span><br></pre></td></tr></table></figure>\n\n<p>第二步，创建通知渠道</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> AndroidNotificationDetails androidPlatformChannelSpecifics =</span><br><span class=\"line\">      AndroidNotificationDetails(<span class=\"string\">&#x27;your channel id&#x27;</span>, <span class=\"string\">&#x27;your channel name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;your channel description&#x27;</span>,</span><br><span class=\"line\">          importance: Importance.max,</span><br><span class=\"line\">          priority: Priority.high,</span><br><span class=\"line\">          showWhen: <span class=\"keyword\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>在这时,我凭借一种摆烂直觉，将channel id改为了一个随机字符串，然后运行，发现，没有任何问题，通知竟然也正常弹出了</p>\n<h1 id=\"什么是channel-id-？什么是channel-name-？\"><a href=\"#什么是channel-id-？什么是channel-name-？\" class=\"headerlink\" title=\"什么是channel id!？什么是channel name!？\"></a>什么是channel id!？什么是channel name!？</h1>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clrhvmx970000ns6k1lyxb1e1","tag_id":"clpoxrew80003946kh3btf25m","_id":"clrhvmx9e0002ns6k49pd7l3i"},{"post_id":"clrhvmx970000ns6k1lyxb1e1","tag_id":"clpoxrewa0005946kdmu103x4","_id":"clrhvmx9e0003ns6kdclzf1nj"},{"post_id":"clrhvmx9c0001ns6k7x7idw64","tag_id":"clpoxrew80003946kh3btf25m","_id":"clrhvmx9e0004ns6k6bosbm0e"},{"post_id":"clrhvmx9c0001ns6k7x7idw64","tag_id":"clpoxrewa0005946kdmu103x4","_id":"clrhvmx9e0005ns6k8wbxbk3k"}],"Tag":[{"name":"android","_id":"clpoxrew80003946kh3btf25m"},{"name":"flutter","_id":"clpoxrewa0005946kdmu103x4"}]}}